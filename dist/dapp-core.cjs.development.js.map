{"version":3,"file":"dapp-core.cjs.development.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/constants/errorsMessages.ts","../src/constants/network.ts","../src/constants/ledgerErrorCodes.ts","../src/constants/index.ts","../src/types/enums.ts","../src/providers/utils.ts","../src/providers/accountProvider.ts","../src/redux/commonActions.ts","../src/utils/storage/local.ts","../src/optionalPackages/moment.ts","../src/utils/storage/session.ts","../src/utils/storage/index.ts","../src/storage/local.ts","../src/redux/slices/loginInfoSlice.ts","../src/utils/internal/optionalRedirect.ts","../src/utils/internal/getBridgeAddressFromNetwork.ts","../src/redux/slices/networkConfigSlice.ts","../src/redux/slices/accountInfoSlice.ts","../src/utils/transactions/transactionStateByStatus.ts","../src/types/transactions.ts","../src/utils/decoders/decodePart.ts","../src/utils/decoders/base64Utils.ts","../src/utils/getAllStringOccurrences.ts","../src/utils/transactions/parseMultiEsdtTransferData.ts","../src/utils/account/addressIsValid.ts","../src/utils/transactions/getTokenFromData.ts","../src/utils/transactions/isTokenTransfer.ts","../src/utils/transactions/builtCallbackUrl.ts","../src/utils/transactions/parseTransactionAfterSigning.ts","../src/redux/slices/transactionsSlice.ts","../src/redux/slices/transactionsInfoSlice.ts","../src/redux/slices/modalsSlice.ts","../src/redux/selectors/helpers.ts","../src/redux/selectors/accountInfoSelectors.ts","../src/redux/selectors/loginInfoSelectors.ts","../src/redux/middlewares/loginSessionMiddleware.ts","../src/redux/reducers.ts","../src/redux/store.ts","../src/redux/selectors/networkConfigSelectors.ts","../src/models/newTransaction.ts","../src/redux/selectors/transactionsSelectors.ts","../src/redux/selectors/transactionsInfoSelectors.ts","../src/redux/selectors/modalsSelectors.ts","../src/utils/getIsLoggedIn.ts","../src/utils/logout.ts","../src/utils/buildUrlParams.ts","../src/utils/switchTrue.ts","../src/utils/network/getAccountProviderType.ts","../src/utils/network/getChainID.ts","../src/utils/network/getNetworkConfig.ts","../src/utils/network/getEgldLabel.ts","../src/utils/network/getIsProviderEqualTo.ts","../src/utils/account/getAddress.tsx","../src/providers/proxyProvider.ts","../src/utils/account/getAccount.tsx","../src/utils/account/setNonce.tsx","../src/utils/account/getLatestNonce.tsx","../src/utils/account/getAccountBalance.tsx","../src/utils/account/refreshAccount.tsx","../src/utils/account/getShardOfAddress.ts","../src/utils/account/signMessage.ts","../src/utils/account/loginWithExternalProvider.ts","../src/utils/math.ts","../src/utils/validation/stringIsInteger.ts","../src/utils/validation/stringIsFloat.ts","../src/utils/validation/getIdentifierType.ts","../src/utils/operations/pipe.ts","../src/utils/operations/denominate.ts","../src/utils/operations/nominate.ts","../src/utils/operations/calculateFeeLimit.ts","../src/utils/operations/getUsdValue.tsx","../src/utils/smartContracts.ts","../src/optionalPackages/classnames.ts","../src/utils/getGeneratedClasses.ts","../src/utils/wrapperClassName.ts","../src/redux/DappProviderContext.ts","../src/services/login/useExtensionLogin.ts","../src/services/login/useWebWalletLogin.ts","../src/services/login/useLedgerLogin.ts","../src/hooks/useUpdateEffect.ts","../src/services/login/useWalletConnectLogin.ts","../src/services/transactions/clearTransactions.ts","../src/services/transactions/utils.ts","../src/services/transactions/signTransactions.tsx","../src/services/transactions/transformAndSignTransactions.ts","../src/services/transactions/sendTransactions.ts","../src/services/transactions/hooks/useTrackTransactionStatus.ts","../src/services/transactions/hooks/useGetPendingTransactions.ts","../src/services/transactions/hooks/useGetFailedTransactions.ts","../src/services/transactions/hooks/useGetSuccessfulTransactions.ts","../src/services/transactions/hooks/useParseMultiEsdtTransferData.ts","../src/services/transactions/hooks/useGetActiveTransactionsStatus.ts","../src/services/transactions/hooks/useGetCompletedTransactions.ts","../src/apiCalls/transactions/sendSignedTransactions.ts","../src/apiCalls/transactions/getTransactionsByHashes.ts","../src/components/ProviderInitializer.tsx","../src/contexts/OverrideDefaultBehaviourContext.tsx","../src/components/TransactionSender/index.ts","../src/components/TransactionsTracker/TransactionStatusTracker.tsx","../src/components/TransactionsTracker/index.tsx","../src/apiCalls/configuration/getServerConfiguration.ts","../src/apiCalls/configuration/getServerConfigurationForEnvironment.ts","../src/apiCalls/getScamAddressData.ts","../src/hooks/useGetNetworkConfig.ts","../src/hooks/useGetNotification.ts","../src/hooks/transactions/useGetTransactionDisplayInfo.ts","../src/hooks/transactions/useParseSignedTransactions.tsx","../src/hooks/transactions/useSignTransactions.tsx","../src/hooks/transactions/useGetSignedTransactions.ts","../src/optionalPackages/swr.ts","../src/hooks/transactions/useGetTokenDetails.tsx","../src/hooks/account/useGetAccountInfo.ts","../src/hooks/account/useGetLoginInfo.ts","../src/hooks/account/useGetAccountProvider.ts","../src/hooks/transactions/useSignTransactionsWithLedger.tsx","../src/hooks/transactions/useGetSignTransactionsError.ts","../src/hooks/useIdleTimer.tsx","../src/utils/account/getAccountShard.tsx","../src/wrappers/AppInitializer.tsx","../src/redux/DappProvider.tsx","../src/wrappers/AuthenticatedRoutesWrapper/index.tsx","../src/models/TransactionParameter.ts","../src/wrappers/withClassNameWrapper.tsx","../src/UI/Denominate/index.tsx","../src/optionalPackages/fortawesome-free-solid-svg-icons.ts","../src/optionalPackages/react-fontawesome.ts","../src/UI/ExplorerLink/index.tsx","../src/UI/extension/LoginButton/index.tsx","../src/optionalPackages/react-bootstrap.tsx","../src/UI/ModalContainer/index.tsx","../src/UI/PageState/index.tsx","../src/UI/ledger/LoginModal/AddressRow.tsx","../src/UI/ledger/LoginModal/AddressTable.tsx","../src/UI/ledger/LoginModal/ConfirmAddress.tsx","../src/UI/ledger/LoginModal/LedgerConnect.tsx","../src/UI/ledger/LoginModal/index.tsx","../src/UI/ledger/LoginButton/index.tsx","../src/UI/NotificationModal/index.tsx","../src/UI/ProgressSteps/Dot.tsx","../src/UI/ProgressSteps/index.tsx","../src/UI/SignTransactionsModals/SignWithExtensionModal/index.tsx","../src/UI/TokenDetails/TokenSymbol/index.tsx","../src/UI/TokenDetails/index.tsx","../src/UI/TransactionData/index.tsx","../src/UI/SignTransactionsModals/SignWithLedgerModal/SignStep.tsx","../src/UI/SignTransactionsModals/SignWithLedgerModal/index.tsx","../src/UI/SignTransactionsModals/SignWithWalletConnectModal/index.tsx","../src/UI/SignTransactionsModals/index.tsx","../src/storage/session.ts","../src/services/transactions/isCrossShardTransaction.ts","../src/UI/IconState/index.tsx","../src/UI/Progress/index.tsx","../src/UI/CopyButton/helpers/copyToClipboard.tsx","../src/UI/CopyButton/index.tsx","../src/UI/Trim/index.tsx","../src/UI/TxDetails/index.tsx","../src/UI/TransactionToast/index.tsx","../src/UI/TransactionsToastList/index.tsx","../src/UI/UsdValue/index.tsx","../src/optionalPackages/platform.ts","../src/optionalPackages/qrcode.ts","../src/UI/walletConnect/WalletConnectLoginContainer/index.tsx","../src/UI/walletConnect/WalletConnectLoginButton/index.tsx","../src/UI/webWallet/LoginButton/index.tsx","../src/UI/pages/UnlockPage/index.tsx","../src/providers/apiProvider.ts","../src/constants/mnemonicWords.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const ERROR_SIGNING= 'error when signing';\nexport const TRANSACTION_CANCELLED = 'Transaction cancelled';\nexport const ERROR_SIGNING_TX = 'error signing transaction';\nexport const PROVIDER_NOT_INTIALIZED = 'provider not intialized';\nexport const MISSING_PROVIDER_MESSAGE = 'You need a signer/valid signer to send a transaction,use either WalletProvider, LedgerProvider or WalletConnect';\n","import { EnvironmentsEnum, NetworkType } from 'types';\n\nexport const DEFAULT_MIN_GAS_LIMIT = 50_000;\n\nexport const configEndpoint = 'dapp/config';\n\nexport const fallbackNetworkConfigurations: Record<\n  keyof typeof EnvironmentsEnum,\n  NetworkType\n> = {\n  devnet: {\n    id: 'devnet',\n    chainId: 'D',\n    name: 'Devnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://devnet-wallet.elrond.com',\n    apiAddress: 'https://devnet-api.elrond.com',\n    explorerAddress: 'http://devnet-explorer.elrond.com',\n    apiTimeout: '4000'\n  },\n  testnet: {\n    id: 'testnet',\n    chainId: 'T',\n    name: 'Testnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://testnet-wallet.elrond.com',\n    apiAddress: 'https://testnet-api.elrond.com',\n    explorerAddress: 'http://testnet-explorer.elrond.com',\n    apiTimeout: '4000'\n  },\n  mainnet: {\n    id: 'mainnet',\n    chainId: '1',\n    name: 'Mainnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://wallet.elrond.com',\n    apiAddress: 'https://api.elrond.com',\n    explorerAddress: 'https://explorer.elrond.com',\n    apiTimeout: '4000'\n  }\n};\n","const ledgerErrorCodes = {\n  0x9000: {\n    code: 'codeSuccess',\n    message: 'Success'\n  },\n  0x6985: {\n    code: 'ERR_USER_DENIED',\n    message: 'Rejected by user'\n  },\n  0x6d00: {\n    code: 'ERR_UNKNOWN_INSTRUCTION',\n    message: 'Unknown instruction'\n  },\n  0x6e00: {\n    code: 'ERR_WRONG_CLA',\n    message: 'Wrong CLA'\n  },\n  0x6e01: {\n    code: 'ERR_INVALID_ARGUMENTS',\n    message: 'Invalid arguments'\n  },\n  0x6e02: {\n    code: 'ERR_INVALID_MESSAGE',\n    message: 'Invalid message'\n  },\n  0x6e03: {\n    code: 'ERR_INVALID_P1',\n    message: 'Invalid P1'\n  },\n  0x6e04: {\n    code: 'ERR_MESSAGE_TOO_LONG',\n    message: 'Message too long'\n  },\n  0x6e05: {\n    code: 'ERR_RECEIVER_TOO_LONG',\n    message: 'Receiver too long'\n  },\n  0x6e06: {\n    code: 'ERR_AMOUNT_TOO_LONG',\n    message: 'Amount too long'\n  },\n  0x6e07: {\n    code: 'ERR_CONTRACT_DATA_DISABLED',\n    message: 'Contract data disabled in app options'\n  },\n  0x6e08: {\n    code: 'ERR_MESSAGE_INCOMPLETE',\n    message: 'Message incomplete'\n  },\n  0x6e10: {\n    code: 'ERR_SIGNATURE_FAILED',\n    message: 'Signature failed'\n  },\n  0x6e09: {\n    code: 'ERR_WRONG_TX_VERSION',\n    message: 'Wrong TX version'\n  },\n  0x6e0a: {\n    code: 'ERR_NONCE_TOO_LONG',\n    message: 'Nonce too long'\n  },\n  0x6e0b: {\n    code: 'ERR_INVALID_AMOUNT',\n    message: 'Invalid amount'\n  },\n  0x6e0c: {\n    code: 'ERR_INVALID_FEE',\n    message: 'Invalid fee'\n  },\n  0x6e0d: {\n    code: 'ERR_PRETTY_FAILED',\n    message: 'Pretty failed'\n  },\n  0x6e0e: {\n    code: 'ERR_DATA_TOO_LONG',\n    message: 'Data too long'\n  },\n  0x6e0f: {\n    code: 'ERR_WRONG_TX_OPTIONS',\n    message: 'Invalid transaction options'\n  },\n  0x6e11: {\n    code: 'ERR_SIGN_TX_DEPRECATED',\n    message:\n      'Regular transaction signing is deprecated in this version. Use hash signing.'\n  }\n};\n\nexport default ledgerErrorCodes;\n","export * as errorsMessages from './errorsMessages';\nexport * as networkConstants from './network';\nexport * as ledgerErrorCodes from './ledgerErrorCodes';\n\nexport const gasPriceModifier = '0.01';\nexport const gasPerDataByte = '1500';\nexport const gasLimit = '50000';\nexport const gasPrice = 1_000_000_000;\nexport const denomination = 18;\nexport const decimals = 4;\nexport const version = 1;\n\nexport const ledgerContractDataEnabledValue = 1;\n\nexport const dappInitRoute = '/dapp/init';\nexport const walletSignSession = 'signSession';\n","export enum TransactionServerStatusesEnum {\n  'pending' = 'pending',\n  'fail' = 'fail',\n  'invalid' = 'invalid',\n  'success' = 'success',\n  'executed' = 'executed',\n  'completed' = 'completed'\n}\n\nexport enum TransactionBatchStatusesEnum {\n  'signed' = 'signed',\n  'cancelled' = 'cancelled',\n  'success' = 'success',\n  'sent' = 'sent',\n  'fail' = 'fail',\n  'timedOut' = 'timedOut'\n}\n\nexport enum LoginMethodsEnum {\n  ledger = 'ledger',\n  walletconnect = 'walletconnect',\n  wallet = 'wallet',\n  extension = 'extension',\n  extra = 'extra',\n  none = ''\n}\n\nexport enum NotificationTypesEnum {\n  warning = 'warning',\n  error = 'error',\n  success = 'success'\n}\n\nexport enum TypesOfSmartContractCallsEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer'\n}\n\nexport enum EnvironmentsEnum {\n  testnet = 'testnet',\n  devnet = 'devnet',\n  mainnet = 'mainnet'\n}\n","import {\n  ExtensionProvider,\n  HWProvider,\n  IDappProvider,\n  IHWElrondApp,\n  SignableMessage,\n  Transaction,\n  WalletConnectProvider,\n  WalletProvider\n} from '@elrondnetwork/erdjs';\nimport { ledgerContractDataEnabledValue } from 'constants/index';\nimport { LoginMethodsEnum } from 'types/enums';\n\nexport const DAPP_INIT_ROUTE = '/dapp/init';\n\nexport const getProviderType = (\n  provider?: IDappProvider | null\n): LoginMethodsEnum => {\n  switch (provider?.constructor) {\n    case WalletProvider:\n      return LoginMethodsEnum.wallet;\n    case WalletConnectProvider:\n      return LoginMethodsEnum.walletconnect;\n    case HWProvider:\n      return LoginMethodsEnum.ledger;\n    case ExtensionProvider:\n      return LoginMethodsEnum.extension;\n    case EmptyProvider:\n      return LoginMethodsEnum.none;\n    default:\n      return LoginMethodsEnum.extra;\n  }\n};\n\nexport const newWalletProvider = (walletAddress: string) =>\n  new WalletProvider(`${walletAddress}${DAPP_INIT_ROUTE}`);\n\nexport const getLedgerConfiguration = async (\n  initializedHwWalletP: HWProvider\n) => {\n  if (!initializedHwWalletP.isInitialized()) {\n    throw new Error('Unable to get version. Provider not initialized');\n  }\n  const hwApp: IHWElrondApp = (initializedHwWalletP as any).hwApp;\n  const { contractData, version } = await hwApp.getAppConfiguration();\n  const dataEnabled = contractData === ledgerContractDataEnabledValue;\n  return { version, dataEnabled };\n};\n\nconst notInitializedError = (caller: string) => {\n  return `Unable to perform ${caller}, Provider not initialized`;\n};\n\nexport class EmptyProvider implements IDappProvider {\n  async init() {\n    return false;\n  }\n  login(options?: { callbackUrl?: string; token?: string }): Promise<string> {\n    throw new Error(notInitializedError(`login with options: ${options}`));\n  }\n  async logout(options?: { callbackUrl?: string }): Promise<boolean> {\n    throw new Error(notInitializedError(`logout with options: ${options}`));\n  }\n  async getAddress(): Promise<string> {\n    throw new Error(notInitializedError('getAddress'));\n  }\n  isInitialized(): boolean {\n    return false;\n  }\n  async isConnected(): Promise<boolean> {\n    return false;\n  }\n  async sendTransaction(\n    transaction: Transaction,\n    options?: { callbackUrl?: string }\n  ): Promise<Transaction> {\n    throw new Error(\n      notInitializedError(\n        `sendTransaction with transactions: ${transaction} options: ${options}`\n      )\n    );\n  }\n  async signTransaction(\n    transaction: Transaction,\n    options?: { callbackUrl?: string }\n  ): Promise<Transaction> {\n    throw new Error(\n      notInitializedError(\n        `signTransaction with transactions: ${transaction} options: ${options}`\n      )\n    );\n  }\n  async signTransactions(\n    transactions: Transaction[],\n    options?: { callbackUrl?: string }\n  ): Promise<Transaction[]> {\n    throw new Error(\n      notInitializedError(\n        `signTransactions with transactions: ${transactions} options: ${options}`\n      )\n    );\n  }\n  async signMessage(message: SignableMessage): Promise<SignableMessage> {\n    throw new Error(notInitializedError(`signTransactions with ${message}`));\n  }\n}\n\nexport const emptyProvider = new EmptyProvider();\n","import { IDappProvider } from '@elrondnetwork/erdjs';\nimport { emptyProvider } from './utils';\n\nlet accountProvider: IDappProvider = emptyProvider;\n\nlet externalProvider: IDappProvider | null = null;\n\nexport function setAccountProvider(provider: IDappProvider) {\n  accountProvider = provider;\n}\n\nexport function setExternalProvider(provider: IDappProvider) {\n  externalProvider = provider;\n}\n\nexport function setExternalProviderAsAccountProvider() {\n  if (externalProvider != null) {\n    accountProvider = externalProvider;\n  }\n}\n\nexport function getAccountProvider() {\n  return accountProvider || emptyProvider;\n}\n\nexport function getExternalProvider() {\n  return externalProvider;\n}\n","import { createAction } from '@reduxjs/toolkit';\nimport { LoginMethodsEnum } from 'types/enums';\n\nexport interface LoginActionPayloadType {\n  address: string;\n  loginMethod: LoginMethodsEnum;\n}\n\nexport const logoutAction = createAction('logout');\n\nexport const loginAction = createAction(\n  'login',\n  (payload: LoginActionPayloadType) => ({ payload })\n);\n","import moment from 'moment';\n\nexport const localStorageKeys = {\n  loginExpiresAt: 'dapp-core-login-expires-at'\n} as const;\n\ntype LocalValueType = keyof typeof localStorageKeys;\ntype LocalKeyType = typeof localStorageKeys[LocalValueType];\n\ntype ExpiresType = number | false;\n\nconst hasLocalStorage = typeof localStorage !== 'undefined';\n\nexport const setItem = ({\n  key,\n  data,\n  expires\n}: {\n  key: LocalKeyType;\n  data: any;\n  expires: ExpiresType;\n}) => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  localStorage.setItem(\n    String(key),\n    JSON.stringify({\n      expires,\n      data\n    })\n  );\n};\n\nexport const getItem = (key: LocalKeyType): any => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  const item = localStorage.getItem(String(key));\n  if (!item) {\n    return null;\n  }\n\n  const deserializedItem = JSON.parse(item);\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (\n    !deserializedItem.hasOwnProperty('expires') ||\n    !deserializedItem.hasOwnProperty('data')\n  ) {\n    return null;\n  }\n\n  const expired = moment().unix() >= deserializedItem.expires;\n  if (expired) {\n    localStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nexport const removeItem = (key: LocalKeyType) => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  localStorage.removeItem(String(key));\n};\n","let moment: any = {};\ntry {\n  moment = require('moment');\n} catch (err) {}\n\nexport default moment;\n","import moment from 'optionalPackages/moment';\n\nexport type SessionKeyType = 'address' | 'shard' | 'toasts' | 'toastProgress';\ntype ExpiresType = number | false;\n\nexport const setItem = ({\n  key,\n  data,\n  expires\n}: {\n  key: SessionKeyType;\n  data: any;\n  expires: ExpiresType;\n}) => {\n  sessionStorage.setItem(\n    String(key),\n    JSON.stringify({\n      expires,\n      data\n    })\n  );\n};\n\nexport const getItem = (key: SessionKeyType): any => {\n  const item = sessionStorage.getItem(String(key));\n  if (!item) {\n    return null;\n  }\n\n  const deserializedItem = JSON.parse(item);\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (\n    !deserializedItem.hasOwnProperty('expires') ||\n    !deserializedItem.hasOwnProperty('data')\n  ) {\n    return null;\n  }\n\n  const expired = moment().unix() >= deserializedItem.expires;\n  if (expired) {\n    sessionStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nexport const removeItem = (key: SessionKeyType) =>\n  sessionStorage.removeItem(String(key));\n\nexport const clear = () => sessionStorage.clear();\n\nexport const storage = {\n  setItem,\n  getItem,\n  removeItem,\n  clear\n};\n\nexport default storage;\n","import * as local from './local';\nimport * as session from './session';\n\nexport const storage = { session, local };\n\nexport default storage;\n","import storage from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nexport function getNewLoginExpiresTimestamp() {\n  return new Date().setHours(new Date().getHours() + 24);\n}\n\nexport function setLoginExpiresAt(expiresAt: number) {\n  storage.local.setItem({\n    key: localStorageKeys.loginExpiresAt,\n    data: expiresAt,\n    expires: expiresAt\n  });\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { setLoginExpiresAt, getNewLoginExpiresTimestamp } from 'storage/local';\nimport { TokenLoginType } from 'types';\nimport { LoginMethodsEnum } from 'types/enums';\nimport {\n  loginAction,\n  logoutAction,\n  LoginActionPayloadType\n} from '../commonActions';\n\nexport interface WalletConnectLoginType {\n  loginType: string;\n  callbackRoute: string;\n  logoutRoute: string;\n}\n\nexport interface LedgerLoginType {\n  index: number;\n  loginType: string;\n}\n\nexport interface LoginInfoType {\n  data: any;\n  expires: number;\n}\n\nexport interface LoginInfoStateType {\n  loginMethod: LoginMethodsEnum;\n  walletConnectLogin: WalletConnectLoginType | null;\n  ledgerLogin: LedgerLoginType | null;\n  tokenLogin: TokenLoginType | null;\n  walletLogin: LoginInfoType | null;\n  extensionLogin: LoginInfoType | null;\n}\n\nconst initialState: LoginInfoStateType = {\n  loginMethod: LoginMethodsEnum.none,\n  walletConnectLogin: null,\n  ledgerLogin: null,\n  tokenLogin: null,\n  walletLogin: null,\n  extensionLogin: null\n};\n\nexport const loginInfoSlice = createSlice({\n  name: 'loginInfoSlice',\n  initialState: initialState,\n  reducers: {\n    setLoginMethod: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LoginMethodsEnum>\n    ) => {\n      state.loginMethod = action.payload;\n    },\n    setTokenLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<TokenLoginType>\n    ) => {\n      state.tokenLogin = action.payload;\n    },\n    setTokenLoginSignature: (\n      state: LoginInfoStateType,\n      action: PayloadAction<string>\n    ) => {\n      if (state?.tokenLogin != null) {\n        state.tokenLogin.signature = action.payload;\n      }\n    },\n    setWalletLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LoginInfoType | null>\n    ) => {\n      state.walletLogin = action.payload;\n    },\n    setWalletConnectLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<WalletConnectLoginType | null>\n    ) => {\n      state.walletConnectLogin = action.payload;\n    },\n    setLedgerLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LedgerLoginType | null>\n    ) => {\n      state.ledgerLogin = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n    builder.addCase(\n      loginAction,\n      (\n        state: LoginInfoStateType,\n        action: PayloadAction<LoginActionPayloadType>\n      ) => {\n        state.loginMethod = action.payload.loginMethod;\n        setLoginExpiresAt(getNewLoginExpiresTimestamp());\n      }\n    );\n  }\n});\n\nexport const {\n  setLoginMethod,\n  setWalletConnectLogin,\n  setLedgerLogin,\n  setTokenLogin,\n  setTokenLoginSignature,\n  setWalletLogin\n} = loginInfoSlice.actions;\n\nexport default loginInfoSlice.reducer;\n","export function optionalRedirect(\n  callbackUrl?: string,\n  shouldRedirect?: boolean\n) {\n  if (shouldRedirect && callbackUrl != null) {\n    setTimeout(() => {\n      if (!window.location.pathname.includes(callbackUrl)) {\n        window.location.href = callbackUrl;\n      }\n    }, 200);\n  }\n}\n","export function getBridgeAddressFromNetwork(\n  walletConnectBridgeAddresses: string[]\n) {\n  return walletConnectBridgeAddresses[\n    Math.floor(Math.random() * walletConnectBridgeAddresses.length)\n  ];\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport omit from 'lodash.omit';\nimport {\n  AccountInfoSliceNetworkType,\n  BaseNetworkType,\n  NetworkType\n} from 'types';\nimport { getBridgeAddressFromNetwork } from 'utils/internal';\n\nexport const defaultNetwork: AccountInfoSliceNetworkType = {\n  id: 'not-configured',\n  chainId: '',\n  name: 'NOT CONFIGURED',\n  egldLabel: '',\n  egldDenomination: '18',\n  decimals: '4',\n  gasPerDataByte: '1500',\n  walletConnectDeepLink: '',\n  walletConnectBridgeAddress: '',\n  walletAddress: '',\n\n  apiAddress: '',\n  explorerAddress: '',\n  apiTimeout: '4000'\n};\n\nexport interface NetworkConfigStateType {\n  network: AccountInfoSliceNetworkType;\n  chainID: string;\n}\n\nconst initialState: NetworkConfigStateType = {\n  network: defaultNetwork,\n  chainID: '-1'\n};\n\nexport const networkConfigSlice = createSlice({\n  name: 'appConfig',\n  initialState: initialState,\n  reducers: {\n    initializeNetworkConfig: (\n      state: NetworkConfigStateType,\n      action: PayloadAction<NetworkType>\n    ) => {\n      const walletConnectBridgeAddress = getBridgeAddressFromNetwork(\n        action.payload.walletConnectBridgeAddresses\n      );\n      const network: BaseNetworkType = omit(\n        action.payload,\n        'walletConnectBridgeAddresses'\n      );\n      state.network = {\n        ...state.network,\n        ...network,\n        walletConnectBridgeAddress\n      };\n    },\n    setChainID: (\n      state: NetworkConfigStateType,\n      action: PayloadAction<string>\n    ) => {\n      state.chainID = action.payload;\n    }\n  }\n});\n\nexport const {\n  initializeNetworkConfig,\n  setChainID\n} = networkConfigSlice.actions;\n\nexport default networkConfigSlice.reducer;\n","import { Address } from '@elrondnetwork/erdjs';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nimport storage from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nimport {\n  loginAction,\n  logoutAction,\n  LoginActionPayloadType\n} from '../commonActions';\n\nexport interface AccountType {\n  address: string;\n  balance: string;\n  nonce: number;\n  code?: string;\n  username?: string;\n}\nexport interface LedgerAccountType {\n  index: number;\n  address: string;\n  hasContractDataEnabled: boolean;\n  version: string;\n}\n\nexport interface UpdateLedgerAccountPayloadType {\n  index: number;\n  address: string;\n}\n\nexport interface AccountInfoSliceType {\n  address: string;\n  shard?: number;\n  account: AccountType;\n  publicKey: string;\n  ledgerAccount: LedgerAccountType | null;\n  walletConnectAccount: string | null;\n  isAccountLoading: boolean;\n  accountLoadingError: string | null;\n}\n\nexport const emptyAccount: AccountType = {\n  balance: '...',\n  address: '',\n  nonce: 0\n};\n\nconst initialState: AccountInfoSliceType = {\n  address: '',\n  account: emptyAccount,\n  ledgerAccount: null,\n  publicKey: '',\n  walletConnectAccount: null,\n  isAccountLoading: true,\n  accountLoadingError: null\n};\n\nexport const accountInfoSlice = createSlice({\n  name: 'accountInfoSlice',\n  initialState: initialState,\n  reducers: {\n    setAddress: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string>\n    ) => {\n      const address = action.payload;\n      state.address = address;\n      state.publicKey = new Address(address).hex();\n    },\n    setAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<AccountType>\n    ) => {\n      state.account = action.payload;\n      state.isAccountLoading = false;\n      state.accountLoadingError = null;\n    },\n    setAccountNonce: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<number>\n    ) => {\n      state.account.nonce = action.payload;\n    },\n    setAccountShard: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<number>\n    ) => {\n      state.shard = action.payload;\n    },\n    setLedgerAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<LedgerAccountType | null>\n    ) => {\n      state.ledgerAccount = action.payload;\n    },\n    updateLedgerAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<UpdateLedgerAccountPayloadType>\n    ) => {\n      if (state.ledgerAccount != null) {\n        state.ledgerAccount.index = action.payload.index;\n        state.ledgerAccount.address = action.payload.address;\n      }\n    },\n    setWalletConnectAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.walletConnectAccount = action.payload;\n    },\n    setIsAccountLoading: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<boolean>\n    ) => {\n      state.isAccountLoading = action.payload;\n      state.accountLoadingError = null;\n    },\n    setAccountLoadingError: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.accountLoadingError = action.payload;\n      state.isAccountLoading = false;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      storage.local.removeItem(localStorageKeys.loginExpiresAt);\n      return initialState;\n    });\n    builder.addCase(\n      loginAction,\n      (\n        state: AccountInfoSliceType,\n        action: PayloadAction<LoginActionPayloadType>\n      ) => {\n        const { address } = action.payload;\n        state.address = address;\n        state.publicKey = new Address(address).hex();\n      }\n    );\n    builder.addCase(REHYDRATE, (state, action: any) => {\n      if (!action.payload?.account) {\n        return;\n      }\n\n      const { account: accountInfo } = action.payload;\n      const { address, shard, account, publicKey } = accountInfo;\n      state.address = address;\n      state.shard = shard;\n      state.account = account;\n      state.publicKey = publicKey;\n    });\n  }\n});\n\nexport const {\n  setAccount,\n  setAddress,\n  setAccountNonce,\n  setAccountShard,\n  setLedgerAccount,\n  updateLedgerAccount,\n  setWalletConnectAccount,\n  setIsAccountLoading,\n  setAccountLoadingError\n} = accountInfoSlice.actions;\n\nexport default accountInfoSlice.reducer;\n","import {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\n\nexport const pendingBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.sent\n];\nexport const successBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.success\n];\n\nexport const failBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.fail,\n  TransactionBatchStatusesEnum.cancelled,\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const timedOutBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const pendingServerTransactionsStatuses = [\n  TransactionServerStatusesEnum.pending\n];\n\nexport const successServerTransactionsStates = [\n  TransactionServerStatusesEnum.success\n];\n\nexport const completedServerTransactionsStates = [\n  TransactionServerStatusesEnum.completed\n];\n\nexport const failServerTransactionsStates = [\n  TransactionServerStatusesEnum.fail,\n  TransactionServerStatusesEnum.invalid\n];\n\nexport function getIsTransactionCompleted(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return completedServerTransactionsStates.includes(\n    status as TransactionServerStatusesEnum\n  );\n}\n\nexport function getIsTransactionPending(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionPending(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionPending(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionSuccessful(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionSuccessful(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionSuccessful(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionFailed(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionFailed(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionFailed(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionTimedOut(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    isBatchTransactionTimedOut(status as TransactionBatchStatusesEnum)\n  );\n}\n\nexport function isBatchTransactionPending(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && pendingBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionSuccessful(\n  status: TransactionBatchStatusesEnum\n) {\n  return status != null && successBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionFailed(status: TransactionBatchStatusesEnum) {\n  return status != null && failBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionTimedOut(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && timedOutBatchTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionPending(\n  status?: TransactionServerStatusesEnum\n) {\n  return status != null && pendingServerTransactionsStatuses.includes(status);\n}\nexport function isServerTransactionSuccessful(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && successServerTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionFailed(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && failServerTransactionsStates.includes(status);\n}\n","import React from 'react';\nimport { Address, Transaction } from '@elrondnetwork/erdjs';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from './enums';\n\nexport interface TransactionsToSignType {\n  transactions: RawTransactionType[];\n  callbackRoute?: string;\n  sessionId: string;\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport interface SignedTransactionsBodyType {\n  transactions?: SignedTransactionType[];\n  status?: TransactionBatchStatusesEnum;\n  errorMessage?: string;\n  customTransactionInformation?: CustomTransactionInformation;\n}\n\nexport interface SignedTransactionsType {\n  [sessionId: string]: SignedTransactionsBodyType;\n}\n\nexport interface TransactionParameter {\n  sender: Address;\n  receiver: Address;\n  functionName: string;\n  inputParameters: string[];\n  outputParameters: string[];\n}\n\nexport interface RawTransactionType {\n  signature?: string;\n  value: string;\n  receiver: string;\n  gasPrice: number;\n  gasLimit: number;\n  sender: string;\n  nonce: number;\n  data: string;\n  chainID: string;\n  version?: number;\n  options?: number;\n}\n\nexport interface SignedTransactionType extends RawTransactionType {\n  hash: string;\n  status: TransactionServerStatusesEnum;\n  errorMessage?: string;\n  customTransactionInformation?: CustomTransactionInformation;\n}\n\nexport interface TxDataTokenType {\n  tokenId: string;\n  amount: string;\n  receiver: string;\n  type?: MultiEsdtTxType['type'] | '';\n  nonce?: string;\n  multiTxData?: string;\n}\n\nexport type TxsDataTokensType = Record<string, TxDataTokenType> | undefined;\n\ninterface MultiEsdtType {\n  type:\n    | TransactionTypesEnum.esdtTransaction\n    | TransactionTypesEnum.nftTransaction;\n  receiver: string;\n  token?: string;\n  nonce?: string;\n  amount?: string;\n  data: string;\n}\n\ninterface MultiEsdtScCallType {\n  type: TransactionTypesEnum.scCall;\n  receiver: string;\n  token?: string;\n  nonce?: string;\n  amount?: string;\n  data: string;\n}\n\nexport type MultiEsdtTxType = MultiEsdtType | MultiEsdtScCallType;\n\nexport type MultiSignTxType = {\n  multiTxData?: string;\n  transactionIndex: number;\n  transaction: Transaction;\n};\n\nexport interface TokenOptionType {\n  name: string;\n  identifier: string;\n  balance: string;\n  decimals: number;\n  collection?: string;\n  avatar?: string;\n}\n\nexport interface SimpleTransactionType {\n  value: string;\n  receiver: string;\n  data?: string;\n  gasPrice?: number;\n  gasLimit?: number;\n  chainID?: string;\n  version?: number;\n  options?: number;\n}\n\nexport interface TransactionsDisplayInfoType {\n  errorMessage?: string;\n  successMessage?: string;\n  processingMessage?: string;\n  submittedMessage?: string;\n  transactionDuration?: number;\n}\n\nexport interface SendSimpleTransactionPropsType {\n  transactions: SimpleTransactionType[];\n  minGasLimit?: number;\n}\n\nexport interface SendTransactionsPropsType {\n  transactions:\n    | Transaction\n    | SimpleTransactionType\n    | (Transaction | SimpleTransactionType)[];\n  redirectAfterSign?: boolean;\n  signWithoutSending: boolean;\n  completedTransactionsDelay?: number;\n  callbackRoute?: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n  minGasLimit?: number;\n  sessionInformation?: any;\n}\n\nexport interface SignTransactionsPropsType {\n  transactions: Transaction[] | Transaction;\n  minGasLimit?: number;\n  callbackRoute?: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport enum TransactionTypesEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTTransfer = 'ESDTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer',\n  esdtTransaction = 'esdtTransaction',\n  nftTransaction = 'nftTransaction',\n  scCall = 'scCall'\n}\n\nexport interface ActiveLedgerTransactionType {\n  transaction: Transaction;\n  transactionTokenInfo: TxDataTokenType;\n  isTokenTransaction: boolean;\n  dataField: string;\n  receiverScamInfo: string | null;\n}\n\nexport interface SmartContractResult {\n  hash: string;\n  timestamp: number;\n  nonce: number;\n  gasLimit: number;\n  gasPrice: number;\n  value: string;\n  sender: string;\n  receiver: string;\n  data: string;\n  prevTxHash: string;\n  originalTxHash: string;\n  callType: string;\n  miniBlockHash: string;\n  returnMessage: string;\n}\n\nexport interface SignModalPropsType {\n  handleClose: () => void;\n  error: string | null;\n  callbackRoute?: string;\n  transactions: Transaction[];\n  className?: string;\n  verifyReceiverScam?: boolean;\n  title?: React.ReactNode;\n}\n\nexport interface CustomTransactionInformation {\n  redirectAfterSign: boolean;\n  sessionInformation: any;\n  completedTransactionsDelay?: number;\n  signWithoutSending: boolean;\n}\n","const isUtf8 = (str: string) => {\n  for (let i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) > 127) return false;\n  }\n  return true;\n};\n\nexport function decodePart(part: string) {\n  let decodedPart = part;\n\n  try {\n    const hexPart = Buffer.from(part, 'hex').toString().trim();\n\n    if (isUtf8(hexPart) && hexPart.length > 1) {\n      decodedPart = hexPart;\n    }\n  } catch (error) {}\n\n  return decodedPart;\n}\n\nexport default decodePart;\n","export function isStringBase64(string: string) {\n  try {\n    return Buffer.from(string, 'base64').toString() === atob(string);\n  } catch (err) {\n    return false;\n  }\n}\n\nexport function encodeToBase64(string: string) {\n  return btoa(string);\n}\n\nexport function decodeBase64(string: string) {\n  return atob(string);\n}\n","export const getAllStringOccurrences = (\n  sourceStr: string,\n  searchStr: string\n) => {\n  const startingIndices = [];\n\n  let indexOccurence = sourceStr.indexOf(searchStr, 0);\n\n  while (indexOccurence >= 0) {\n    startingIndices.push(indexOccurence);\n    indexOccurence = sourceStr.indexOf(searchStr, indexOccurence + 1);\n  }\n\n  return startingIndices;\n};\n","import BigNumber from 'bignumber.js';\nimport { MultiEsdtTxType, TransactionTypesEnum } from 'types/transactions';\nimport { decodePart } from 'utils/decoders';\nimport { getAllStringOccurrences } from '../getAllStringOccurrences';\n\n// TODO: add tests\nexport function parseMultiEsdtTransferData(data?: string) {\n  const transactions: MultiEsdtTxType[] = [];\n  let contractCallDataIndex = 0;\n  try {\n    if (\n      data?.startsWith(TransactionTypesEnum.MultiESDTNFTTransfer) &&\n      data?.includes('@')\n    ) {\n      const [, receiver, encodedTxCount, ...rest] = data?.split('@');\n      if (receiver) {\n        const txCount = new BigNumber(encodedTxCount, 16).toNumber();\n\n        let itemIndex = 0;\n        for (let txIndex = 0; txIndex < txCount; txIndex++) {\n          const transaction: MultiEsdtTxType = {\n            type: TransactionTypesEnum.nftTransaction,\n            data: '',\n            receiver\n          };\n\n          for (let index = 0; index < 3; index++) {\n            switch (index) {\n              case 0:\n                transaction.token = decodePart(rest[itemIndex]);\n                transaction.data = rest[itemIndex];\n                break;\n              case 1: {\n                const encodedNonce =\n                  rest[itemIndex] && rest[itemIndex].length\n                    ? rest[itemIndex]\n                    : '';\n                if (encodedNonce) {\n                  transaction.nonce = encodedNonce;\n                } else {\n                  transaction.type = TransactionTypesEnum.esdtTransaction;\n                }\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              }\n              case 2:\n                transaction.amount = new BigNumber(\n                  rest[itemIndex],\n                  16\n                ).toString(10);\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              default:\n                break;\n            }\n            contractCallDataIndex = itemIndex + 1;\n            itemIndex++;\n          }\n          transactions[txIndex] = transaction;\n        }\n\n        const isDifferentFromTxCount = transactions.length !== txCount;\n        const hasInvalidNoOfAdSigns = transactions.some((tx) => {\n          const adSignOccurences = getAllStringOccurrences(tx.data, '@').length;\n          return adSignOccurences !== 2;\n        });\n        const hasAdStart = transactions.some((tx) => tx.data.startsWith('@'));\n        if (isDifferentFromTxCount || hasInvalidNoOfAdSigns || hasAdStart) {\n          return [];\n        }\n        if (rest[contractCallDataIndex]) {\n          let scCallData = rest[contractCallDataIndex];\n          for (let i = contractCallDataIndex + 1; i < rest.length; i++) {\n            scCallData += '@' + rest[i];\n          }\n          transactions[txCount] = {\n            type: TransactionTypesEnum.scCall,\n            data: scCallData,\n            receiver\n          };\n        }\n      }\n    }\n  } catch (err) {\n    console.error('failed parsing tx', err);\n    return transactions;\n  }\n  return transactions;\n}\n\nexport default parseMultiEsdtTransferData;\n","import { Address } from '@elrondnetwork/erdjs';\n\nfunction canTransformToPublicKey(address: string) {\n  try {\n    const checkAddress = new Address(address);\n    return Boolean(checkAddress.bech32());\n  } catch {\n    return false;\n  }\n}\n\nexport function addressIsValid(destinationAddress: string) {\n  const isValidBach =\n    destinationAddress?.startsWith('erd') &&\n    destinationAddress.length === 62 &&\n    /^\\w+$/.test(destinationAddress);\n\n  return isValidBach && canTransformToPublicKey(destinationAddress);\n}\n\nexport default addressIsValid;\n","import { Address } from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\nimport addressIsValid from 'utils/account/addressIsValid';\nimport decodePart from 'utils/decoders/decodePart';\nimport { TransactionTypesEnum } from '../../types/transactions';\n\nconst noData = {\n  tokenId: '',\n  amount: ''\n};\n\nconst decodeData = (data: string) => {\n  const nonceIndex = 2;\n  const amountIndex = 3;\n  const parts = data.split('@');\n  const decodedParts = parts.map((part, i) =>\n    [nonceIndex, amountIndex].includes(i) ? part : decodePart(part)\n  );\n  return decodedParts;\n};\n\nexport function getTokenFromData(data?: string): {\n  tokenId: string;\n  amount: string;\n  collection?: string;\n  nonce?: string;\n  receiver?: string;\n} {\n  if (!data) {\n    return noData;\n  }\n\n  const isTokenTransfer = data.startsWith(TransactionTypesEnum.ESDTTransfer);\n  const nftTransfer =\n    data.startsWith(TransactionTypesEnum.ESDTNFTTransfer) && data.includes('@');\n\n  if (isTokenTransfer) {\n    const [, encodedToken, encodedAmount] = data.split('@');\n    try {\n      const tokenId = Buffer.from(encodedToken, 'hex').toString('ascii');\n\n      if (!tokenId) {\n        return noData;\n      }\n\n      const amount = new BigNumber(\n        '0x' + encodedAmount.replace('0x', '')\n      ).toString(10);\n\n      return {\n        tokenId,\n        amount\n      };\n    } catch (e) {}\n  }\n\n  if (nftTransfer) {\n    try {\n      const [, /*ESDTNFTTransfer*/ collection, nonce, quantity, receiver] =\n        decodeData(data);\n      if (\n        [collection, nonce, quantity, receiver].every((el) => Boolean(el)) &&\n        addressIsValid(new Address(receiver).bech32())\n      ) {\n        return {\n          tokenId: `${collection}-${nonce}`,\n          amount: new BigNumber(quantity, 16).toString(10),\n          collection,\n          nonce,\n          receiver: new Address(receiver).bech32()\n        };\n      }\n    } catch (err) {}\n  }\n\n  return noData;\n}\nexport default getTokenFromData;\n","export function isTokenTransfer({\n  tokenId,\n  erdLabel\n}: {\n  tokenId: string | undefined;\n  erdLabel: string;\n}) {\n  return Boolean(tokenId && tokenId !== erdLabel);\n}\n\nexport default isTokenTransfer;\n","function buildUrlParams(\n  search: string,\n  urlParams: {\n    [key: string]: string;\n  }\n) {\n  const urlSearchParams = new URLSearchParams(search);\n  const params = Object.fromEntries(urlSearchParams as any);\n\n  const nextUrlParams = new URLSearchParams({\n    ...params,\n    ...urlParams\n  }).toString();\n\n  return { nextUrlParams, params };\n}\n\ninterface ReplyUrlType {\n  callbackUrl: string;\n  urlParams?: { [key: string]: string };\n}\n\nexport function builtCallbackUrl({\n  callbackUrl,\n  urlParams = {}\n}: ReplyUrlType) {\n  let url = callbackUrl;\n  if (Object.entries(urlParams).length > 0) {\n    const { search, origin, pathname } = new URL(callbackUrl);\n    const { nextUrlParams } = buildUrlParams(search, urlParams);\n    url = `${origin}${pathname}?${nextUrlParams}`;\n  }\n  return url;\n}\n\nexport default builtCallbackUrl;\n","import {\n  Transaction,\n  TransactionOptions,\n  TransactionVersion\n} from '@elrondnetwork/erdjs';\nimport { TransactionServerStatusesEnum } from 'types/enums';\n\nexport function parseTransactionAfterSigning(\n  transaction: Transaction,\n  isLedger = false\n) {\n  // TODO: REMOVE\n  //#region REMOVE when options is available in erdjs getTransactionsFromWalletUrl\n  if (isLedger) {\n    transaction.version = TransactionVersion.withTxHashSignVersion();\n    transaction.options = TransactionOptions.withTxHashSignOptions();\n  }\n  //#endregion\n  const parsedTransaction = transaction.toPlainObject();\n  parsedTransaction.hash = transaction.getHash().toString();\n  parsedTransaction.status = TransactionServerStatusesEnum.pending;\n  return parsedTransaction;\n}\n\nexport default parseTransactionAfterSigning;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\nimport {\n  CustomTransactionInformation,\n  SignedTransactionsBodyType,\n  SignedTransactionsType,\n  SignedTransactionType,\n  TransactionsToSignType\n} from 'types/transactions';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionCompleted\n} from 'utils/transactions';\nimport { logoutAction } from '../commonActions';\n\nexport interface UpdateSignedTransactionsPayloadType {\n  sessionId: string;\n  status: TransactionBatchStatusesEnum;\n  errorMessage?: string;\n  transactions?: SignedTransactionType[];\n}\n\nexport interface MoveTransactionsToSignedStatePayloadType\n  extends SignedTransactionsBodyType {\n  sessionId: string;\n}\n\nexport interface UpdateSignedTransactionStatusPayloadType {\n  sessionId: string;\n  transactionHash: string;\n  status: TransactionServerStatusesEnum;\n  errorMessage?: string;\n}\n\nexport interface TransactionsSliceStateType {\n  signedTransactions: SignedTransactionsType;\n  transactionsToSign: TransactionsToSignType | null;\n  signTransactionsError: string | null;\n  customTransactionInformationForSessionId: {\n    [sessionId: string]: CustomTransactionInformation;\n  };\n}\n\nconst initialState: TransactionsSliceStateType = {\n  signedTransactions: {},\n  transactionsToSign: null,\n  signTransactionsError: null,\n  customTransactionInformationForSessionId: {}\n};\n\nconst defaultCustomInformation: CustomTransactionInformation = {\n  signWithoutSending: false,\n  sessionInformation: null,\n  redirectAfterSign: false\n};\n\nexport const transactionsSlice = createSlice({\n  name: 'transactionsSlice',\n  initialState,\n  reducers: {\n    moveTransactionsToSignedState: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<MoveTransactionsToSignedStatePayloadType>\n    ) => {\n      const { sessionId, transactions, errorMessage, status } = action.payload;\n      const customTransactionInformation =\n        state.customTransactionInformationForSessionId?.[sessionId] ||\n        defaultCustomInformation;\n      state.signedTransactions[sessionId] = {\n        transactions,\n        status,\n        errorMessage,\n        customTransactionInformation\n      };\n      if (state?.transactionsToSign?.sessionId === sessionId) {\n        state.transactionsToSign = initialState.transactionsToSign;\n      }\n    },\n\n    clearSignedTransaction: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<string>\n    ) => {\n      if (state.signedTransactions[action.payload]) {\n        delete state.signedTransactions[action.payload];\n      }\n    },\n    clearTransactionToSign: (state: TransactionsSliceStateType) => {\n      if (state?.transactionsToSign) {\n        state.transactionsToSign = null;\n      }\n    },\n    updateSignedTransaction: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<SignedTransactionsType>\n    ) => {\n      state.signedTransactions = {\n        ...state.signedTransactions,\n        ...action.payload\n      };\n    },\n    updateSignedTransactions: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<UpdateSignedTransactionsPayloadType>\n    ) => {\n      const { sessionId, status, errorMessage, transactions } = action.payload;\n      const transaction = state.signedTransactions[sessionId];\n      if (transaction != null) {\n        state.signedTransactions[sessionId].status = status;\n        if (errorMessage != null) {\n          state.signedTransactions[sessionId].errorMessage = errorMessage;\n        }\n        if (transactions != null) {\n          state.signedTransactions[sessionId].transactions = transactions;\n        }\n      }\n    },\n    updateSignedTransactionStatus: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<UpdateSignedTransactionStatusPayloadType>\n    ) => {\n      const {\n        sessionId,\n        status,\n        errorMessage,\n        transactionHash\n      } = action.payload;\n      const transactions = state.signedTransactions?.[sessionId]?.transactions;\n      if (transactions != null) {\n        state.signedTransactions[sessionId].transactions = transactions.map(\n          (transaction) => {\n            if (transaction.hash === transactionHash) {\n              return {\n                ...transaction,\n                status,\n                errorMessage\n              };\n            }\n            return transaction;\n          }\n        );\n        const areTransactionsSuccessful = state.signedTransactions[\n          sessionId\n        ]?.transactions?.every((transaction) => {\n          return getIsTransactionCompleted(transaction.status);\n        });\n\n        const areTransactionsFailed = state.signedTransactions[\n          sessionId\n        ]?.transactions?.every((transaction) =>\n          getIsTransactionFailed(transaction.status)\n        );\n        if (areTransactionsSuccessful) {\n          state.signedTransactions[sessionId].status =\n            TransactionBatchStatusesEnum.success;\n        }\n        if (areTransactionsFailed) {\n          state.signedTransactions[sessionId].status =\n            TransactionBatchStatusesEnum.fail;\n        }\n      }\n    },\n    setTransactionsToSign: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<TransactionsToSignType>\n    ) => {\n      state.transactionsToSign = action.payload;\n\n      const { sessionId, customTransactionInformation } = action.payload;\n      state.customTransactionInformationForSessionId[\n        sessionId\n      ] = customTransactionInformation;\n\n      state.signTransactionsError = null;\n    },\n    clearAllTransactionsToSign: (state) => {\n      state.transactionsToSign = initialState.transactionsToSign;\n      state.signTransactionsError = null;\n    },\n    clearAllSignedTransactions: (state) => {\n      state.signedTransactions = initialState.signedTransactions;\n    },\n    setSignTransactionsError: (state, action: PayloadAction<string | null>) => {\n      state.signTransactionsError = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n    builder.addCase(REHYDRATE, (state, action: any) => {\n      if (!action.payload?.transactions) {\n        return;\n      }\n\n      const {\n        signedTransactions,\n        customTransactionInformationForSessionId\n      } = action.payload.transactions;\n      const parsedSignedTransactions = Object.entries(\n        signedTransactions\n      ).reduce((acc, [sessionId, transaction]) => {\n        const txTimestamp: any = new Date(sessionId);\n        const expiration: any = new Date();\n        expiration.setHours(expiration.getHours() + 5);\n        const isExpired = expiration - txTimestamp > 0;\n        if (!isExpired) {\n          acc[sessionId] = transaction;\n        }\n        return acc;\n      }, {} as { [key: string]: any });\n      if (customTransactionInformationForSessionId != null) {\n        state.customTransactionInformationForSessionId = customTransactionInformationForSessionId;\n      }\n      if (signedTransactions != null) {\n        state.signedTransactions = parsedSignedTransactions;\n      }\n    });\n  }\n});\n\nexport const {\n  updateSignedTransactionStatus,\n  updateSignedTransactions,\n  setTransactionsToSign,\n  clearAllTransactionsToSign,\n  clearAllSignedTransactions,\n  clearSignedTransaction,\n  clearTransactionToSign,\n  setSignTransactionsError,\n  moveTransactionsToSignedState\n} = transactionsSlice.actions;\n\nexport default transactionsSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TransactionsDisplayInfoType } from 'types/transactions';\nimport { logoutAction } from '../commonActions';\n\nexport interface StateType {\n  [sessionId: string]: TransactionsDisplayInfoType;\n}\n\nexport interface SetTransactionsInfoPayloadType {\n  sessionId: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n}\n\nexport const defaultTransactionErrorMessage = 'Transaction failed';\nexport const defaultTransactionSuccessMessage = 'Transaction successful';\nexport const defaultTransactionProcessingMessage = 'Processing transaction';\nexport const defaultTransactionSubmittedMessage = 'Transaction submitted';\n\nconst initialState: StateType = {};\n\nexport const signTransactionsSlice = createSlice({\n  name: 'transactionsInfo',\n  initialState,\n  reducers: {\n    setTransactionsDisplayInfo(\n      state: StateType,\n      action: PayloadAction<SetTransactionsInfoPayloadType>\n    ) {\n      const { sessionId, transactionsDisplayInfo } = action.payload;\n      if (sessionId != null) {\n        state[sessionId] = {\n          errorMessage:\n            transactionsDisplayInfo?.errorMessage ||\n            defaultTransactionErrorMessage,\n          successMessage:\n            transactionsDisplayInfo?.successMessage ||\n            defaultTransactionSuccessMessage,\n          processingMessage:\n            transactionsDisplayInfo?.processingMessage ||\n            defaultTransactionProcessingMessage,\n          submittedMessage:\n            transactionsDisplayInfo?.submittedMessage ||\n            defaultTransactionSubmittedMessage,\n          transactionDuration: transactionsDisplayInfo?.transactionDuration\n        };\n      }\n    },\n    clearTransactionsInfoForSessionId(\n      state: StateType,\n      action: PayloadAction<string | undefined>\n    ) {\n      if (action.payload != null) {\n        delete state[action.payload];\n      }\n    },\n    clearTransactionsInfo: () => initialState\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const {\n  clearTransactionsInfo,\n  setTransactionsDisplayInfo,\n  clearTransactionsInfoForSessionId\n} = signTransactionsSlice.actions;\n\nexport default signTransactionsSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { NotificationTypesEnum } from 'types';\nimport { logoutAction } from '../commonActions';\n\nexport interface TxSubmittedModal {\n  sessionId: string;\n  submittedMessage: string;\n}\n\nexport interface NotificationModal {\n  type: NotificationTypesEnum;\n  iconClassName: string;\n  title: string;\n  description: string;\n}\n\nexport interface ModalsSliceState {\n  txSubmittedModal?: TxSubmittedModal;\n  notificationModal?: NotificationModal;\n}\n\nconst initialState: ModalsSliceState = {};\n\nexport const modalsSlice = createSlice({\n  name: 'modalsSlice',\n  initialState,\n  reducers: {\n    setTxSubmittedModal: (\n      state: ModalsSliceState,\n      action: PayloadAction<TxSubmittedModal>\n    ) => {\n      state.txSubmittedModal = action.payload;\n    },\n    setNotificationModal: (\n      state: ModalsSliceState,\n      action: PayloadAction<NotificationModal>\n    ) => {\n      state.notificationModal = action.payload;\n    },\n    clearTxSubmittedModal: (state: ModalsSliceState) => {\n      state.txSubmittedModal = undefined;\n    },\n    clearNotificationModal: (state: ModalsSliceState) => {\n      state.notificationModal = undefined;\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const {\n  setTxSubmittedModal,\n  setNotificationModal,\n  clearTxSubmittedModal,\n  clearNotificationModal\n} = modalsSlice.actions;\n\nexport default modalsSlice.reducer;\n","import isEqual from 'lodash.isequal';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\n\nexport const createDeepEqualSelector = createSelectorCreator(\n  defaultMemoize,\n  isEqual\n);\n","import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const accountInfoSelector = (state: RootState) => state.account;\n\nexport const addressSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.address\n);\n\nexport const accountSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.account\n);\n\nexport const accountBalanceSelector = createDeepEqualSelector(\n  accountSelector,\n  (account) => account.balance\n);\n\nexport const accountNonceSelector = createDeepEqualSelector(\n  accountSelector,\n  (state) => state?.nonce?.valueOf() || 0\n);\n\nexport const shardSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.shard\n);\n\nexport const ledgerAccountSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.ledgerAccount\n);\n\nexport const walletConnectAccountSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.walletConnectAccount\n);\n\nexport const isAccountLoadingSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.isAccountLoading\n);\n\nexport const isAccountLoadingErrorSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.accountLoadingError\n);\n","import { LoginMethodsEnum } from 'types/enums';\nimport { RootState } from '../store';\nimport { addressSelector } from './accountInfoSelectors';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const loginInfoSelector = (state: RootState) => state.loginInfo;\n\nexport const loginMethodSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.loginMethod\n);\n\nexport const isLoggedInSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  addressSelector,\n  (state, address) =>\n    state.loginMethod != LoginMethodsEnum.none && Boolean(address)\n);\n\nexport const walletConnectLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.walletConnectLogin\n);\n\nexport const ledgerLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.ledgerLogin\n);\n\nexport const walletLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.walletLogin\n);\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport throttle from 'lodash.throttle';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { logoutAction } from 'redux/commonActions';\nimport { isLoggedInSelector } from 'redux/selectors/loginInfoSelectors';\nimport { StoreType } from 'redux/store';\nimport { getNewLoginExpiresTimestamp, setLoginExpiresAt } from 'storage/local';\nimport storage from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nconst whitelistedActions = ['logout'];\n\nconst throttledSetNewExpires = throttle(() => {\n  setLoginExpiresAt(getNewLoginExpiresTimestamp());\n}, 5000);\n\nexport const loginSessionMiddleware: any = (store: StoreType) => (\n  next: (action: PayloadAction) => void\n) => (action: PayloadAction) => {\n  if (whitelistedActions.includes(action.type)) {\n    return next(action);\n  }\n  const appState = store.getState();\n  const loginTimestamp = storage.local.getItem(localStorageKeys.loginExpiresAt);\n  const isLoggedIn = isLoggedInSelector(appState);\n  if (!isLoggedIn) {\n    return next(action);\n  }\n  if (loginTimestamp == null) {\n    return setLoginExpiresAt(getNewLoginExpiresTimestamp());\n  }\n  const now = Date.now();\n  const isExpired = loginTimestamp - now < 0;\n  if (isExpired) {\n    return setTimeout(async () => {\n      const provider = getAccountProvider();\n      console.log('session expired');\n      store.dispatch(logoutAction());\n      try {\n        await provider?.logout({ callbackUrl: '/' });\n      } catch (err) {\n        console.error('error logging out', err);\n      }\n    }, 1000);\n  } else {\n    throttledSetNewExpires();\n  }\n  return next(action);\n};\n\nexport default loginSessionMiddleware;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\n\nimport account from './slices/accountInfoSlice';\nimport loginInfo from './slices/loginInfoSlice';\nimport modals from './slices/modalsSlice';\nimport networkConfig from './slices/networkConfigSlice';\nimport transactionsInfo from './slices/transactionsInfoSlice';\nimport transactions from './slices/transactionsSlice';\n\nconst reducers = {\n  account,\n  networkConfig,\n  loginInfo,\n  modals,\n  transactions,\n  transactionsInfo\n};\n\nif (typeof window !== 'undefined' && window.localStorage != null) {\n  //This allows for this library to be used on other platforms than web, like React Native\n  //without this condition, redux-persist 6+ will throw an error if persist storage fails\n  const sessionStorage = require('redux-persist/lib/storage/session').default;\n\n  //#region custom reducers\n  const transactionsInfoPersistConfig = {\n    key: 'dapp-core-transactionsInfo',\n    version: 1,\n    storage: sessionStorage\n  };\n  const transactionsReducer = {\n    key: 'dapp-core-transactions',\n    version: 1,\n    storage: sessionStorage,\n    blacklist: ['transactionsToSign']\n  };\n  reducers.transactions = persistReducer(\n    transactionsReducer,\n    transactions\n  ) as any;\n  reducers.transactionsInfo = persistReducer(\n    transactionsInfoPersistConfig,\n    transactionsInfo\n  ) as any;\n  //#endregion\n}\n\nconst rootReducer = combineReducers(reducers);\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { Reducer } from 'redux';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  createMigrate\n} from 'redux-persist';\n\nimport { defaultNetwork } from 'redux/slices';\nimport loginSessionMiddleware from './middlewares/loginSessionMiddleware';\nimport rootReducer from './reducers';\n\nlet localStorageReducers: Partial<Reducer> = rootReducer;\n\nconst migrations = {\n  2: (state: PestistedRootState) => {\n    return {\n      ...state,\n      networkConfig: defaultNetwork\n    };\n  }\n};\n\n//This allows for this library to be used on other platforms than web, like React Native\n//without this condition, redux-persist 6+ will throw an error if persist storage fails\nif (typeof window !== 'undefined' && window?.localStorage != null) {\n  const storage = require('redux-persist/lib/storage').default;\n  const persistConfig = {\n    key: 'dapp-core-store',\n    version: 2,\n    storage,\n    whitelist: ['account', 'loginInfo', 'toasts', 'modals', 'networkConfig'],\n    migrate: createMigrate(migrations, { debug: false })\n  };\n  localStorageReducers = persistReducer(persistConfig, rootReducer);\n}\n\nexport const store = configureStore({\n  reducer: localStorageReducers,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [\n          FLUSH,\n          REHYDRATE,\n          PAUSE,\n          PERSIST,\n          PURGE,\n          REGISTER,\n          'accountInfoSlice/setAccount',\n          'accountInfoSlice/setAccountNonce'\n        ],\n        ignoredPaths: ['payload.nonce', 'account.account.nonce']\n      }\n    }).concat(loginSessionMiddleware)\n});\n\nexport const persistor = persistStore(store);\n\nconst storeType = configureStore({ reducer: rootReducer });\ntype PestistedRootState = ReturnType<typeof store.getState>;\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type StoreType = typeof storeType;\nexport type RootState = ReturnType<typeof storeType.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { ChainID } from '@elrondnetwork/erdjs';\nimport { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const networkConfigSelector = (state: RootState) => state.networkConfig;\n\nexport const chainIDSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => new ChainID(state.chainID)\n);\n\nexport const walletConnectBridgeAddressSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectBridgeAddress\n);\n\nexport const walletConnectDeepLinkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectDeepLink\n);\n\nexport const networkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network\n);\n\nexport const apiNetworkSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.apiAddress\n);\n\nexport const explorerAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.explorerAddress\n);\n\nexport const egldLabelSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.egldLabel\n);\n","import {\n  Transaction,\n  GasLimit,\n  GasPrice,\n  Address,\n  TransactionPayload,\n  Balance,\n  ChainID,\n  Nonce,\n  TransactionOptions,\n  TransactionVersion\n} from '@elrondnetwork/erdjs';\nimport {\n  gasLimit as defaultGasLimit,\n  gasPrice,\n  version as defaultVersion\n} from 'constants/index';\nimport { RawTransactionType } from 'types/transactions';\nimport { isStringBase64 } from 'utils/decoders/base64Utils';\n\nexport function newTransaction(rawTransaction: RawTransactionType) {\n  const { data } = rawTransaction;\n  const dataPayload = isStringBase64(data)\n    ? TransactionPayload.fromEncoded(data)\n    : new TransactionPayload(data);\n  return new Transaction({\n    value: Balance.fromString(rawTransaction.value),\n    data: dataPayload,\n    nonce: new Nonce(rawTransaction.nonce),\n    receiver: new Address(rawTransaction.receiver),\n    gasLimit: new GasLimit(rawTransaction.gasLimit ?? defaultGasLimit),\n    gasPrice: new GasPrice(rawTransaction.gasPrice ?? gasPrice),\n    chainID: new ChainID(rawTransaction.chainID),\n    version: new TransactionVersion(rawTransaction.version ?? defaultVersion),\n    ...(rawTransaction.options\n      ? { options: new TransactionOptions(rawTransaction.options) }\n      : {})\n  });\n}\n\nexport default newTransaction;\n","import { Transaction } from '@elrondnetwork/erdjs';\nimport newTransaction from 'models/newTransaction';\nimport {\n  CustomTransactionInformation,\n  RawTransactionType,\n  SignedTransactionsType\n} from 'types/transactions';\nimport {\n  getIsTransactionCompleted,\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'utils/transactions';\nimport { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport interface TransactionsToSignReturnType {\n  callbackRoute?: string;\n  sessionId: string;\n  transactions: Transaction[];\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport const transactionsSelectors = (state: RootState) => state.transactions;\n\nexport const signedTransactionsSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state) => state.signedTransactions as SignedTransactionsType\n);\n\nexport const signTransactionsErrorSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state) => state.signTransactionsError\n);\n\nconst selectTxByStatus = (txStatusVerifier: typeof getIsTransactionPending) => (\n  signedTransactions: SignedTransactionsType\n) =>\n  Object.entries(signedTransactions).reduce((acc, [sessionId, txBody]) => {\n    if (txStatusVerifier(txBody.status)) {\n      acc[sessionId] = txBody;\n    }\n    return acc;\n  }, {} as SignedTransactionsType);\n\nexport const pendingSignedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionPending)\n);\n\nexport const successfulTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionSuccessful)\n);\n\nexport const completedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionCompleted)\n);\n\nexport const failedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionFailed)\n);\n\nexport const timedOutTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionTimedOut)\n);\n\nexport const transactionsToSignSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state): TransactionsToSignReturnType | null => {\n    if (state?.transactionsToSign == null) {\n      return null;\n    }\n    return {\n      ...state.transactionsToSign,\n      transactions:\n        state?.transactionsToSign?.transactions.map((tx: RawTransactionType) =>\n          newTransaction(tx)\n        ) || []\n    };\n  }\n);\n\nexport const transactionStatusSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  (_: RootState, transactionSessionId: string | null) => transactionSessionId,\n  (\n    signedTransactions: SignedTransactionsType,\n    transactionSessionId: string | null\n  ) =>\n    transactionSessionId != null\n      ? signedTransactions?.[transactionSessionId] || {}\n      : {}\n);\n","import { createDeepEqualSelector } from 'redux/selectors/helpers';\nimport {\n  defaultTransactionErrorMessage,\n  defaultTransactionProcessingMessage,\n  defaultTransactionSuccessMessage\n} from 'redux/slices';\nimport { RootState } from '../store';\n\nconst defaultTransactionInfo = {\n  errorMessage: defaultTransactionErrorMessage,\n  successMessage: defaultTransactionSuccessMessage,\n  processingMessage: defaultTransactionProcessingMessage\n};\n\nexport const transactionsInfoSelectors = (state: RootState) =>\n  state.transactionsInfo;\n\nexport const transactionDisplayInfoSelector = createDeepEqualSelector(\n  transactionsInfoSelectors,\n  (_: RootState, transactionSessionId: string | null) => transactionSessionId,\n  (transactionsDisplayInfo: any, transactionSessionId: string | null) =>\n    transactionSessionId != null\n      ? transactionsDisplayInfo?.[Number(transactionSessionId)] ||\n        defaultTransactionInfo\n      : defaultTransactionInfo\n);\n","import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const modalsSliceSelector = (state: RootState) => state.modals;\n\nexport const txSubmittedModalSelector = createDeepEqualSelector(\n  modalsSliceSelector,\n  (state) => state.txSubmittedModal\n);\n\nexport const notificationModalSelector = createDeepEqualSelector(\n  modalsSliceSelector,\n  (state) => state.notificationModal\n);\n","import { isLoggedInSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getIsLoggedIn() {\n  return isLoggedInSelector(store.getState());\n}\n","import { getAccountProvider } from 'providers/accountProvider';\nimport { getProviderType } from 'providers/utils';\nimport { logoutAction } from 'redux/commonActions';\nimport { store } from 'redux/store';\nimport { LoginMethodsEnum } from 'types';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\n\nexport async function logout(\n  callbackUrl?: string,\n  onRedirect?: (callbackUrl?: string) => void\n) {\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  const isLoggedIn = getIsLoggedIn();\n  if (!isLoggedIn || !provider) {\n    return;\n  }\n\n  store.dispatch(logoutAction());\n\n  try {\n    await provider.logout({ callbackUrl });\n    if (callbackUrl && providerType !== LoginMethodsEnum.wallet) {\n      if (typeof onRedirect === 'function') {\n        onRedirect(callbackUrl);\n      } else {\n        window.location.href = callbackUrl;\n      }\n    }\n  } catch (err) {\n    console.error('error logging out', err);\n  }\n}\n","export function buildUrlParams(\n  search: string,\n  urlParams: {\n    [key: string]: string;\n  }\n) {\n  const urlSearchParams: any = new URLSearchParams(search);\n  const params = Object.fromEntries(urlSearchParams);\n  const nextUrlParams = new URLSearchParams({\n    ...params,\n    ...urlParams\n  }).toString();\n  return { nextUrlParams, params };\n}\n","interface SwitchTrueType {\n  default: any;\n  [key: string]: any;\n}\n\ntype ReturnKeys = 'true' | 'false';\n\nexport function switchTrue(object: SwitchTrueType) {\n  const { default: defaultValue, ...rest } = object;\n  const obj = { default: defaultValue, ...rest };\n  const result = Object.keys(obj).reduce((acc, cur) => {\n    return {\n      ...acc,\n      [cur === 'default' ? 'true' : cur]: (obj as any)[cur as ReturnKeys]\n    };\n  }, {} as Record<ReturnKeys, any>);\n  return result['true'];\n}\n","import { getAccountProvider } from 'providers/accountProvider';\nimport { getProviderType } from 'providers/utils';\n\nexport function getAccountProviderType() {\n  const provider = getAccountProvider();\n  return getProviderType(provider);\n}\n","import { chainIDSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getChainID() {\n  return chainIDSelector(store.getState());\n}\n","import { networkSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getNetworkConfig() {\n  return networkSelector(store.getState());\n}\n","import { egldLabelSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getEgldLabel() {\n  return egldLabelSelector(store.getState());\n}\n","import { getAccountProviderType } from './getAccountProviderType';\n\nexport function getIsProviderEqualTo(comparedProviderType: any) {\n  const providerType = getAccountProviderType();\n  return providerType === comparedProviderType;\n}\n","import { getAccountProvider } from 'providers/accountProvider';\nimport {\n  addressSelector,\n  isLoggedInSelector,\n  walletLoginSelector\n} from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { getIsProviderEqualTo } from 'utils/network';\nimport { addressIsValid } from './addressIsValid';\n\nexport function getAddress(): Promise<string> {\n  const { search } = window.location;\n  const appState = store.getState();\n  const provider = getAccountProvider();\n  const address = addressSelector(appState);\n  const loggedIn = isLoggedInSelector(appState);\n  const walletLogin = walletLoginSelector(appState);\n\n  if (!provider) {\n    throw 'provider not initialized';\n  }\n\n  if (getIsProviderEqualTo(LoginMethodsEnum.ledger) && loggedIn) {\n    return new Promise((resolve) => {\n      resolve(address);\n    });\n  }\n\n  return !getIsProviderEqualTo(LoginMethodsEnum.none) &&\n    !getIsProviderEqualTo(LoginMethodsEnum.wallet) &&\n    !getIsProviderEqualTo(LoginMethodsEnum.extra)\n    ? // TODO: does not take into account ledger locked see link for details:\n      // https://github.com/ElrondNetwork/dapp/blob/d5c57695a10055f20d387ba064b6843606789ee9/src/helpers/accountMethods.tsx#L21\n      provider.getAddress()\n    : new Promise((resolve) => {\n        if (walletLogin != null) {\n          const urlSearchParams = new URLSearchParams(search);\n          const params = Object.fromEntries(urlSearchParams as any);\n          if (addressIsValid(params.address)) {\n            resolve(params.address);\n          }\n        }\n        if (loggedIn) {\n          resolve(address);\n        }\n        resolve('');\n      });\n}\n\nexport default getAddress;\n","import { ProxyProvider } from '@elrondnetwork/erdjs';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { networkSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { NetworkType } from 'types';\n\nlet proxyProvider: ProxyProvider | null = null;\n\nexport function initializeProxyProvider(networkConfig?: NetworkType) {\n  const initializationNetworkConfig =\n    networkConfig || networkSelector(store.getState());\n  proxyProvider = new ProxyProvider(initializationNetworkConfig.apiAddress, {\n    timeout: Number(initializationNetworkConfig.apiTimeout)\n  });\n  return proxyProvider;\n}\n\nexport function getProxyProvider(): ProxyProvider {\n  if (proxyProvider == null) {\n    return initializeProxyProvider();\n  } else {\n    return proxyProvider;\n  }\n}\n\nexport async function getAccountFromProxyProvider(address?: string) {\n  try {\n    const proxy = getProxyProvider();\n    return await proxy.getAccount(new Address(address));\n  } catch (err) {\n    return null;\n  }\n}\n\nexport async function getNetworkConfigFromProxyProvider() {\n  try {\n    return await getProxyProvider().getNetworkConfig();\n  } catch (err) {\n    console.error('error fetching network config');\n    return null;\n  }\n}\n","import { getAccountFromProxyProvider } from 'providers/proxyProvider';\n\nexport function getAccount(address?: string) {\n  return getAccountFromProxyProvider(address);\n}\n\nexport default getAccount;\n","import { setAccountNonce } from 'redux/slices';\nimport { store } from 'redux/store';\n\n// this is is needed to allow the users to set the nonce dynamically from outside the library\n// without getting access to store.dispatch function\nexport function setNonce(nonce: number) {\n  store.dispatch(setAccountNonce(nonce));\n}\n","import { AccountOnNetwork } from '@elrondnetwork/erdjs';\nimport { accountNonceSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getLatestNonce(account: AccountOnNetwork | null) {\n  const appState = store.getState();\n  const currentAccountNonce = accountNonceSelector(appState);\n  if (!account) {\n    return currentAccountNonce;\n  }\n  return currentAccountNonce && !isNaN(currentAccountNonce)\n    ? Math.max(currentAccountNonce, account.nonce.valueOf())\n    : account.nonce.valueOf();\n}\n\nexport default getLatestNonce;\n","import { accountSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { getAccount } from './getAccount';\n\nexport async function getAccountBalance(address?: string) {\n  let accountAddress = address;\n  if (accountAddress == null) {\n    const account = accountSelector(store.getState());\n    accountAddress = account.address;\n  }\n  const account = await getAccount(accountAddress);\n  if (account == null) {\n    throw 'Could not read account, user not logged in';\n  }\n  return account?.balance?.toString();\n}\n","import { getAccountProvider } from 'providers/accountProvider';\nimport { setAccount } from 'redux/slices';\nimport { store } from 'redux/store';\nimport getAccount from './getAccount';\nimport getAddress from './getAddress';\nimport getLatestNonce from './getLatestNonce';\n\nconst setNewAccount = async () => {\n  try {\n    const address = await getAddress();\n    try {\n      const account = await getAccount(address);\n      if (account != null) {\n        const accountData = {\n          balance: account.balance.toString(),\n          address,\n          nonce: getLatestNonce(account)\n        };\n        store.dispatch(setAccount(accountData));\n        return accountData;\n      }\n    } catch (e) {\n      console.error('Failed getting account ', e);\n    }\n  } catch (e) {\n    console.error('Failed getting address ', e);\n  }\n  return null;\n};\n\nexport async function refreshAccount() {\n  const provider = getAccountProvider();\n  if (provider == null) {\n    throw 'Provider not initialized';\n  }\n  if (provider.isInitialized()) {\n    return setNewAccount();\n  } else {\n    try {\n      const initialized = await provider.init();\n      if (!initialized) {\n        return;\n      }\n      return setNewAccount();\n    } catch (e) {\n      console.error('Failed initializing provider ', e);\n    }\n  }\n  return undefined;\n}\n","const isAddressOfMetachain = (pubKey: Buffer) => {\n  // prettier-ignore\n  const metachainPrefix = Buffer.from([\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n  ]);\n  const pubKeyPrefix = pubKey.slice(0, metachainPrefix.length);\n  if (pubKeyPrefix.equals(metachainPrefix)) {\n    return true;\n  }\n  const zeroAddress = Buffer.alloc(32).fill(0);\n  return pubKey.equals(zeroAddress);\n};\nexport const getShardOfAddress = (hexPubKey: any) => {\n  try {\n    const numShards = 3;\n    const maskHigh = parseInt('11', 2);\n    const maskLow = parseInt('01', 2);\n    const pubKey = Buffer.from(hexPubKey, 'hex');\n    const lastByteOfPubKey = pubKey[31];\n    if (isAddressOfMetachain(pubKey)) {\n      return 4294967295;\n    }\n    let shard = lastByteOfPubKey & maskHigh;\n    if (shard > numShards - 1) {\n      shard = lastByteOfPubKey & maskLow;\n    }\n    return shard;\n  } catch (err) {\n    return -1;\n  }\n};\n","import { SignableMessage, Address } from '@elrondnetwork/erdjs';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { getAddress } from 'utils/account/getAddress';\n\ninterface SignMessageType {\n  message: string;\n  callbackRoute?: string;\n}\n\nexport async function signMessage({ message, callbackRoute }: SignMessageType) {\n  const address = await getAddress();\n  const provider = getAccountProvider();\n\n  const callbackUrl = `${window.location.origin}${callbackRoute}`;\n  const signableMessage = new SignableMessage({\n    address: new Address(address),\n    message: Buffer.from(message, 'ascii')\n  });\n  const signedMessage = await provider.signMessage(signableMessage, {\n    callbackUrl: encodeURIComponent(callbackUrl)\n  });\n\n  return signedMessage;\n}\n\nexport default signMessage;\n","import { loginAction } from 'redux/commonActions';\nimport { store } from 'redux/store';\nimport { LoginMethodsEnum } from 'types';\n\nexport function loginWithExternalProvider(address: string) {\n  store.dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.extra }));\n}\n","export const logarithmicRest = (position: number) => {\n  const minp = 0;\n  const maxp = 10;\n\n  const minv = Math.log(0.005);\n  const maxv = Math.log(2);\n\n  const scale = (maxv - minv) / (maxp - minp);\n\n  return Math.exp(minv + scale * (position - minp));\n};\n","import BigNumber from 'bignumber.js';\n\nexport const stringIsInteger = (\n  integer: string,\n  positiveNumbersOnly = true\n) => {\n  const stringInteger = String(integer);\n  if (!stringInteger.match(/^[-]?\\d+$/)) {\n    return false;\n  }\n  const bNparsed = new BigNumber(stringInteger);\n  const limit = positiveNumbersOnly ? 0 : -1;\n  return (\n    bNparsed.toString(10) === stringInteger && bNparsed.comparedTo(0) >= limit\n  );\n};\n","import BigNumber from 'bignumber.js';\n\nexport const stringIsFloat = (amount: string) => {\n  // tslint:disable-next-line\n  let [wholes, decimals] = amount.split('.');\n  if (decimals) {\n    while (decimals.charAt(decimals.length - 1) === '0') {\n      decimals = decimals.slice(0, -1);\n    }\n  }\n  const number = decimals ? [wholes, decimals].join('.') : wholes;\n  const bNparsed = new BigNumber(number);\n  return bNparsed.toString(10) === number && bNparsed.comparedTo(0) >= 0;\n};\n","const esdtParts = 2;\nconst nftParts = 3;\n\nconst defaultResult = {\n  isEsdt: false,\n  isNft: false,\n  isEgld: false\n};\n\nexport function getIdentifierType(identifier?: string): {\n  isEsdt: boolean;\n  isNft: boolean;\n  isEgld: boolean;\n} {\n  const parts = identifier?.split('-').length;\n\n  if (parts === esdtParts) {\n    return {\n      ...defaultResult,\n      isEsdt: true\n    };\n  }\n  if (parts === nftParts) {\n    return {\n      ...defaultResult,\n      isNft: true\n    };\n  }\n  return {\n    ...defaultResult,\n    isEgld: true\n  };\n}\nexport default getIdentifierType;\n","export function pipe<ValueType>(previous: ValueType) {\n  return {\n    if: function (condition: boolean) {\n      if (condition) {\n        return {\n          then: (newValue: ValueType | ((prop: ValueType) => ValueType)) =>\n            // if a callback is passed, callback is executed with previous value\n            newValue instanceof Function\n              ? pipe(newValue(previous))\n              : pipe(newValue)\n        };\n      } else {\n        return {\n          then: () => pipe(previous)\n        };\n      }\n    },\n\n    then: (newValue: ValueType | ((prop: ValueType) => ValueType)) =>\n      newValue instanceof Function ? pipe(newValue(previous)) : pipe(newValue),\n\n    valueOf: function () {\n      return previous;\n    }\n  };\n}\nexport default pipe;\n","import { Balance, Token } from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\nimport {\n  denomination as configDenomination,\n  decimals as configDecimals\n} from 'constants/index';\nimport { stringIsInteger } from 'utils/validation';\nimport pipe from './pipe';\n\nBigNumber.config({ ROUNDING_MODE: BigNumber.ROUND_FLOOR });\n\nexport function denominate({\n  input,\n  denomination = configDenomination,\n  decimals = configDecimals,\n  showLastNonZeroDecimal = true,\n  showIsLessThanDecimalsLabel = false,\n  addCommas = false\n}: {\n  input: string | Balance;\n  denomination?: number;\n  decimals?: number;\n  showIsLessThanDecimalsLabel?: boolean;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}) {\n  const token = new Token({ decimals: denomination });\n\n  if (typeof input === 'string' && !stringIsInteger(input, false)) {\n    throw new Error('Invalid input');\n  }\n\n  return (\n    pipe(input as string)\n      // denominate\n      .if(typeof input === 'string')\n      .then(() =>\n        new Balance(token, 0, new BigNumber(input as string)).toDenominated()\n      )\n\n      .if(input.constructor === Balance)\n      .then(() => (input as Balance).toDenominated())\n\n      // format\n      .then((current) => {\n        const bnBalance = new BigNumber(current);\n\n        if (bnBalance.isZero()) {\n          return '0';\n        }\n        const balance = bnBalance.toString(10);\n        const [integerPart, decimalPart] = balance.split('.');\n        const bNdecimalPart = new BigNumber(decimalPart || 0);\n\n        const decimalPlaces = pipe(0)\n          .if(Boolean(decimalPart && showLastNonZeroDecimal))\n          .then(() => Math.max(decimalPart.length, decimals))\n\n          .if(bNdecimalPart.isZero() && !showLastNonZeroDecimal)\n          .then(0)\n\n          .if(Boolean(decimalPart && !showLastNonZeroDecimal))\n          .then(() => Math.min(decimalPart.length, decimals))\n\n          .valueOf();\n\n        const shownDecimalsAreZero =\n          decimalPart &&\n          decimals >= 1 &&\n          decimals <= decimalPart.length &&\n          bNdecimalPart.isGreaterThan(0) &&\n          new BigNumber(decimalPart.substring(0, decimals)).isZero();\n\n        const formatted = bnBalance.toFormat(decimalPlaces);\n\n        const formattedBalance = pipe(balance)\n          .if(addCommas)\n          .then(formatted)\n\n          .if(Boolean(shownDecimalsAreZero))\n          .then((current) => {\n            const integerPartZero = new BigNumber(integerPart).isZero();\n            const [numericPart, decimalSide] = current.split('.');\n\n            const zeroPlaceholders = new Array(decimals - 1).fill(0);\n            const zeros = [...zeroPlaceholders, 0].join('');\n            const minAmount = [...zeroPlaceholders, 1].join(''); // 00..1\n\n            if (!integerPartZero) {\n              return `${numericPart}.${zeros}`;\n            }\n\n            if (showIsLessThanDecimalsLabel) {\n              return `<${numericPart}.${minAmount}`;\n            }\n\n            return `${numericPart}.${decimalSide}`;\n          })\n\n          .if(Boolean(!shownDecimalsAreZero && decimalPart))\n          .then((current) => {\n            if (showLastNonZeroDecimal) {\n              return current;\n            }\n\n            const [numericPart] = current.split('.');\n            const decimalSide = decimalPart.substring(0, decimalPlaces);\n\n            if (!decimalSide) {\n              return numericPart;\n            }\n\n            return `${numericPart}.${decimalSide}`;\n          })\n\n          .valueOf();\n\n        return formattedBalance;\n      })\n\n      .valueOf()\n  );\n}\nexport default denominate;\n","import {\n  createBalanceBuilder,\n  Token,\n  TokenType\n} from '@elrondnetwork/erdjs/out';\nimport { denomination as configDenomination } from 'constants/index';\n\nexport function nominate(input: string, customDenomination?: number) {\n  const balance = createBalanceBuilder(\n    new Token({\n      decimals: customDenomination || configDenomination,\n      type: TokenType.Fungible\n    })\n  );\n  return balance(input).toString();\n}\n\nexport default nominate;\n","import {\n  Transaction,\n  Nonce,\n  Balance,\n  GasPrice,\n  GasLimit,\n  TransactionPayload,\n  ChainID,\n  TransactionVersion,\n  Address,\n  NetworkConfig,\n  GasPriceModifier\n} from '@elrondnetwork/erdjs';\nimport { stringIsFloat, stringIsInteger } from 'utils/validation';\n\ninterface CalculateFeeLimitType {\n  gasLimit: string;\n  gasPrice: string;\n  data: string;\n  gasPerDataByte: string;\n  gasPriceModifier: string;\n  chainId: string;\n  minGasLimit?: string;\n  defaultGasPrice?: string;\n}\nconst placeholderData = {\n  from: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa',\n  to: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa'\n};\nexport function calculateFeeLimit({\n  minGasLimit = '50000',\n  gasLimit,\n  gasPrice,\n  data: inputData,\n  gasPerDataByte,\n  gasPriceModifier,\n  defaultGasPrice = '1000000000',\n  chainId\n}: CalculateFeeLimitType) {\n  const data = inputData || '';\n  const validGasLimit = stringIsInteger(gasLimit) ? gasLimit : minGasLimit;\n  const validGasPrice = stringIsFloat(gasPrice) ? gasPrice : defaultGasPrice;\n  const transaction = new Transaction({\n    nonce: new Nonce(0),\n    value: Balance.Zero(),\n    receiver: new Address(placeholderData.to),\n    gasPrice: new GasPrice(parseInt(validGasPrice)),\n    gasLimit: new GasLimit(parseInt(validGasLimit)),\n    data: new TransactionPayload(data.trim()),\n    chainID: new ChainID(chainId),\n    version: new TransactionVersion(1)\n  });\n\n  const networkConfig = new NetworkConfig();\n  networkConfig.MinGasLimit = new GasLimit(parseInt(minGasLimit));\n  networkConfig.GasPerDataByte = parseInt(gasPerDataByte);\n  networkConfig.GasPriceModifier = new GasPriceModifier(\n    parseFloat(gasPriceModifier)\n  );\n  try {\n    const bNfee = transaction.computeFee(networkConfig);\n    const fee = bNfee.toString(10);\n    return fee;\n  } catch (err) {\n    return '0';\n  }\n}\n","export const getUsdValue = ({\n  amount,\n  usd,\n  decimals = 2\n}: {\n  amount: string;\n  usd: number;\n  decimals?: number;\n}) => {\n  const sum = (parseFloat(amount) * usd).toFixed(decimals);\n  return parseFloat(sum).toLocaleString('en', {\n    maximumFractionDigits: decimals,\n    minimumFractionDigits: decimals\n  });\n};\n","import { Address, TransactionPayload } from '@elrondnetwork/erdjs';\nimport { TypesOfSmartContractCallsEnum } from 'types';\nimport { addressIsValid } from './account';\nimport { isStringBase64 } from './decoders';\n\nexport const ESDTTransferTypes = [\n  'ESDTNFTTransfer',\n  'ESDTNFTBurn',\n  'ESDTNFTAddQuantity',\n  'ESDTNFTCreate',\n  'MultiESDTNFTTransfer',\n  'ESDTTransfer',\n  'ESDTBurn',\n  'ESDTLocalMint',\n  'ESDTLocalBurn',\n  'ESDTWipe',\n  'ESDTFreeze'\n];\n\nexport function isContract(\n  receiver: string,\n  sender?: string,\n  data = ''\n): boolean {\n  const isValid = addressIsValid(receiver);\n\n  if (!isValid) {\n    return false;\n  }\n\n  const isContract = new Address(receiver).isContractAddress();\n\n  if (isContract) {\n    return true;\n  }\n\n  const extractedAddress = getAddressFromDataField({ receiver, data });\n\n  if (!extractedAddress) {\n    return false;\n  }\n\n  const isExtractedAddressContractCall = new Address(\n    extractedAddress\n  ).isContractAddress();\n\n  return (\n    isExtractedAddressContractCall || isSelfESDTContract(receiver, sender, data)\n  );\n}\n\nconst isHexValidCharacters = (str: string) => {\n  return str.toLowerCase().match(/[0-9a-f]/g);\n};\nconst isHexValidLength = (str: string) => {\n  return str.length % 2 === 0;\n};\n\nexport function isSelfESDTContract(\n  receiver: string,\n  sender?: string,\n  data?: string\n) {\n  const parts = data?.split('@');\n  if (parts == null) {\n    return false;\n  }\n  const [type, ...restParts] = parts;\n  const isSelfTransaction =\n    sender != null && receiver != null && receiver === sender;\n  const isCorrectESDTType = ESDTTransferTypes.includes(type);\n  const areDataPartsValid = restParts.every(\n    (part) => isHexValidCharacters(part) && isHexValidLength(part)\n  );\n  return isSelfTransaction && isCorrectESDTType && areDataPartsValid;\n}\n\nexport function getAddressFromDataField({\n  receiver,\n  data\n}: {\n  receiver: string;\n  data: string;\n}) {\n  try {\n    if (!data) {\n      return receiver;\n    }\n    const parsedData = isStringBase64(data)\n      ? TransactionPayload.fromEncoded(data).toString()\n      : data;\n\n    const addressIndex = getAddressIndex(parsedData);\n\n    const parts = parsedData.split('@');\n    return addressIndex > -1 ? parts[addressIndex] : receiver;\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n}\n\nfunction getAddressIndex(data: string) {\n  if (data.includes(TypesOfSmartContractCallsEnum.MultiESDTNFTTransfer)) {\n    return 1;\n  }\n  if (data.includes(TypesOfSmartContractCallsEnum.ESDTNFTTransfer)) {\n    return 4;\n  }\n  return -1;\n}\n\nexport default isContract;\n","let classnames: any = {};\ntry {\n  classnames = require('classnames');\n} catch (err) {}\n\nexport default classnames;\n","import classNames from 'optionalPackages/classnames';\n\nexport function getGeneratedClasses(\n  className: string,\n  shouldRenderDefaultCss: boolean,\n  defaultStyles: Record<string, string>\n) {\n  return Object.entries(defaultStyles).reduce(\n    (acc, [key, defaultClassNames]) => {\n      acc[key] = classNames?.(\n        `${className}_${key}`,\n        shouldRenderDefaultCss && (defaultClassNames as string)\n      );\n      return acc;\n    },\n    {} as Record<string, string>\n  );\n}\n","export const wrapperClassName = 'dapp-core-ui-component';\nexport default wrapperClassName;\n","import React from 'react';\nimport {\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook\n} from 'react-redux';\n\nconst defaultContextValue: any = null;\nexport const DappCoreContext = React.createContext(defaultContextValue);\n\nexport const useStore = createStoreHook(DappCoreContext);\nexport const useDispatch = createDispatchHook(DappCoreContext);\nexport const useSelector = createSelectorHook(DappCoreContext);\n","import { useState } from 'react';\nimport { ExtensionProvider } from '@elrondnetwork/erdjs';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'redux/commonActions';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { isLoggedInSelector } from 'redux/selectors';\nimport { setTokenLogin } from 'redux/slices';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { optionalRedirect } from 'utils/internal';\nimport { LoginHookGenericStateType, InitiateLoginFunctionType } from '../types';\n\ninterface UseExtensionLoginPropsType {\n  callbackRoute: string;\n  token?: string;\n  redirectAfterLogin?: boolean;\n}\n\nexport type UseExtensionLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useExtensionLogin = ({\n  callbackRoute,\n  token,\n  redirectAfterLogin = false\n}: UseExtensionLoginPropsType): UseExtensionLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const dispatch = useDispatch();\n\n  async function initiateLogin() {\n    setIsLoading(true);\n    const provider: ExtensionProvider = ExtensionProvider.getInstance();\n\n    try {\n      const isSuccessfullyInitialized: boolean = await provider.init();\n\n      if (!isSuccessfullyInitialized) {\n        console.warn(\n          'Something went wrong trying to redirect to wallet login..'\n        );\n        return;\n      }\n\n      const callbackUrl: string = encodeURIComponent(\n        `${window.location.origin}${callbackRoute}`\n      );\n      const providerLoginData = {\n        callbackUrl,\n        ...(token && { token })\n      };\n\n      await provider.login(providerLoginData);\n\n      setAccountProvider(provider);\n\n      const { signature, address } = provider.account;\n      if (signature) {\n        dispatch(\n          setTokenLogin({\n            loginToken: String(token),\n            signature\n          })\n        );\n      }\n      dispatch(\n        loginAction({ address, loginMethod: LoginMethodsEnum.extension })\n      );\n      optionalRedirect(callbackRoute, redirectAfterLogin);\n    } catch (error) {\n      console.error('error loging in', error);\n      // TODO: can be any or typed error\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n  return [\n    initiateLogin,\n    {\n      loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n","import { useState } from 'react';\nimport { newWalletProvider } from 'providers/utils';\nimport { useSelector } from 'redux/DappProviderContext';\nimport { isLoggedInSelector, networkSelector } from 'redux/selectors';\nimport { setWalletLogin } from 'redux/slices';\nimport { store } from 'redux/store';\nimport { LoginHookGenericStateType, InitiateLoginFunctionType } from '../types';\n\ninterface UseWebWalletLoginPropsType {\n  callbackRoute: string;\n  token?: string;\n}\n\nexport type UseWebWalletLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useWebWalletLogin = ({\n  callbackRoute,\n  token\n}: UseWebWalletLoginPropsType): UseWebWalletLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n\n  async function initiateLogin() {\n    try {\n      setIsLoading(true);\n      const appState = store.getState();\n      const network = networkSelector(appState);\n      const provider = newWalletProvider(network.walletAddress);\n\n      const now = new Date();\n      const expires: number = now.setMinutes(now.getMinutes() + 3) / 1000;\n      const walletLoginData = {\n        data: {},\n        expires: expires\n      };\n\n      store.dispatch(setWalletLogin(walletLoginData));\n\n      const callbackUrl: string = encodeURIComponent(\n        `${window.location.origin}${callbackRoute}`\n      );\n      const loginData = {\n        callbackUrl: callbackUrl,\n        ...(token && { token })\n      };\n\n      await provider.login(loginData);\n    } catch (error) {\n      console.error(error);\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = error != null;\n\n  return [\n    initiateLogin,\n    {\n      error,\n      loginFailed,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n\nexport default useWebWalletLogin;\n","import { useEffect, useState } from 'react';\nimport { HWProvider } from '@elrondnetwork/erdjs';\nimport ledgerErrorCodes from 'constants/ledgerErrorCodes';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { getProxyProvider } from 'providers/proxyProvider';\nimport { getLedgerConfiguration } from 'providers/utils';\nimport { loginAction } from 'redux/commonActions';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { isLoggedInSelector, ledgerAccountSelector } from 'redux/selectors';\nimport {\n  updateLedgerAccount,\n  setLedgerLogin,\n  setTokenLogin,\n  setLedgerAccount\n} from 'redux/slices';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { optionalRedirect } from 'utils/internal';\nimport { LoginHookGenericStateType, InitiateLoginFunctionType } from '../types';\n\nconst ledgerAppErrorText = 'Check if Elrond app is open on Ledger';\nconst failInitializeErrorText =\n  'Could not initialise ledger app, make sure Elrond app is open';\n\nconst defaultAddressesPerPage = 10;\n\nexport interface UseLedgerLoginPropsType {\n  callbackRoute: string;\n  addressesPerPage?: number;\n  token?: string;\n  redirectAfterLogin?: boolean;\n}\n\nexport interface SelectedAddress {\n  address: string;\n  index: number;\n}\n\nexport interface LedgerLoginHookCustomStateType {\n  accounts: string[];\n  showAddressList: boolean;\n  startIndex: number;\n  selectedAddress: SelectedAddress | null;\n  version: string;\n  contractDataEnabled: boolean;\n\n  onGoToPrevPage: () => void;\n  onGoToNextPage: () => void;\n  onSelectAddress: (address: SelectedAddress | null) => void;\n  onConfirmSelectedAddress: () => void;\n}\n\nexport type LedgerLoginHookReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  LedgerLoginHookCustomStateType\n];\n\nexport function useLedgerLogin({\n  callbackRoute,\n  token,\n  addressesPerPage = defaultAddressesPerPage,\n  redirectAfterLogin = false\n}: UseLedgerLoginPropsType): LedgerLoginHookReturnType {\n  const ledgerAccount = useSelector(ledgerAccountSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const proxy = getProxyProvider();\n  const dispatch = useDispatch();\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const hwWalletP = new HWProvider(proxy);\n  const [startIndex, setStartIndex] = useState(0);\n  const [accounts, setAccounts] = useState<string[]>([]);\n  const [version, setVersion] = useState('');\n  const [contractDataEnabled, setContractDataEnabled] = useState(false);\n  const [selectedAddress, setSelectedAddress] =\n    useState<SelectedAddress | null>(null);\n\n  const [showAddressList, setShowAddressList] = useState(false);\n\n  function dispatchLoginActions({\n    provider,\n    address,\n    index,\n    signature\n  }: {\n    provider: HWProvider;\n    address: string;\n    index: number;\n    signature?: string;\n  }) {\n    setAccountProvider(provider);\n\n    dispatch(setLedgerLogin({ index, loginType: LoginMethodsEnum.ledger }));\n\n    if (signature) {\n      dispatch(\n        setTokenLogin({\n          loginToken: String(token),\n          signature\n        })\n      );\n    }\n    dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.ledger }));\n    optionalRedirect(callbackRoute, redirectAfterLogin);\n  }\n\n  const onLoginFailed = (err: any, customMessage?: string) => {\n    if (err.statusCode in ledgerErrorCodes) {\n      setError(\n        (ledgerErrorCodes as any)[err.statusCode].message + customMessage\n      );\n    }\n    setIsLoading(false);\n    console.warn(err);\n    dispatch(setLedgerAccount(null));\n  };\n\n  async function loginUser(hwWalletProvider: HWProvider) {\n    if (selectedAddress == null) {\n      return false;\n    }\n    const { index } = selectedAddress;\n\n    if (token) {\n      try {\n        const loginInfo = await hwWalletProvider.tokenLogin({\n          token: Buffer.from(`${token}{}`),\n          addressIndex: index\n        });\n        dispatchLoginActions({\n          address: loginInfo.address,\n          provider: hwWalletProvider,\n          index: index,\n          signature: loginInfo.signature.hex()\n        });\n      } catch (err) {\n        onLoginFailed(err, '. Update Elrond App to continue.');\n      }\n    } else {\n      try {\n        const address = await hwWalletProvider.login({ addressIndex: index });\n        dispatchLoginActions({\n          address,\n          provider: hwWalletProvider,\n          index\n        });\n      } catch (err) {\n        onLoginFailed(err);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  async function onConfirmSelectedAddress() {\n    try {\n      setIsLoading(true);\n      if (selectedAddress == null) {\n        return false;\n      }\n      if (ledgerAccount) {\n        dispatch(updateLedgerAccount(selectedAddress));\n      } else {\n        dispatch(\n          setLedgerAccount({\n            ...selectedAddress,\n            version,\n            hasContractDataEnabled: contractDataEnabled\n          })\n        );\n      }\n\n      const hwWalletProvider = new HWProvider(proxy);\n      const initialized = await hwWalletProvider.init();\n      if (!initialized) {\n        setError(failInitializeErrorText);\n        console.warn(failInitializeErrorText);\n        return false;\n      }\n      setIsLoading(false);\n      await loginUser(hwWalletProvider);\n    } catch (err) {\n      if ((err as any).statusCode in ledgerErrorCodes) {\n        setError((ledgerErrorCodes as any)[(err as any).statusCode].message);\n      }\n      console.warn(failInitializeErrorText, err);\n    } finally {\n      setIsLoading(false);\n    }\n    setShowAddressList(false);\n    return true;\n  }\n\n  async function fetchAccounts() {\n    try {\n      setIsLoading(true);\n      const initialized = await hwWalletP.init();\n      if (!initialized) {\n        setError(failInitializeErrorText);\n        console.warn(failInitializeErrorText);\n        setIsLoading(false);\n        return;\n      }\n      const accounts = await hwWalletP.getAccounts(\n        startIndex,\n        addressesPerPage\n      );\n      const ledgerData = await getLedgerConfiguration(hwWalletP);\n      setVersion(ledgerData.version);\n      setContractDataEnabled(ledgerData.dataEnabled);\n      setAccounts(accounts);\n      setIsLoading(false);\n    } catch (err) {\n      if ((err as any).statusCode in ledgerErrorCodes) {\n        setError((ledgerErrorCodes as any)[(err as any).statusCode].message);\n      } else {\n        setError(ledgerAppErrorText);\n      }\n      console.error('error', err);\n      setIsLoading(false);\n    }\n  }\n\n  async function onStartLogin() {\n    setError('');\n    try {\n      setIsLoading(true);\n      if (ledgerAccount != null) {\n        const hwWalletP = new HWProvider(proxy);\n        const initialized = await hwWalletP.init();\n        if (!initialized) {\n          console.warn(failInitializeErrorText);\n          return;\n        }\n        const address = await hwWalletP.login({\n          addressIndex: selectedAddress?.index\n        });\n        setAccountProvider(hwWalletP);\n        dispatch(\n          loginAction({ address, loginMethod: LoginMethodsEnum.ledger })\n        );\n        optionalRedirect(callbackRoute, redirectAfterLogin);\n      } else {\n        if (accounts?.length > 0) {\n          setShowAddressList(true);\n        } else {\n          await fetchAccounts();\n          setShowAddressList(true);\n        }\n      }\n    } catch (error) {\n      console.error('error ', error);\n      setError(ledgerAppErrorText);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function onSelectAddress(newSelectedAddress: SelectedAddress | null) {\n    setSelectedAddress(newSelectedAddress);\n  }\n\n  function onGoToNextPage() {\n    setSelectedAddress(null);\n    setStartIndex((current) => current + 1);\n  }\n\n  function onGoToPrevPage() {\n    setSelectedAddress(null);\n    setStartIndex((current) => (current === 0 ? 0 : current - 1));\n  }\n\n  useEffect(() => {\n    fetchAccounts();\n  }, [startIndex]);\n\n  const loginFailed = Boolean(error);\n\n  return [\n    onStartLogin,\n    {\n      loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed\n    },\n    {\n      accounts,\n      showAddressList,\n      startIndex,\n      selectedAddress,\n      version,\n      contractDataEnabled,\n\n      onGoToPrevPage,\n      onGoToNextPage,\n      onSelectAddress,\n      onConfirmSelectedAddress\n    }\n  ];\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useUpdateEffect(effect: any, dependencies: any[] = []) {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      effect();\n    }\n  }, dependencies);\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { WalletConnectProvider } from '@elrondnetwork/erdjs';\n\nimport { useUpdateEffect } from 'hooks/useUpdateEffect';\nimport {\n  getAccountProvider,\n  setAccountProvider\n} from 'providers/accountProvider';\nimport { getProxyProvider } from 'providers/proxyProvider';\nimport { loginAction } from 'redux/commonActions';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport {\n  isLoggedInSelector,\n  walletConnectBridgeAddressSelector,\n  walletConnectDeepLinkSelector\n} from 'redux/selectors';\nimport {\n  setTokenLogin,\n  setTokenLoginSignature,\n  setWalletConnectLogin\n} from 'redux/slices';\n\nimport { LoginMethodsEnum } from 'types/enums';\nimport { logout } from 'utils';\nimport { optionalRedirect } from 'utils/internal';\nimport Timeout = NodeJS.Timeout;\nimport { LoginHookGenericStateType } from '../types';\n\ninterface InitWalletConnectType {\n  callbackRoute: string;\n  logoutRoute: string;\n  token?: string;\n  shouldLoginUser?: boolean;\n  redirectAfterLogin?: boolean;\n}\n\nexport interface WalletConnectLoginHookCustomStateType {\n  uriDeepLink: string | null;\n  walletConnectUri?: string;\n}\n\nexport type WalletConnectLoginHookReturnType = [\n  (loginProvider?: boolean) => void,\n  LoginHookGenericStateType,\n  WalletConnectLoginHookCustomStateType\n];\n\nexport const useWalletConnectLogin = ({\n  callbackRoute,\n  logoutRoute,\n  token,\n  redirectAfterLogin = false\n}: InitWalletConnectType): WalletConnectLoginHookReturnType => {\n  const dispatch = useDispatch();\n  const heartbeatInterval = 15000;\n\n  const [error, setError] = useState<string>('');\n  const [wcUri, setWcUri] = useState<string>('');\n\n  const proxy = getProxyProvider();\n\n  const provider = getAccountProvider();\n  const walletConnectBridgeAddress = useSelector(\n    walletConnectBridgeAddressSelector\n  );\n  const walletConnectDeepLink = useSelector(walletConnectDeepLinkSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const providerRef = useRef<any>(provider);\n\n  let heartbeatDisconnectInterval: Timeout;\n\n  const hasWcUri = Boolean(wcUri);\n  const isLoading = !hasWcUri;\n  const uriDeepLink = hasWcUri\n    ? `${walletConnectDeepLink}?wallet-connect=${encodeURIComponent(wcUri)}`\n    : null;\n\n  useEffect(() => {\n    handleHeartbeat();\n\n    const interval = setInterval(() => {\n      handleHeartbeat();\n    }, heartbeatInterval);\n\n    return () => clearInterval(interval);\n  }, [provider]);\n\n  useUpdateEffect(() => {\n    generateWcUri();\n  }, [token]);\n\n  useUpdateEffect(() => {\n    providerRef.current = provider;\n  }, [provider]);\n\n  async function handleHeartbeat() {\n    const isProviderConnected = Boolean(\n      providerRef.current?.walletConnector?.connected\n    );\n    if (!isProviderConnected) {\n      return;\n    }\n\n    const customMessage = {\n      method: 'heartbeat',\n      params: {}\n    };\n\n    try {\n      await providerRef.current.sendCustomMessage(customMessage);\n    } catch (error) {\n      console.error('Connection lost', error);\n      handleOnLogout();\n    }\n  }\n\n  async function handleOnLogin() {\n    try {\n      const provider = providerRef.current;\n      if (isLoggedIn) {\n        return;\n      }\n      if (provider == null) {\n        return;\n      }\n      const address = await provider.getAddress();\n      const signature = await provider.getSignature();\n      const hasSignature = Boolean(signature);\n      const loginActionData = {\n        address: address,\n        loginMethod: LoginMethodsEnum.walletconnect\n      };\n\n      const loginData = {\n        logoutRoute: logoutRoute,\n        loginType: 'walletConnect',\n        callbackRoute: callbackRoute\n      };\n\n      if (hasSignature) {\n        dispatch(setWalletConnectLogin(loginData));\n        dispatch(setTokenLoginSignature(signature));\n      } else {\n        dispatch(setWalletConnectLogin(loginData));\n      }\n      dispatch(loginAction(loginActionData));\n\n      provider.walletConnector.on('heartbeat', () => {\n        clearInterval(heartbeatDisconnectInterval);\n        heartbeatDisconnectInterval = setInterval(() => {\n          console.log('Maiar Wallet Connection Lost');\n          handleOnLogout();\n          clearInterval(heartbeatDisconnectInterval);\n        }, 150000);\n      });\n\n      optionalRedirect(callbackRoute, redirectAfterLogin);\n    } catch (err) {\n      setError('Invalid address');\n      console.error(err);\n    }\n  }\n\n  const handleOnLogout = () => {\n    logout(logoutRoute);\n  };\n\n  async function initiateLogin(loginProvider = true) {\n    const shouldGenerateWcUri = loginProvider && !wcUri;\n    if (\n      !walletConnectBridgeAddress ||\n      (providerRef?.current?.isInitialized?.() && !shouldGenerateWcUri)\n    ) {\n      return;\n    }\n\n    const providerHandlers = {\n      onClientLogin: handleOnLogin,\n      onClientLogout: handleOnLogout\n    };\n\n    const newProvider = new WalletConnectProvider(\n      proxy,\n      walletConnectBridgeAddress,\n      providerHandlers\n    );\n\n    await newProvider.init();\n    setAccountProvider(newProvider);\n    providerRef.current = newProvider;\n    if (loginProvider) {\n      generateWcUri();\n    }\n  }\n\n  async function generateWcUri() {\n    if (!walletConnectBridgeAddress) {\n      return;\n    }\n\n    const walletConnectUri: string | undefined =\n      await providerRef.current?.login();\n    const hasUri = Boolean(walletConnectUri);\n\n    if (!hasUri) {\n      return;\n    }\n\n    if (!token) {\n      setWcUri(walletConnectUri as string);\n      return;\n    }\n\n    const wcUriWithToken = `${walletConnectUri}&token=${token}`;\n\n    setWcUri(wcUriWithToken);\n    dispatch(setTokenLogin({ loginToken: token }));\n  }\n\n  const loginFailed = error != null;\n  return [\n    initiateLogin,\n    {\n      error,\n      loginFailed,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    },\n    { uriDeepLink, walletConnectUri: wcUri }\n  ];\n};\n\nexport default useWalletConnectLogin;\n","import {\n  clearSignedTransaction,\n  clearAllTransactionsToSign,\n  clearAllSignedTransactions\n} from 'redux/slices';\nimport { store } from 'redux/store';\n\nexport function removeTransactionsToSign(sessionId: string) {\n  store.dispatch(clearSignedTransaction(sessionId));\n}\nexport function removeSignedTransaction(sessionId: string) {\n  store.dispatch(clearSignedTransaction(sessionId));\n}\n\nexport function removeAllSignedTransactions() {\n  store.dispatch(clearAllSignedTransactions());\n}\n\nexport function removeAllTransactionsToSign() {\n  store.dispatch(clearAllTransactionsToSign());\n}\n","import { Transaction } from '@elrondnetwork/erdjs/out';\nimport BigNumber from 'bignumber.js';\nimport { gasPerDataByte, gasPriceModifier } from 'constants/index';\nimport { calculateFeeLimit } from 'utils/operations';\n\nexport function calcTotalFee(transactions: Transaction[], minGasLimit: number) {\n  let totalFee = new BigNumber(0);\n\n  transactions.forEach((tx) => {\n    const fee = calculateFeeLimit({\n      gasPerDataByte,\n      gasPriceModifier,\n      minGasLimit: String(minGasLimit),\n      gasLimit: tx\n        .getGasLimit()\n        .valueOf()\n        .toString(),\n      gasPrice: tx\n        .getGasPrice()\n        .valueOf()\n        .toString(),\n      data: tx.getData().toString(),\n      chainId: tx.getChainID().valueOf()\n    });\n    totalFee = totalFee.plus(new BigNumber(fee));\n  });\n\n  return totalFee;\n}\n","import BigNumber from 'bignumber.js';\nimport { networkConstants } from 'constants/index';\n\nimport { accountBalanceSelector, chainIDSelector } from 'redux/selectors';\nimport {\n  setTransactionsToSign,\n  setNotificationModal,\n  setTransactionsDisplayInfo\n} from 'redux/slices';\nimport { store } from 'redux/store';\nimport { NotificationTypesEnum, SignTransactionsPropsType } from 'types';\nimport { SendTransactionReturnType } from './sendTransactions';\nimport { calcTotalFee } from './utils';\nimport { stringIsFloat } from 'utils';\n\nexport function signTransactions({\n  transactions,\n  callbackRoute,\n  minGasLimit = networkConstants.DEFAULT_MIN_GAS_LIMIT,\n  customTransactionInformation,\n  transactionsDisplayInfo\n}: SignTransactionsPropsType): SendTransactionReturnType {\n  const appState = store.getState();\n  const sessionId = Date.now().toString();\n  const accountBalance = accountBalanceSelector(appState);\n  const storeChainId = chainIDSelector(appState);\n\n  const transactionsPayload = Array.isArray(transactions)\n    ? transactions\n    : [transactions];\n  const bNtotalFee = calcTotalFee(transactionsPayload, minGasLimit);\n  const bNbalance = new BigNumber(\n    stringIsFloat(accountBalance) ? accountBalance : '0'\n  );\n  const hasSufficientFunds = bNbalance.minus(bNtotalFee).isGreaterThan(0);\n\n  if (!hasSufficientFunds) {\n    const notificationPayload = {\n      type: NotificationTypesEnum.warning,\n      iconClassName: 'text-warning',\n      title: 'Insufficient EGLD funds',\n      description: 'Current EGLD balance cannot cover the transaction fees.'\n    };\n\n    store.dispatch(setNotificationModal(notificationPayload));\n    return { error: 'insufficient funds', sessionId: null };\n  }\n\n  const hasValidChainId = transactionsPayload?.every(\n    (tx) => tx.getChainID().valueOf() === storeChainId.valueOf()\n  );\n  if (!hasValidChainId) {\n    const notificationPayload = {\n      type: NotificationTypesEnum.warning,\n      iconClassName: 'text-warning',\n      title: 'Network change detected',\n      description: 'The application tried to change the transaction network'\n    };\n    store.dispatch(setNotificationModal(notificationPayload));\n    return { error: 'Invalid ChainID', sessionId: null };\n  }\n\n  const signTransactionsPayload = {\n    sessionId,\n    callbackRoute,\n    customTransactionInformation,\n    transactions: transactionsPayload.map((tx) => tx.toPlainObject())\n  };\n\n  store.dispatch(setTransactionsToSign(signTransactionsPayload));\n  store.dispatch(\n    setTransactionsDisplayInfo({ sessionId, transactionsDisplayInfo })\n  );\n  return { sessionId };\n}\n\nexport default signTransactions;\n","import { Address, Transaction } from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\nimport {\n  gasPrice as configGasPrice,\n  gasLimit as configGasLimit,\n  gasPerDataByte\n} from 'constants/index';\nimport newTransaction from 'models/newTransaction';\nimport { addressSelector, chainIDSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { SendSimpleTransactionPropsType } from 'types';\nimport { getAccount, getLatestNonce } from 'utils';\n\nenum ErrorCodesEnum {\n  'invalidReceiver' = 'Invalid Receiver address',\n  'unknownError' = 'Unknown Error. Please check the transactions and try again'\n}\n\n// TODO: replace with new erdjs function\nfunction calculateGasLimit(data?: string) {\n  const bNconfigGasLimit = new BigNumber(configGasLimit);\n  const bNgasPerDataByte = new BigNumber(gasPerDataByte);\n  const bNgasValue = data\n    ? bNgasPerDataByte.times(Buffer.from(data).length)\n    : 0;\n  const bNgasLimit = bNconfigGasLimit.plus(bNgasValue);\n  const gasLimit = bNgasLimit.toString(10);\n  return gasLimit;\n}\n\nexport async function transformAndSignTransactions({\n  transactions\n}: SendSimpleTransactionPropsType): Promise<Transaction[]> {\n  const address = addressSelector(store.getState());\n  const account = await getAccount(address);\n  const nonce = getLatestNonce(account);\n  return transactions.map((tx) => {\n    const {\n      value,\n      receiver,\n      data = '',\n      chainID,\n      version,\n      options,\n      gasPrice = configGasPrice,\n      gasLimit = calculateGasLimit(tx.data)\n    } = tx;\n    let validatedReceiver = receiver;\n\n    try {\n      const addr = new Address(receiver);\n      validatedReceiver = addr.hex();\n    } catch (err) {\n      throw ErrorCodesEnum.invalidReceiver;\n    }\n\n    const storeChainId = chainIDSelector(store.getState())\n      .valueOf()\n      .toString();\n    const transactionsChainId = chainID || storeChainId;\n    return newTransaction({\n      value,\n      receiver: validatedReceiver,\n      data,\n      gasPrice,\n      gasLimit: Number(gasLimit),\n      nonce: Number(nonce.valueOf().toString()),\n      sender: new Address(address).hex(),\n      chainID: transactionsChainId,\n      version,\n      options\n    });\n  });\n}\n\nexport default transformAndSignTransactions;\n","import { Transaction } from '@elrondnetwork/erdjs/out';\nimport { SendTransactionsPropsType, SimpleTransactionType } from 'types';\nimport { signTransactions } from './signTransactions';\nimport transformAndSignTransactions from './transformAndSignTransactions';\n\nexport interface SendTransactionReturnType {\n  error?: string;\n  sessionId: string | null;\n}\n\nexport async function sendTransactions({\n  transactions,\n  transactionsDisplayInfo,\n  redirectAfterSign = true,\n  callbackRoute = window.location.pathname,\n  signWithoutSending,\n  completedTransactionsDelay,\n  sessionInformation,\n  minGasLimit\n}: SendTransactionsPropsType): Promise<SendTransactionReturnType> {\n  try {\n    const transactionsPayload = Array.isArray(transactions)\n      ? transactions\n      : [transactions];\n\n    const areComplexTransactions = transactionsPayload.every(\n      (tx) => Object.getPrototypeOf(tx).toPlainObject != null\n    );\n    let txToSign = transactionsPayload;\n    if (!areComplexTransactions) {\n      txToSign = await transformAndSignTransactions({\n        transactions: transactionsPayload as SimpleTransactionType[],\n        minGasLimit\n      });\n    }\n\n    return signTransactions({\n      transactions: txToSign as Transaction[],\n      minGasLimit,\n      callbackRoute,\n      transactionsDisplayInfo,\n      customTransactionInformation: {\n        redirectAfterSign,\n        completedTransactionsDelay,\n        sessionInformation,\n        signWithoutSending\n      }\n    });\n  } catch (err) {\n    console.error('error signing transaction', err as any);\n    return { error: err as any, sessionId: null };\n  }\n}\n\nexport default sendTransactions;\n","import { useEffect } from 'react';\nimport { useSelector } from 'redux/DappProviderContext';\nimport { transactionStatusSelector } from 'redux/selectors';\nimport { RootState } from 'redux/store';\nimport { TransactionBatchStatusesEnum } from 'types/enums';\nimport {\n  getIsTransactionCompleted,\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'utils';\n\nexport interface UseTrackTransactionStatusArgsType {\n  transactionId: string | null;\n  onSuccess?: (transactionId: string | null) => void;\n  onFail?: (transactionId: string | null, errorMessage?: string) => void;\n  onTimedOut?: (transactionId: string | null) => void;\n  onCancelled?: (transactionId: string | null) => void;\n  onCompleted?: (transactionId: string | null) => void;\n}\n\nexport function useTrackTransactionStatus({\n  transactionId,\n  onSuccess,\n  onFail,\n  onCancelled,\n  onTimedOut,\n  onCompleted\n}: UseTrackTransactionStatusArgsType) {\n  const transactionsBatch = useSelector((state: RootState) =>\n    transactionStatusSelector(state, transactionId)\n  );\n\n  const { status, transactions, errorMessage } = transactionsBatch;\n\n  const isPending = getIsTransactionPending(status);\n  const isFailed = getIsTransactionFailed(status);\n  const isTimedOut = getIsTransactionTimedOut(status);\n  const isSuccessful = getIsTransactionSuccessful(status);\n  const isCompleted = getIsTransactionCompleted(status);\n\n  const isCancelled = status === TransactionBatchStatusesEnum.cancelled;\n\n  useEffect(() => {\n    if (isSuccessful && onSuccess) {\n      onSuccess(transactionId);\n    }\n  }, [isSuccessful]);\n  useEffect(() => {\n    if (isCompleted && onCompleted) {\n      onCompleted(transactionId);\n    }\n  }, [isCompleted]);\n\n  useEffect(() => {\n    if (isFailed && onFail) {\n      onFail(transactionId, errorMessage);\n    }\n  }, [isFailed]);\n\n  useEffect(() => {\n    if (isCancelled && onCancelled) {\n      onCancelled(transactionId);\n    }\n  }, [isCancelled]);\n\n  useEffect(() => {\n    if (isTimedOut) {\n      if (onTimedOut) {\n        onTimedOut(transactionId);\n      } else {\n        onFail?.(transactionId, 'timeout');\n      }\n    }\n  }, [isTimedOut]);\n\n  if (transactionId == null) {\n    return {};\n  }\n\n  if (transactionsBatch == null) {\n    return { errorMessage: 'No transaction to track' };\n  }\n\n  return {\n    isPending,\n    isSuccessful,\n    isFailed,\n    isCancelled,\n    isCompleted,\n    errorMessage,\n    status,\n    transactions\n  };\n}\n\nexport default useTrackTransactionStatus;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { pendingSignedTransactionsSelector } from 'redux/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetPendingTransactionsReturnType {\n  pendingTransactions: SignedTransactionsType;\n  pendingTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasPendingTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetPendingTransactions(): useGetPendingTransactionsReturnType {\n  const pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n  const pendingTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(pendingTransactions);\n  const hasPendingTransactions = pendingTransactionsArray?.length > 0;\n  return {\n    pendingTransactions,\n    pendingTransactionsArray,\n    hasPendingTransactions\n  };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport { failedTransactionsSelector } from 'redux/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetFailedTransactionsReturnType {\n  failedTransactions: SignedTransactionsType;\n  failedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasFailedTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetFailedTransactions(): useGetFailedTransactionsReturnType {\n  const failedTransactions = useSelector(failedTransactionsSelector);\n  const failedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(failedTransactions);\n  const hasFailedTransactions = failedTransactionsArray?.length > 0;\n  return {\n    failedTransactions,\n    failedTransactionsArray,\n    hasFailedTransactions\n  };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport { successfulTransactionsSelector } from 'redux/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetSuccessfulTransactionsReturnType {\n  successfulTransactions: SignedTransactionsType;\n  successfulTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasSuccessfulTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetSuccessfulTransactions(): useGetSuccessfulTransactionsReturnType {\n  const successfulTransactions = useSelector(successfulTransactionsSelector);\n  const successfulTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(successfulTransactions);\n  const hasSuccessfulTransactions = successfulTransactionsArray?.length > 0;\n  return {\n    successfulTransactions,\n    successfulTransactionsArray,\n    hasSuccessfulTransactions\n  };\n}\n","import { useEffect, useState } from 'react';\nimport { Transaction } from '@elrondnetwork/erdjs';\nimport {\n  MultiSignTxType,\n  TxDataTokenType,\n  TxsDataTokensType\n} from 'types/transactions';\nimport { getTokenFromData } from 'utils';\nimport parseMultiEsdtTransferData from 'utils/transactions/parseMultiEsdtTransferData';\n\nconst defaultTransactionInfo: TxDataTokenType = {\n  tokenId: '',\n  amount: '',\n  type: '',\n  multiTxData: '',\n  receiver: ''\n};\n\ninterface UseParseMultiEsdtTransferDataPropsType {\n  transactions?: Transaction[];\n}\n\ninterface UseParseMultiEsdtTransferDataReturnType {\n  parsedTransactionsByDataField: TxsDataTokensType;\n  getTxInfoByDataField: (\n    data: string,\n    multiTransactionData?: string\n  ) => TxDataTokenType;\n  allTransactions: MultiSignTxType[];\n}\n\nexport function useParseMultiEsdtTransferData({\n  transactions\n}: UseParseMultiEsdtTransferDataPropsType): UseParseMultiEsdtTransferDataReturnType {\n  const [parsedTransactionsByDataField, setParsedTransactions] =\n    useState<TxsDataTokensType>({});\n  const [allTransactions, setAllTransactions] = useState<MultiSignTxType[]>([]);\n\n  function addTransactionDataToParsedInfo(\n    data: string,\n    txInfo: TxDataTokenType\n  ) {\n    setParsedTransactions((existing) => ({\n      ...existing,\n      [data]: txInfo\n    }));\n  }\n\n  function getTxInfoByDataField(\n    data: string,\n    multiTransactionData?: string\n  ): TxDataTokenType {\n    if (parsedTransactionsByDataField == null) {\n      return defaultTransactionInfo;\n    }\n\n    if (data in parsedTransactionsByDataField) {\n      return parsedTransactionsByDataField[data];\n    }\n\n    if (\n      multiTransactionData != null &&\n      String(multiTransactionData) in parsedTransactionsByDataField\n    ) {\n      return parsedTransactionsByDataField[multiTransactionData];\n    }\n\n    return defaultTransactionInfo;\n  }\n\n  function extractTransactionESDTData() {\n    if (transactions && transactions.length > 0) {\n      const allTxs: MultiSignTxType[] = [];\n      transactions.forEach((transaction, transactionIndex) => {\n        const txData = transaction.getData().toString();\n        const multiTxs = parseMultiEsdtTransferData(txData);\n\n        if (multiTxs.length > 0) {\n          multiTxs.forEach((trx, idx) => {\n            const newTx: MultiSignTxType = {\n              transaction,\n              multiTxData: trx.data,\n              transactionIndex: idx\n            };\n            addTransactionDataToParsedInfo(trx.data, {\n              tokenId: trx.token ? trx.token : '',\n              amount: trx.amount ? trx.amount : '',\n              type: trx.type,\n              nonce: trx.nonce ? trx.nonce : '',\n              multiTxData: trx.data,\n              receiver: trx.receiver\n            });\n            allTxs.push(newTx);\n          });\n        } else {\n          const { tokenId, amount } = getTokenFromData(\n            transaction.getData().toString()\n          );\n\n          if (tokenId) {\n            addTransactionDataToParsedInfo(transaction.getData().toString(), {\n              tokenId,\n              amount,\n              receiver: transaction.getReceiver().bech32()\n            });\n          }\n          allTxs.push({ transaction, transactionIndex });\n        }\n      });\n      setAllTransactions(allTxs);\n    }\n  }\n\n  useEffect(() => {\n    extractTransactionESDTData();\n  }, [transactions]);\n\n  return {\n    parsedTransactionsByDataField,\n    getTxInfoByDataField,\n    allTransactions\n  };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport {\n  completedTransactionsSelector,\n  failedTransactionsSelector,\n  pendingSignedTransactionsSelector,\n  signedTransactionsSelector,\n  successfulTransactionsSelector,\n  timedOutTransactionsSelector\n} from 'redux/selectors';\n\ninterface useGetActiveTransactionsStatusReturnType {\n  pending: boolean;\n  timedOut: boolean;\n  fail: boolean;\n  success: boolean;\n  completed: boolean;\n  hasActiveTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetActiveTransactionsStatus(): useGetActiveTransactionsStatusReturnType {\n  const signedTransactions = useSelector(signedTransactionsSelector);\n  const timedOutTransactions = useSelector(timedOutTransactionsSelector);\n  const failedTransactions = useSelector(failedTransactionsSelector);\n  const successfulTransactions = useSelector(successfulTransactionsSelector);\n  const pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n  const completedTransactions = useSelector(completedTransactionsSelector);\n\n  const pending = Object.keys(pendingTransactions)?.length > 0;\n\n  const timedOut = !pending && Object.keys(timedOutTransactions)?.length > 0;\n\n  const fail =\n    !pending && !timedOut && Object.keys(failedTransactions)?.length > 0;\n\n  const success =\n    !pending &&\n    !timedOut &&\n    !fail &&\n    Object.keys(successfulTransactions).length > 0;\n\n  const completed =\n    !pending &&\n    !timedOut &&\n    !fail &&\n    Object.keys(completedTransactions).length > 0;\n  const hasActiveTransactions = Object.keys(signedTransactions).length > 0;\n  return {\n    pending,\n    timedOut,\n    fail,\n    success,\n    completed,\n    hasActiveTransactions\n  };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport { completedTransactionsSelector } from 'redux/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetCompletedTransactionsReturnType {\n  completedTransactions: SignedTransactionsType;\n  completedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasCompletedTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetCompletedTransactions(): useGetCompletedTransactionsReturnType {\n  const completedTransactions = useSelector(completedTransactionsSelector);\n  const completedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(completedTransactions);\n  const hasCompletedTransactions = completedTransactionsArray?.length > 0;\n  return {\n    completedTransactions,\n    completedTransactionsArray,\n    hasCompletedTransactions\n  };\n}\n","import { Transaction } from '@elrondnetwork/erdjs';\nimport axios from 'axios';\nimport { networkSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport type SendSignedTransactionsReturnType = string[];\n\nexport async function sendSignedTransactions(\n  signedTransactions: Transaction[]\n): Promise<SendSignedTransactionsReturnType> {\n  const { apiAddress, apiTimeout } = networkSelector(store.getState());\n  const promises = signedTransactions.map((transaction) => {\n    return axios.post(\n      `${apiAddress}/transactions`,\n      transaction.toPlainObject(),\n      { timeout: parseInt(apiTimeout) }\n    );\n  });\n  const response = await Promise.all(promises);\n\n  return response.map(({ data }) => data.txHash);\n}\n","import axios from 'axios';\nimport { networkConfigSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { SmartContractResult, TransactionServerStatusesEnum } from 'types';\n\nexport type GetTransactionsByHashesReturnType = {\n  hash: string;\n  invalidTransaction: boolean;\n  status: TransactionServerStatusesEnum;\n  results: SmartContractResult[];\n  sender: string;\n  receiver: string;\n  data: string;\n  pendingResults?: boolean;\n  previousStatus: string;\n  hasStatusChanged: boolean;\n}[];\n\nexport type PendingTransactionsType = {\n  hash: string;\n  previousStatus: string;\n}[];\n\nexport async function getTransactionsByHashes(\n  pendingTransactions: PendingTransactionsType\n): Promise<GetTransactionsByHashesReturnType> {\n  const networkConfig = networkConfigSelector(store.getState());\n  const hashes = pendingTransactions.map((tx) => tx.hash);\n  const { data: responseData } = await axios.get(\n    `${networkConfig.network.apiAddress}/transactions`,\n    {\n      params: {\n        hashes: hashes.join(','),\n        withScResults: true\n      }\n    }\n  );\n  return pendingTransactions.map(({ hash, previousStatus }) => {\n    const txOnNetwork = responseData.find(\n      (txResponse: any) => txResponse?.txHash === hash\n    );\n\n    return {\n      hash,\n      data: txOnNetwork.data,\n      invalidTransaction: txOnNetwork == null,\n      status: txOnNetwork.status,\n      results: txOnNetwork.results,\n      sender: txOnNetwork.sender,\n      receiver: txOnNetwork?.receiver,\n      pendingResults: txOnNetwork.pendingResults,\n      previousStatus,\n      hasStatusChanged: status !== previousStatus\n    };\n  });\n}\n","import { useEffect, useState } from 'react';\nimport { HWProvider, ExtensionProvider } from '@elrondnetwork/erdjs';\nimport {\n  setExternalProviderAsAccountProvider,\n  setAccountProvider\n} from 'providers/accountProvider';\nimport {\n  getNetworkConfigFromProxyProvider,\n  getProxyProvider\n} from 'providers/proxyProvider';\nimport { getLedgerConfiguration, newWalletProvider } from 'providers/utils';\nimport { loginAction } from 'redux/commonActions';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport {\n  loginMethodSelector,\n  walletConnectLoginSelector,\n  networkSelector,\n  walletLoginSelector,\n  addressSelector,\n  ledgerAccountSelector,\n  ledgerLoginSelector,\n  isLoggedInSelector\n} from 'redux/selectors';\nimport {\n  setAccount,\n  setIsAccountLoading,\n  setAccountLoadingError,\n  setLedgerAccount,\n  setWalletLogin,\n  setChainID\n} from 'redux/slices';\nimport { useWalletConnectLogin } from 'services/login/useWalletConnectLogin';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { getAddress, getAccount, getLatestNonce, logout } from 'utils';\n\nexport default function ProviderInitializer() {\n  const network = useSelector(networkSelector);\n  const walletConnectLogin = useSelector(walletConnectLoginSelector);\n  const loginMethod = useSelector(loginMethodSelector);\n  const walletLogin = useSelector(walletLoginSelector);\n  const address = useSelector(addressSelector);\n  const ledgerAccount = useSelector(ledgerAccountSelector);\n  const ledgerLogin = useSelector(ledgerLoginSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const [ledgerData, setLedgerData] = useState<{\n    version: string;\n    dataEnabled: boolean;\n  }>();\n\n  const proxy = getProxyProvider();\n  const dispatch = useDispatch();\n\n  const { callbackRoute, logoutRoute } = walletConnectLogin\n    ? walletConnectLogin\n    : { callbackRoute: '', logoutRoute: '' };\n\n  const [initWalletLoginProvider] = useWalletConnectLogin({\n    callbackRoute,\n    logoutRoute\n  });\n\n  useEffect(() => {\n    refreshChainID();\n  }, [network]);\n\n  useEffect(() => {\n    initializeProvider();\n  }, [loginMethod]);\n\n  useEffect(() => {\n    fetchAccount();\n  }, [address, isLoggedIn]);\n\n  useEffect(() => {\n    // prevent balance double fetching by handling ledgerAccount data separately\n    setLedgerAccountInfo();\n  }, [ledgerAccount, isLoggedIn, ledgerData]);\n\n  function refreshChainID() {\n    getNetworkConfigFromProxyProvider()\n      .then((networkConfig) => {\n        if (networkConfig) {\n          dispatch(setChainID(networkConfig.ChainID.valueOf()));\n        }\n      })\n      .catch((e: any) => {\n        console.error('To do ', e);\n      });\n  }\n\n  function setLedgerAccountInfo() {\n    if (ledgerAccount == null && ledgerLogin != null && ledgerData) {\n      dispatch(\n        setLedgerAccount({\n          index: ledgerLogin.index,\n          address,\n          hasContractDataEnabled: ledgerData.dataEnabled,\n          version: ledgerData.version\n        })\n      );\n    }\n  }\n\n  async function fetchAccount() {\n    dispatch(setIsAccountLoading(true));\n    if (address && isLoggedIn) {\n      try {\n        const account = await getAccount(address);\n        if (account) {\n          dispatch(\n            setAccount({\n              balance: account.balance.toString(),\n              address,\n              nonce: account.nonce.valueOf()\n            })\n          );\n        }\n      } catch (e) {\n        dispatch(setAccountLoadingError('Failed getting account'));\n        console.error('Failed getting account ', e);\n      }\n    }\n    dispatch(setIsAccountLoading(false));\n  }\n\n  async function tryAuthenticateWalletUser() {\n    try {\n      if (walletLogin != null) {\n        const provider = newWalletProvider(network.walletAddress);\n        const address = await getAddress();\n        if (address) {\n          setAccountProvider(provider);\n          dispatch(\n            loginAction({ address, loginMethod: LoginMethodsEnum.wallet })\n          );\n          const account = await getAccount(address);\n          if (account) {\n            dispatch(\n              setAccount({\n                balance: account.balance.toString(),\n                address,\n                nonce: getLatestNonce(account)\n              })\n            );\n          }\n        }\n        dispatch(setWalletLogin(null));\n      }\n    } catch (e) {\n      console.error('Failed authenticating wallet user ', e);\n    }\n  }\n\n  async function getInitializedHwWalletProvider() {\n    const hwWalletP = new HWProvider(proxy);\n    let isInitialized = hwWalletP.isInitialized();\n    if (!isInitialized) {\n      isInitialized = await hwWalletP.init();\n    }\n    if (!isInitialized && isLoggedIn) {\n      console.warn('Could not initialise ledger app');\n      logout();\n      return;\n    }\n    if (ledgerLogin?.index != null) {\n      hwWalletP.addressIndex = ledgerLogin.index;\n    }\n    return hwWalletP;\n  }\n\n  async function setLedgerProvider() {\n    try {\n      const hwWalletP = await getInitializedHwWalletProvider();\n      if (!hwWalletP) {\n        return;\n      }\n      const ledgerConfig = await getLedgerConfiguration(hwWalletP);\n      setAccountProvider(hwWalletP);\n      setLedgerData(ledgerConfig);\n    } catch (err) {\n      console.error('Could not initialise ledger app', err);\n      logout();\n    }\n  }\n\n  async function setExtensionProvider() {\n    try {\n      const address = await getAddress();\n      const provider = ExtensionProvider.getInstance().setAddress(address);\n      const success = await provider.init();\n\n      if (success) {\n        setAccountProvider(provider);\n      } else {\n        console.error(\n          'Could not initialise extension, make sure Elrond wallet extension is installed.'\n        );\n      }\n    } catch (err) {\n      console.error('Unable to login to ExtensionProvider', err);\n    }\n  }\n\n  function initializeProvider() {\n    if (loginMethod == null) {\n      return;\n    }\n    switch (loginMethod) {\n      case LoginMethodsEnum.ledger: {\n        setLedgerProvider();\n        break;\n      }\n\n      case LoginMethodsEnum.walletconnect: {\n        initWalletLoginProvider(false);\n        break;\n      }\n      case LoginMethodsEnum.wallet: {\n        const provider = newWalletProvider(network.walletAddress);\n        setAccountProvider(provider);\n        break;\n      }\n\n      case LoginMethodsEnum.extension: {\n        setExtensionProvider();\n        break;\n      }\n\n      case LoginMethodsEnum.extra: {\n        setExternalProviderAsAccountProvider();\n        break;\n      }\n\n      case LoginMethodsEnum.none: {\n        tryAuthenticateWalletUser();\n        break;\n      }\n      default:\n        return;\n    }\n  }\n\n  return null;\n}\n","import React from 'react';\nimport {\n  getTransactionsByHashes,\n  sendSignedTransactions\n} from 'apiCalls/transactions';\nimport { OverrideDefaultBehaviourContextValueType } from './types';\n\nconst defaultValue: OverrideDefaultBehaviourContextValueType = {\n  sendSignedTransactionsAsync: sendSignedTransactions,\n  getTransactionsByHash: getTransactionsByHashes\n};\n\nconst OverrideDefaultBehaviourContext = React.createContext(defaultValue);\n\nexport default OverrideDefaultBehaviourContext;\n","import React, { useContext, useRef } from 'react';\nimport { Address } from '@elrondnetwork/erdjs';\nimport { Signature } from '@elrondnetwork/erdjs/out/signature';\n\nimport OverrideDefaultBehaviourContext from 'contexts/OverrideDefaultBehaviourContext';\nimport newTransaction from 'models/newTransaction';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { signedTransactionsSelector } from 'redux/selectors';\nimport { accountSelector } from 'redux/selectors';\nimport {\n  setTxSubmittedModal,\n  clearAllTransactionsToSign,\n  updateSignedTransactions\n} from 'redux/slices';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\nimport { setNonce } from 'utils';\n\nconst TransactionSender = () => {\n  const account = useSelector(accountSelector);\n  const signedTransactions = useSelector(signedTransactionsSelector);\n  const { sendSignedTransactionsAsync } = useContext(\n    OverrideDefaultBehaviourContext\n  );\n  const sendingRef = useRef(false);\n\n  const dispatch = useDispatch();\n\n  const clearSignInfo = () => {\n    dispatch(clearAllTransactionsToSign());\n    sendingRef.current = false;\n  };\n  async function handleSendTransactions() {\n    const sessionIds = Object.keys(signedTransactions);\n    for (const sessionId of sessionIds) {\n      const skipSending =\n        signedTransactions?.[sessionId]?.customTransactionInformation\n          ?.signWithoutSending;\n\n      if (!sessionId || skipSending) {\n        continue;\n      }\n\n      try {\n        const isSessionIdSigned =\n          signedTransactions[sessionId].status ===\n          TransactionBatchStatusesEnum.signed;\n        const shouldSendCurrentSession =\n          isSessionIdSigned && !sendingRef.current;\n        if (!shouldSendCurrentSession) {\n          continue;\n        }\n        const { transactions } = signedTransactions[sessionId];\n\n        if (!transactions) {\n          continue;\n        }\n        sendingRef.current = true;\n        const transactionsToSend = transactions.map((tx) => {\n          const address = new Address(tx.sender);\n          const transactionObject = newTransaction(tx);\n          const signature = new Signature(tx.signature);\n\n          transactionObject.applySignature(signature, address);\n          return transactionObject;\n        });\n        const responseHashes = await sendSignedTransactionsAsync(\n          transactionsToSend\n        );\n\n        const newStatus = TransactionServerStatusesEnum.pending;\n        const newTransactions = transactions.map((transaction) => {\n          if (responseHashes.includes(transaction.hash)) {\n            return { ...transaction, status: newStatus };\n          }\n\n          return transaction;\n        });\n\n        const submittedModalPayload = {\n          sessionId,\n          submittedMessage: 'submitted'\n        };\n\n        dispatch(setTxSubmittedModal(submittedModalPayload));\n        dispatch(\n          updateSignedTransactions({\n            sessionId,\n            status: TransactionBatchStatusesEnum.sent,\n            transactions: newTransactions\n          })\n        );\n        clearSignInfo();\n        setNonce(account.nonce + transactions.length);\n\n        history.pushState({}, document.title, '?');\n      } catch (error) {\n        console.error('Unable to send transactions', error);\n        dispatch(\n          updateSignedTransactions({\n            sessionId,\n            status: TransactionBatchStatusesEnum.fail,\n            errorMessage: (error as any).message\n          })\n        );\n        clearSignInfo();\n      } finally {\n        sendingRef.current = false;\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    handleSendTransactions();\n  }, [signedTransactions, account]);\n\n  return null;\n};\n\nexport default TransactionSender;\n","import { useContext, useEffect, useRef } from 'react';\nimport OverrideDefaultBehaviourContext from 'contexts/OverrideDefaultBehaviourContext';\nimport { useDispatch } from 'redux/DappProviderContext';\nimport {\n  updateSignedTransactions,\n  updateSignedTransactionStatus\n} from 'redux/slices';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\nimport { SignedTransactionsBodyType } from 'types/transactions';\nimport {\n  getIsTransactionCompleted,\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionTimedOut\n} from 'utils';\nimport { refreshAccount } from 'utils/account';\ninterface RetriesType {\n  [hash: string]: number;\n}\n\ninterface TransactionStatusTrackerPropsType {\n  sessionId: string;\n  transactionPayload: SignedTransactionsBodyType;\n}\n\nexport function TransactionStatusTracker({\n  sessionId,\n  transactionPayload: { transactions, status, customTransactionInformation }\n}: TransactionStatusTrackerPropsType) {\n  const dispatch = useDispatch();\n  const intervalRef = useRef<any>(null);\n  const isFetchingStatusRef = useRef(false);\n  const retriesRef = useRef<RetriesType>({});\n  const timeoutRefs = useRef<string[]>([]);\n  const { getTransactionsByHash } = useContext(OverrideDefaultBehaviourContext);\n\n  const isPending = sessionId != null && getIsTransactionPending(status);\n  const manageTimedOutTransactions = () => {\n    dispatch(\n      updateSignedTransactions({\n        sessionId,\n        status: TransactionBatchStatusesEnum.timedOut\n      })\n    );\n  };\n\n  const checkTransactionStatus = async () => {\n    try {\n      if (!isPending || transactions == null) {\n        return;\n      }\n      isFetchingStatusRef.current = true;\n\n      const pendingTransactions = transactions.reduce(\n        (\n          acc: {\n            hash: string;\n            previousStatus: string;\n          }[],\n          { status, hash }\n        ) => {\n          if (\n            hash != null &&\n            !timeoutRefs.current.includes(hash) &&\n            getIsTransactionPending(status)\n          ) {\n            acc.push({\n              hash,\n              previousStatus: status\n            });\n          }\n          return acc;\n        },\n        []\n      );\n\n      if (pendingTransactions?.length === 0) {\n        isFetchingStatusRef.current = false;\n        return;\n      }\n      const serverTransactions = await getTransactionsByHash(\n        pendingTransactions\n      );\n      for (const {\n        hash,\n        status,\n        results,\n        invalidTransaction,\n        pendingResults,\n        hasStatusChanged\n      } of serverTransactions) {\n        try {\n          const retriesForThisHash = retriesRef.current[hash];\n          if (retriesForThisHash > 30) {\n            // consider transaction as stuck after 1 minute\n            manageTimedOutTransactions();\n            return;\n          }\n          if (!invalidTransaction) {\n            if (!getIsTransactionPending(status)) {\n              if (!getIsTransactionCompleted(status)) {\n                if (\n                  !getIsTransactionFailed(status) &&\n                  !getIsTransactionTimedOut(status)\n                ) {\n                  if (!pendingResults) {\n                    timeoutRefs.current.push(hash);\n\n                    const transitionToCompletedDelay =\n                      customTransactionInformation?.completedTransactionsDelay ||\n                      0;\n                    setTimeout(() => {\n                      dispatch(\n                        updateSignedTransactionStatus({\n                          sessionId,\n                          status: TransactionServerStatusesEnum.completed,\n                          transactionHash: hash\n                        })\n                      );\n                    }, transitionToCompletedDelay);\n                  }\n                }\n              }\n\n              if (hasStatusChanged) {\n                dispatch(\n                  updateSignedTransactionStatus({\n                    sessionId,\n                    status,\n                    transactionHash: hash\n                  })\n                );\n              }\n\n              refreshAccount();\n\n              if (getIsTransactionFailed(status)) {\n                const resultWithError = results?.find(\n                  (scResult) => scResult?.returnMessage !== ''\n                );\n\n                dispatch(\n                  updateSignedTransactionStatus({\n                    transactionHash: hash,\n                    sessionId,\n                    status: TransactionServerStatusesEnum.fail,\n                    errorMessage: resultWithError?.returnMessage\n                  })\n                );\n                dispatch(\n                  updateSignedTransactions({\n                    sessionId,\n                    status: TransactionBatchStatusesEnum.fail,\n                    errorMessage: resultWithError?.returnMessage\n                  })\n                );\n              }\n            } else {\n              retriesRef.current[hash] = retriesRef.current[hash]\n                ? retriesRef.current[hash] + 1\n                : 1;\n            }\n          } else {\n            retriesRef.current[hash] = retriesRef.current[hash]\n              ? retriesRef.current[hash] + 1\n              : 1;\n          }\n        } catch (error) {\n          console.error(error);\n          manageTimedOutTransactions();\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (isPending) {\n      intervalRef.current = setInterval(() => {\n        checkTransactionStatus();\n      }, 2000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, [isPending]);\n  return null;\n}\n\nexport default TransactionStatusTracker;\n","import React from 'react';\nimport { useGetPendingTransactions } from 'services/transactions';\nimport { SignedTransactionsBodyType } from 'types/transactions';\nimport TransactionStatusTracker from './TransactionStatusTracker';\n\nexport function TransactionsTracker() {\n  const { pendingTransactionsArray } = useGetPendingTransactions();\n\n  const mappedPendingTransactionsTrackers = pendingTransactionsArray.map(\n    ([sessionId, transactionPayload]) => (\n      <TransactionStatusTracker\n        key={sessionId}\n        sessionId={sessionId}\n        transactionPayload={transactionPayload as SignedTransactionsBodyType}\n      />\n    )\n  );\n\n  return <React.Fragment>{mappedPendingTransactionsTrackers}</React.Fragment>;\n}\n\nexport default TransactionsTracker;\n","import axios from 'axios';\nimport { configEndpoint } from 'constants/network';\nimport { NetworkType } from 'types';\n\nexport async function getServerConfiguration(apiAddress: string) {\n  const cleanApiAddress = apiAddress.endsWith('/')\n    ? apiAddress.slice(0, -1)\n    : apiAddress;\n\n  const configUrl = `${cleanApiAddress}/${configEndpoint}`;\n\n  try {\n    const { data } = await axios.get<NetworkType>(configUrl);\n    if (data != null) {\n      return data;\n    }\n  } catch (err) {\n    console.error('error fetching configuration for ', configUrl);\n  }\n  return null;\n}\n","import { fallbackNetworkConfigurations } from 'constants/network';\nimport { EnvironmentsEnum } from 'types';\nimport { getServerConfiguration } from './getServerConfiguration';\n\nexport async function getServerConfigurationForEnvironment(\n  environment: EnvironmentsEnum\n) {\n  const fallbackConfig = fallbackNetworkConfigurations[environment];\n  const config = await getServerConfiguration(fallbackConfig.apiAddress);\n\n  return config !== null ? config : fallbackConfig;\n}\n","import axios from 'axios';\nimport { networkConfigSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport type ScamInfoType = {\n  scamInfo?: {\n    type: string;\n    info: string;\n  };\n  code: string;\n};\n\nexport async function getScamAddressData(addressToVerify: string) {\n  const {\n    network: { apiAddress, apiTimeout }\n  } = networkConfigSelector(store.getState());\n  const { data } = await axios.get<ScamInfoType>(\n    `/accounts/${addressToVerify}`,\n    {\n      baseURL: apiAddress,\n      timeout: Number(apiTimeout)\n    }\n  );\n\n  return data;\n}\n\nexport default getScamAddressData;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { networkConfigSelector } from 'redux/selectors';\n\nexport const useGetNetworkConfig = () => {\n  return useSelector(networkConfigSelector);\n};\n\nexport default useGetNetworkConfig;\n","import { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { notificationModalSelector } from 'redux/selectors';\nimport { clearNotificationModal } from 'redux/slices';\n\nexport function useGetNotification() {\n  const notification = useSelector(notificationModalSelector);\n  const dispatch = useDispatch();\n  const clearNotification = () => dispatch(clearNotificationModal());\n  return { notification, clearNotification };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport { transactionDisplayInfoSelector } from 'redux/selectors';\nimport { RootState } from 'redux/store';\n\nexport function useGetTransactionDisplayInfo(toastId: string | null) {\n  return useSelector((state: RootState) =>\n    transactionDisplayInfoSelector(state, toastId)\n  );\n}\n","import React from 'react';\nimport { WalletProvider } from '@elrondnetwork/erdjs';\nimport qs from 'qs';\nimport { dappInitRoute, walletSignSession } from 'constants/index';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { networkSelector } from 'redux/selectors';\nimport { moveTransactionsToSignedState } from 'redux/slices';\nimport { TransactionBatchStatusesEnum } from 'types/enums';\nimport { parseTransactionAfterSigning } from 'utils';\n\nexport function useParseSignedTransactions() {\n  const { search } = window.location;\n  const network = useSelector(networkSelector);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (search != null) {\n      const searchData = qs.parse(search.replace('?', ''));\n\n      if (searchData && walletSignSession in searchData) {\n        const signSessionId: number = (searchData as any)[walletSignSession];\n        const signedTransactions = new WalletProvider(\n          `${network.walletAddress}${dappInitRoute}`\n        ).getTransactionsFromWalletUrl();\n        if (signedTransactions.length > 0) {\n          dispatch(\n            moveTransactionsToSignedState({\n              sessionId: signSessionId.toString(),\n              status: TransactionBatchStatusesEnum.signed,\n              transactions: signedTransactions.map((tx) =>\n                parseTransactionAfterSigning(tx)\n              )\n            })\n          );\n          history.pushState({}, document.title, '?');\n        }\n      }\n    }\n  }, [search]);\n}\n\nexport default useParseSignedTransactions;\n","import { useEffect, useRef, useState } from 'react';\nimport { ExtensionProvider, Nonce, Transaction } from '@elrondnetwork/erdjs';\n\nimport { errorsMessages, walletSignSession } from 'constants/index';\nimport { useParseSignedTransactions } from 'hooks/transactions/useParseSignedTransactions';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { getAccountFromProxyProvider } from 'providers/proxyProvider';\nimport { getProviderType } from 'providers/utils';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { addressSelector, transactionsToSignSelector } from 'redux/selectors';\nimport {\n  clearAllTransactionsToSign,\n  clearTransactionsInfoForSessionId,\n  moveTransactionsToSignedState\n} from 'redux/slices';\nimport { LoginMethodsEnum, TransactionBatchStatusesEnum } from 'types/enums';\nimport {\n  builtCallbackUrl,\n  getLatestNonce,\n  parseTransactionAfterSigning\n} from 'utils';\n\nexport const useSignTransactions = () => {\n  const dispatch = useDispatch();\n  const savedCallback = useRef('/');\n  const address = useSelector(addressSelector);\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  const [error, setError] = useState<string | null>(null);\n  const transactionsToSign = useSelector(transactionsToSignSelector);\n  const hasTransactions = Boolean(transactionsToSign?.transactions);\n\n  useParseSignedTransactions();\n\n  const onAbort = (sessionId?: string) => {\n    setError(null);\n    clearSignInfo(sessionId);\n  };\n\n  function clearSignInfo(sessionId?: string) {\n    const isExtensionProvider = provider instanceof ExtensionProvider;\n\n    dispatch(clearAllTransactionsToSign());\n    dispatch(clearTransactionsInfoForSessionId(sessionId));\n\n    if (!isExtensionProvider) {\n      return;\n    }\n\n    ExtensionProvider.getInstance()?.cancelAction?.();\n  }\n\n  const onCancel = (errorMessage: string, sessionId?: string) => {\n    const isTxCancelled = errorMessage !== errorsMessages.TRANSACTION_CANCELLED;\n\n    clearSignInfo(sessionId);\n\n    /*\n     * this is triggered by abort action,\n     * so no need to show error again\n     */\n    if (!isTxCancelled) {\n      return;\n    }\n\n    setError(errorMessage);\n  };\n\n  const signWithWallet = (\n    transactions: Array<Transaction>,\n    sessionId: string,\n    callbackRoute = ''\n  ) => {\n    const urlParams = { [walletSignSession]: sessionId };\n    const callbackUrl = `${window.location.origin}${callbackRoute}`;\n    const buildedCallbackUrl = builtCallbackUrl({ callbackUrl, urlParams });\n\n    provider.signTransactions(transactions, {\n      callbackUrl: encodeURIComponent(buildedCallbackUrl)\n    });\n  };\n\n  const signTransactionsWithProvider = async () => {\n    const {\n      sessionId,\n      transactions,\n      callbackRoute,\n      customTransactionInformation\n    } = transactionsToSign!;\n    const { redirectAfterSign } = customTransactionInformation;\n    const redirectRoute = callbackRoute || window.location.pathname;\n    const isCurrentRoute = window.location.pathname.includes(redirectRoute);\n    const shouldRedirectAfterSign = redirectAfterSign && !isCurrentRoute;\n\n    try {\n      const isProviderInitialized = await provider.init();\n\n      if (!isProviderInitialized) {\n        return;\n      }\n    } catch (error) {\n      const errorMessage =\n        ((error as unknown) as Error)?.message ||\n        (error as string) ||\n        errorsMessages.PROVIDER_NOT_INTIALIZED;\n      console.error(errorsMessages.PROVIDER_NOT_INTIALIZED, errorMessage);\n      onCancel(errorMessage);\n      return;\n    }\n\n    try {\n      const signedTransactions = await provider.signTransactions(transactions);\n      const hasSameTransactions =\n        Object.keys(signedTransactions).length === transactions.length;\n      const hasAllTransactionsSigned =\n        signedTransactions && hasSameTransactions;\n      const shouldMoveTransactionsToSignedState =\n        signedTransactions && hasAllTransactionsSigned;\n\n      if (!shouldMoveTransactionsToSignedState) {\n        return;\n      }\n\n      const signedTransactionsArray = Object.values(\n        signedTransactions\n      ).map((tx: any) => parseTransactionAfterSigning(tx));\n\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          transactions: signedTransactionsArray,\n          status: TransactionBatchStatusesEnum.signed\n        })\n      );\n\n      if (shouldRedirectAfterSign) {\n        window.location.href = redirectRoute;\n      }\n    } catch (err) {\n      const errorMessage =\n        ((error as unknown) as Error)?.message ||\n        (error as string) ||\n        errorsMessages.ERROR_SIGNING_TX;\n      console.error(errorsMessages.ERROR_SIGNING_TX, errorMessage);\n      onCancel(errorMessage, sessionId);\n    }\n  };\n\n  const signTransactions = async () => {\n    if (!transactionsToSign) {\n      return;\n    }\n\n    const { sessionId, transactions, callbackRoute } = transactionsToSign;\n\n    if (!provider) {\n      console.error(errorsMessages.MISSING_PROVIDER_MESSAGE);\n      return;\n    }\n\n    /*\n     * if the transaction is cancelled\n     * the callback will go to undefined,\n     * we save the most recent one for a valid transaction\n     */\n    savedCallback.current = callbackRoute || window.location.pathname;\n\n    const setTransactionNonces = (\n      latestNonce: number,\n      transactions: Array<Transaction>\n    ): Array<Transaction> => {\n      return transactions.map((tx: Transaction, index: number) => {\n        tx.setNonce(new Nonce(latestNonce + index));\n\n        return tx;\n      });\n    };\n\n    try {\n      const proxyAccount = await getAccountFromProxyProvider(address);\n      if (proxyAccount == null) {\n        return;\n      }\n      const isSigningWithWebWallet = providerType === LoginMethodsEnum.wallet;\n\n      const isSigningWithProvider = ![\n        LoginMethodsEnum.wallet,\n        LoginMethodsEnum.ledger\n      ].includes(providerType);\n\n      const latestNonce = getLatestNonce(proxyAccount);\n      const mappedTransactions = setTransactionNonces(\n        latestNonce,\n        transactions\n      );\n\n      if (isSigningWithWebWallet) {\n        signWithWallet(mappedTransactions, sessionId, callbackRoute);\n      }\n      if (isSigningWithProvider) {\n        signTransactionsWithProvider();\n      }\n    } catch (err) {\n      const defaultErrorMessage = ((error as unknown) as Error)?.message;\n      const errorMessage = defaultErrorMessage || errorsMessages.ERROR_SIGNING;\n      onCancel(errorMessage, sessionId);\n\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          status: TransactionBatchStatusesEnum.cancelled\n        })\n      );\n\n      console.error(errorMessage, err);\n    }\n  };\n\n  useEffect(() => {\n    signTransactions();\n  }, [transactionsToSign]);\n\n  return {\n    error,\n    onAbort,\n    hasTransactions,\n    callbackRoute: savedCallback.current,\n    sessionId: transactionsToSign?.sessionId,\n    transactions: transactionsToSign?.transactions\n  };\n};\n\nexport default useSignTransactions;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { signedTransactionsSelector } from 'redux/selectors';\n\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetSignedTransactionsReturnType {\n  signedTransactions: SignedTransactionsType;\n  signedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasSignedTransactions: boolean;\n}\n\nexport function useGetSignedTransactions(): useGetSignedTransactionsReturnType {\n  const signedTransactions = useSelector(signedTransactionsSelector);\n  const signedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(signedTransactions);\n  const hasSignedTransactions = signedTransactionsArray?.length > 0;\n  return {\n    signedTransactions,\n    signedTransactionsArray,\n    hasSignedTransactions\n  };\n}\n","let swr: any = {};\ntry {\n  swr = require('swr').default;\n} catch (err) {}\n\nexport default swr;\n","import axios from 'axios';\nimport useGetNetworkConfig from 'hooks/useGetNetworkConfig';\n\nimport useSwr from 'optionalPackages/swr';\nimport { getIdentifierType } from 'utils';\n\ninterface TokenOptionType {\n  tokenLabel: string;\n  tokenDenomination: number;\n  tokenAvatar: string;\n  error?: string;\n}\n\ninterface TokenInfoResponse {\n  identifier: string;\n  name: string;\n  ticker: string;\n  decimals: number;\n  assets: {\n    description: string;\n    status: string;\n    svgUrl: string;\n  };\n}\n\nconst fetcher = (url: string) =>\n  axios.get(url).then((response) => response.data);\n\nexport function useGetTokenDetails({\n  tokenId\n}: {\n  tokenId: string;\n}): TokenOptionType {\n  const { network } = useGetNetworkConfig();\n\n  const { isEsdt } = getIdentifierType(tokenId);\n  const tokenEndpoint = isEsdt ? 'tokens' : 'nfts';\n\n  const {\n    data: selectedToken,\n    error\n  }: { data?: TokenInfoResponse; error?: string } = useSwr(\n    Boolean(tokenId)\n      ? `${network.apiAddress}/${tokenEndpoint}/${tokenId}`\n      : null,\n    fetcher\n  );\n\n  if (!tokenId) {\n    return {\n      tokenDenomination: Number(network.egldDenomination),\n      tokenLabel: '',\n      tokenAvatar: ''\n    };\n  }\n\n  const tokenDenomination = selectedToken\n    ? selectedToken?.decimals\n    : Number(network.egldDenomination);\n  const tokenLabel = selectedToken ? selectedToken?.name : '';\n  const tokenAvatar = selectedToken ? `${selectedToken?.assets?.svgUrl}` : '';\n\n  return { tokenDenomination, tokenLabel, tokenAvatar, error };\n}\n\nexport default useGetTokenDetails;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { accountInfoSelector } from 'redux/selectors';\n\nexport const useGetAccountInfo = () => {\n  return useSelector(accountInfoSelector);\n};\n\nexport default useGetAccountInfo;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { isLoggedInSelector, loginInfoSelector } from 'redux/selectors';\n\nexport const useGetLoginInfo = () => {\n  const loginInfo = useSelector(loginInfoSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  return { ...loginInfo, isLoggedIn };\n};\n\nexport default useGetLoginInfo;\n","import { getAccountProvider } from 'providers/accountProvider';\nimport { getProviderType } from 'providers/utils';\n\nexport const useGetAccountProvider = () => {\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  return { provider, providerType };\n};\n\nexport default useGetAccountProvider;\n","import { useEffect, useState } from 'react';\nimport { Transaction } from '@elrondnetwork/erdjs';\nimport { getScamAddressData } from 'apiCalls';\nimport ledgerErrorCodes from 'constants/ledgerErrorCodes';\nimport { useGetAccountInfo } from 'hooks/account';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { egldLabelSelector, transactionsToSignSelector } from 'redux/selectors';\nimport {\n  clearAllTransactionsToSign,\n  moveTransactionsToSignedState,\n  setSignTransactionsError\n} from 'redux/slices/transactionsSlice';\nimport { useParseMultiEsdtTransferData } from 'services/transactions/hooks/useParseMultiEsdtTransferData';\nimport { ActiveLedgerTransactionType, MultiSignTxType } from 'types';\nimport { LoginMethodsEnum, TransactionBatchStatusesEnum } from 'types/enums';\nimport { getIsProviderEqualTo, isTokenTransfer } from 'utils';\nimport { parseTransactionAfterSigning } from 'utils';\n\ninterface UseSignTransactionsWithLedgerPropsType {\n  onCancel: () => void;\n  verifyReceiverScam?: boolean;\n}\n\ninterface VerifiedAddressesType {\n  [address: string]: { type: string; info: string };\n}\nlet verifiedAddresses: VerifiedAddressesType = {};\n\ntype LedgerSignedTransactions = Record<number, Transaction>;\n\ninterface UseSignTransactionsWithLedgerReturnType {\n  allTransactions: MultiSignTxType[];\n  onSignTransaction: () => void;\n  onNext: () => void;\n  onPrev: () => void;\n  onAbort: () => void;\n  waitingForDevice: boolean;\n  isLastTransaction: boolean;\n  currentStep: number;\n  callbackRoute?: string;\n  signedTransactions?: LedgerSignedTransactions;\n  currentTransaction: ActiveLedgerTransactionType | null;\n}\n\nexport function useSignTransactionsWithLedger({\n  onCancel,\n  verifyReceiverScam = true\n}: UseSignTransactionsWithLedgerPropsType): UseSignTransactionsWithLedgerReturnType {\n  const transactionsToSign = useSelector(transactionsToSignSelector);\n  const {\n    account: { address }\n  } = useGetAccountInfo();\n\n  const {\n    sessionId,\n    transactions,\n    callbackRoute,\n    customTransactionInformation\n  } = transactionsToSign || {};\n  const [currentStep, setCurrentStep] = useState(0);\n  const [signedTransactions, setSignedTransactions] = useState<\n    LedgerSignedTransactions\n  >();\n  const {\n    getTxInfoByDataField,\n    allTransactions\n  } = useParseMultiEsdtTransferData({ transactions });\n  const [\n    currentTransaction,\n    setCurrentTransaction\n  ] = useState<ActiveLedgerTransactionType | null>(null);\n  const provider = getAccountProvider();\n  const egldLabel = useSelector(egldLabelSelector);\n  const [waitingForDevice, setWaitingForDevice] = useState(false);\n  const dispatch = useDispatch();\n\n  const isLastTransaction = currentStep === allTransactions.length - 1;\n\n  useEffect(() => {\n    extractTransactionsInfo();\n  }, [currentStep, allTransactions]);\n\n  async function extractTransactionsInfo() {\n    const tx = allTransactions[currentStep];\n    if (tx == null) {\n      return;\n    }\n    const { transaction, multiTxData } = tx;\n    const dataField = transaction.getData().toString();\n    const transactionTokenInfo = getTxInfoByDataField(\n      transaction.getData().toString(),\n      multiTxData\n    );\n    const { tokenId } = transactionTokenInfo;\n    const receiver = transaction.getReceiver().toString();\n    const notSender = address !== receiver;\n    const verified = receiver in verifiedAddresses;\n\n    if (notSender && !verified && verifyReceiverScam) {\n      const data = await getScamAddressData(receiver);\n      verifiedAddresses = {\n        ...verifiedAddresses,\n        ...(data.scamInfo ? { [receiver]: data.scamInfo } : {})\n      };\n    }\n\n    const isTokenTransaction = Boolean(\n      tokenId && isTokenTransfer({ tokenId, erdLabel: egldLabel })\n    );\n\n    setCurrentTransaction({\n      transaction,\n      receiverScamInfo: verifiedAddresses[receiver]?.info || null,\n      transactionTokenInfo,\n      isTokenTransaction,\n      dataField\n    });\n  }\n\n  function reset() {\n    setCurrentStep(0);\n    setSignedTransactions(undefined);\n    setWaitingForDevice(false);\n  }\n\n  async function sign() {\n    try {\n      if (currentTransaction == null || sessionId == null) {\n        return;\n      }\n\n      const trueForLedger = getIsProviderEqualTo(LoginMethodsEnum.ledger);\n      setWaitingForDevice(trueForLedger);\n\n      const signedTx = await provider.signTransaction(\n        currentTransaction.transaction\n      );\n      const newSignedTx = { [currentStep]: signedTx };\n      const newSignedTransactions: any = signedTransactions\n        ? { ...signedTransactions, ...newSignedTx }\n        : newSignedTx;\n      setSignedTransactions(newSignedTransactions);\n      if (!isLastTransaction) {\n        setCurrentStep((exising) => exising + 1);\n        setWaitingForDevice(false);\n      } else if (newSignedTransactions) {\n        dispatch(\n          moveTransactionsToSignedState({\n            sessionId,\n            status: TransactionBatchStatusesEnum.signed,\n            transactions: Object.values(newSignedTransactions).map((tx) =>\n              parseTransactionAfterSigning(tx as Transaction, trueForLedger)\n            )\n          })\n        );\n\n        reset();\n        if (\n          callbackRoute != null &&\n          customTransactionInformation?.redirectAfterSign &&\n          !window.location.pathname.includes(callbackRoute)\n        ) {\n          window.location.href = callbackRoute;\n        }\n      }\n    } catch (err) {\n      console.error(err, 'sign error');\n      const { message, statusCode } = err as any;\n\n      const errMessage =\n        statusCode in ledgerErrorCodes\n          ? (ledgerErrorCodes as any)[statusCode].message\n          : message;\n\n      reset();\n      dispatch(setSignTransactionsError(errMessage));\n    }\n  }\n\n  function signTx() {\n    try {\n      if (currentTransaction == null) {\n        return;\n      }\n      const signature = currentTransaction.transaction.getSignature();\n      if (signature) {\n        if (!isLastTransaction) {\n          setCurrentStep((exising) => exising + 1);\n        }\n      } else {\n        // currently code doesn't reach here because getSignature throws error if none is found\n        sign();\n      }\n    } catch {\n      // the only way to check if tx has signature is with try catch\n      sign();\n    }\n  }\n\n  const isFirst = currentStep === 0;\n\n  function onAbort() {\n    if (isFirst) {\n      dispatch(clearAllTransactionsToSign());\n      onCancel();\n      if (\n        callbackRoute != null &&\n        customTransactionInformation?.redirectAfterSign\n      ) {\n        window.location.href = callbackRoute;\n      }\n    } else {\n      setCurrentStep((existing) => existing - 1);\n    }\n  }\n\n  const continueWithoutSigning =\n    currentTransaction?.transactionTokenInfo?.type &&\n    currentTransaction?.transactionTokenInfo?.multiTxData &&\n    !currentTransaction?.dataField.endsWith(\n      currentTransaction?.transactionTokenInfo?.multiTxData\n    );\n\n  function onSignTransaction() {\n    if (continueWithoutSigning) {\n      setCurrentStep((exising) => exising + 1);\n    } else {\n      signTx();\n    }\n  }\n\n  function onNext() {\n    setCurrentStep((current) => {\n      const nextStep = current + 1;\n      if (nextStep > allTransactions?.length) {\n        return current;\n      }\n      return nextStep;\n    });\n  }\n\n  function onPrev() {\n    setCurrentStep((current) => {\n      const nextStep = current - 1;\n      if (nextStep < 0) {\n        return current;\n      }\n      return nextStep;\n    });\n  }\n\n  return {\n    allTransactions,\n    onSignTransaction,\n    onNext,\n    onPrev,\n    waitingForDevice,\n    onAbort,\n    isLastTransaction,\n    callbackRoute,\n    currentStep,\n    signedTransactions,\n    currentTransaction\n  };\n}\n\nexport default useSignTransactionsWithLedger;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { signTransactionsErrorSelector } from 'redux/selectors';\n\nexport const useGetSignTransactionsError = () => {\n  return useSelector(signTransactionsErrorSelector);\n};\n\nexport default useGetSignTransactionsError;\n","import { useIdleTimer as useReactIdleTimer } from 'react-idle-timer';\nimport { getIsLoggedIn, logout as dappLogout } from 'utils';\n\nconst getTimeout = (minutes: number) => 1000 * 60 * minutes;\nconst debounce = 500;\n\ninterface IdleTimerType {\n  minutes?: number;\n  onLogout?: (props?: any) => void;\n}\n\nexport const useIdleTimer = ({ minutes = 10, onLogout }: IdleTimerType) => {\n  const isLoggedIn = getIsLoggedIn();\n  const logout = onLogout || dappLogout;\n  const timeout = getTimeout(minutes);\n\n  const onIdle = () => {\n    if (isLoggedIn) {\n      logout();\n    }\n  };\n\n  useReactIdleTimer({ timeout, onIdle, debounce });\n};\n\nexport default useIdleTimer;\n","import axios from 'axios';\nimport {\n  addressSelector,\n  apiNetworkSelector,\n  shardSelector\n} from 'redux/selectors';\n\nimport { setAccountShard } from 'redux/slices';\nimport { store } from 'redux/store';\n\nexport default async function getAccountShard() {\n  const appState = store.getState();\n  const apiAddress = apiNetworkSelector(appState);\n  const address = addressSelector(appState);\n  const shard = shardSelector(appState);\n\n  try {\n    if (shard == null && address) {\n      const { data: account } = await axios.get(\n        `${apiAddress}/accounts/${address}`\n      );\n      store.dispatch(setAccountShard(account.shard));\n      return account.shard;\n    } else {\n      return shard;\n    }\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { getServerConfiguration } from 'apiCalls';\nimport { fallbackNetworkConfigurations } from 'constants/network';\nimport { useGetAccountInfo } from 'hooks';\nimport { initializeProxyProvider } from 'providers/proxyProvider';\nimport { useDispatch } from 'redux/DappProviderContext';\nimport { initializeNetworkConfig } from 'redux/slices/networkConfigSlice';\nimport { CustomNetworkType, EnvironmentsEnum, NetworkType } from 'types';\nimport { logout } from 'utils';\nimport getAccountShard from 'utils/account/getAccountShard';\n\ninterface AppInitializerPropsType {\n  customNetworkConfig?: CustomNetworkType;\n  children: any;\n  environment: EnvironmentsEnum;\n}\n\nexport function AppInitializer({\n  customNetworkConfig = {},\n  children,\n  environment\n}: AppInitializerPropsType) {\n  const [initialized, setInitialized] = useState(false);\n  const account = useGetAccountInfo();\n  const { address, publicKey } = account;\n  const dispatch = useDispatch();\n\n  function initializeProviders(networkConfig: NetworkType) {\n    initializeProxyProvider(networkConfig);\n  }\n\n  async function initializeNetwork() {\n    const fetchConfigFromServer = !customNetworkConfig?.skipFetchFromServer;\n    const customNetworkApiAddress = customNetworkConfig?.apiAddress;\n    const fallbackConfig = fallbackNetworkConfigurations[environment] || {};\n\n    const localConfig = {\n      ...fallbackConfig,\n      ...customNetworkConfig\n    };\n\n    if (fetchConfigFromServer) {\n      const fallbackApiAddress = fallbackConfig?.apiAddress;\n\n      const serverConfig = await getServerConfiguration(\n        customNetworkApiAddress || fallbackApiAddress\n      );\n\n      if (serverConfig != null) {\n        const apiConfig = {\n          ...fallbackConfig,\n          ...serverConfig,\n          ...customNetworkConfig\n        };\n        dispatch(initializeNetworkConfig(apiConfig));\n        initializeProviders(apiConfig);\n        return;\n      }\n    }\n\n    dispatch(initializeNetworkConfig(localConfig));\n    initializeProviders(localConfig);\n  }\n\n  async function initializeApp() {\n    await initializeNetwork();\n    setInitialized(true);\n\n    getAccountShard();\n  }\n\n  useEffect(() => {\n    if (!address) {\n      return;\n    }\n\n    getAccountShard();\n  }, [address]);\n\n  useEffect(() => {\n    if (address) {\n      const pubKey = new Address(address).hex();\n      if (pubKey !== publicKey) {\n        logout();\n      }\n    }\n  }, [address, publicKey]);\n\n  useEffect(() => {\n    initializeApp();\n  }, [customNetworkConfig, environment]);\n\n  return initialized ? <>{children}</> : null;\n}\n\nexport default AppInitializer;\n","import React, { useCallback } from 'react';\nimport { IDappProvider } from '@elrondnetwork/erdjs/out';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport {\n  getTransactionsByHashes,\n  sendSignedTransactions\n} from 'apiCalls/transactions';\nimport ProviderInitializer from 'components/ProviderInitializer';\nimport TransactionSender from 'components/TransactionSender';\nimport TransactionsTracker from 'components/TransactionsTracker';\nimport OverrideDefaultBehaviourContext from 'contexts/OverrideDefaultBehaviourContext';\nimport {\n  GetTransactionsByHashesType,\n  SendSignedTransactionsAsyncType\n} from 'contexts/types';\nimport { setExternalProvider } from 'providers/accountProvider';\nimport { DappCoreContext } from 'redux/DappProviderContext';\nimport { CustomNetworkType, EnvironmentsEnum } from 'types';\nimport AppInitializer from 'wrappers/AppInitializer';\n\nimport { store, persistor } from './store';\n\ninterface DappProviderPropsType {\n  children: React.ReactChildren | React.ReactElement;\n  customNetworkConfig?: CustomNetworkType;\n  externalProvider?: IDappProvider;\n  environment: 'testnet' | 'mainnet' | 'devnet' | EnvironmentsEnum;\n  sendSignedTransactionsAsync?: SendSignedTransactionsAsyncType;\n  getTransactionsByHash?: GetTransactionsByHashesType;\n}\n\nexport const DappProvider = ({\n  children,\n  customNetworkConfig = {},\n  externalProvider,\n  environment,\n  sendSignedTransactionsAsync = sendSignedTransactions,\n  getTransactionsByHash = getTransactionsByHashes\n}: DappProviderPropsType) => {\n  const memoizedSendSignedTransactionsAsync = useCallback(\n    sendSignedTransactionsAsync,\n    []\n  );\n\n  if (!environment) {\n    //throw if the user tries to initialize the app without a valid environment\n    throw new Error('missing environment flag');\n  }\n\n  if (externalProvider != null) {\n    setExternalProvider(externalProvider);\n  }\n\n  const memoizedGetTransactionsByHash = useCallback(getTransactionsByHash, []);\n  return (\n    <Provider context={DappCoreContext} store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <OverrideDefaultBehaviourContext.Provider\n          value={{\n            sendSignedTransactionsAsync: memoizedSendSignedTransactionsAsync,\n            getTransactionsByHash: memoizedGetTransactionsByHash\n          }}\n        >\n          <AppInitializer\n            environment={environment as EnvironmentsEnum}\n            customNetworkConfig={customNetworkConfig}\n          >\n            <ProviderInitializer />\n            <TransactionSender />\n            <TransactionsTracker />\n            {children}\n          </AppInitializer>\n        </OverrideDefaultBehaviourContext.Provider>\n      </PersistGate>\n    </Provider>\n  );\n};\n","import React, { useRef } from 'react';\nimport { useSelector } from 'redux/DappProviderContext';\nimport {\n  isAccountLoadingSelector,\n  isLoggedInSelector,\n  walletLoginSelector\n} from 'redux/selectors';\n\nimport { RouteType } from 'types';\n\nconst AuthenticatedRoutesWrapper = ({\n  children,\n  routes,\n  unlockRoute,\n  onRedirect\n}: {\n  children: React.ReactNode;\n  routes: RouteType[];\n  unlockRoute: string;\n  onRedirect?: (unlockRoute?: string) => void;\n}) => {\n  const isLoggedIn = useSelector(isLoggedInSelector);\n\n  const isAccountLoading = useSelector(isAccountLoadingSelector);\n\n  const walletLogin = useSelector(walletLoginSelector);\n  const { pathname } = window.location;\n\n  const authenticatedRoutesRef = useRef(\n    routes.filter((route) => Boolean(route.authenticatedRoute))\n  );\n\n  const isOnAuthenticatedRoute = authenticatedRoutesRef.current.some(\n    ({ path }) => pathname === path\n  );\n\n  const shouldRedirect =\n    isOnAuthenticatedRoute && !isLoggedIn && walletLogin == null;\n\n  if (isAccountLoading || walletLogin) {\n    return null;\n  }\n\n  if (shouldRedirect) {\n    if (onRedirect) {\n      onRedirect(unlockRoute);\n    } else {\n      window.location.href = unlockRoute;\n    }\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\nexport default AuthenticatedRoutesWrapper;\n","import { Address } from '@elrondnetwork/erdjs';\n\nexport class TransactionParameter {\n  sender: Address;\n  receiver: Address;\n  functionName: string;\n  inputParameters: string[];\n  outputParameters: string[];\n\n  constructor(\n    sender: Address,\n    receiver: Address,\n    functionName: string,\n    inputParameters: string[],\n    outputParameters: string[]\n  ) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.functionName = functionName;\n    this.inputParameters = inputParameters;\n    this.outputParameters = outputParameters;\n  }\n}\n","import React from 'react';\nimport { wrapperClassName } from 'utils';\n\nexport const withClassNameWrapper =\n  (Component: any) =>\n  ({ ...props }) =>\n    (\n      <span className={wrapperClassName}>\n        <Component {...props} />\n      </span>\n    );\n","import React from 'react';\nimport {\n  denomination as configDenomination,\n  decimals as configDecimals\n} from 'constants/index';\nimport { denominate, getEgldLabel, stringIsInteger } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\nexport interface DenominateType {\n  value: string;\n  showLastNonZeroDecimal?: boolean;\n  showLabel?: boolean;\n  token?: string;\n  decimals?: number;\n  denomination?: number;\n  egldLabel?: string;\n  'data-testid'?: string;\n}\n\nconst denominateInvalid = (props: DenominateType) => {\n  return (\n    <span\n      data-testid={\n        props['data-testid'] ? props['data-testid'] : 'denominateComponent'\n      }\n    >\n      <span className='int-amount'>...</span>\n    </span>\n  );\n};\n\nconst denominateValid = (props: DenominateType, erdLabel: string) => {\n  const { value, showLastNonZeroDecimal = false, showLabel = true } = props;\n  const decimals =\n    props.decimals !== undefined ? props.decimals : configDecimals;\n  const denomination =\n    props.denomination !== undefined ? props.denomination : configDenomination;\n\n  const denominatedValue = denominate({\n    input: value,\n    denomination,\n    decimals,\n    showLastNonZeroDecimal,\n    addCommas: true\n  });\n\n  const valueParts = denominatedValue.split('.');\n  const hasNoDecimals = valueParts.length === 1;\n  const isNotZero = denominatedValue !== '0';\n\n  if (decimals > 0 && hasNoDecimals && isNotZero) {\n    let zeros = '';\n\n    for (let i = 1; i <= decimals; i++) {\n      zeros = zeros + '0';\n    }\n\n    valueParts.push(zeros);\n  }\n\n  return (\n    <span\n      data-testid={\n        props['data-testid'] ? props['data-testid'] : 'denominateComponent'\n      }\n    >\n      <span className='int-amount'>{valueParts[0]}</span>\n      {valueParts.length > 1 && (\n        <span className='decimals'>.{valueParts[1]}</span>\n      )}\n      {showLabel && (\n        <span className={`symbol ${props.token ? 'text-muted' : ''}`}>\n          &nbsp;{props.token ? props.token : erdLabel}\n        </span>\n      )}\n    </span>\n  );\n};\n\nconst Denominate = (props: DenominateType) => {\n  const { value } = props;\n\n  return !stringIsInteger(value)\n    ? denominateInvalid(props)\n    : denominateValid(props, props.egldLabel || '');\n};\n\nconst DenominateWrapper = (props: DenominateType) => {\n  const egldLabel = props.egldLabel || getEgldLabel();\n  const denominateProps = { ...props, egldLabel };\n  return <Denominate {...denominateProps} />;\n};\n\nexport default withClassNameWrapper(DenominateWrapper);\n","let fontawesomeFreeSolidIcons: any = {};\ntry {\n  fontawesomeFreeSolidIcons = require('@fortawesome/free-solid-svg-icons');\n} catch (err) {}\n\nexport default fontawesomeFreeSolidIcons;\n","let ReactFontawesome: any = {};\ntry {\n  ReactFontawesome = require('@fortawesome/react-fontawesome');\n} catch (err) {}\n\nexport default ReactFontawesome;\n","import React from 'react';\nimport { useGetNetworkConfig } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\nconst ExplorerLink = ({\n  page,\n  text,\n  className\n}: {\n  page: string;\n  text?: any;\n  className?: string;\n}) => {\n  const {\n    network: { explorerAddress }\n  } = useGetNetworkConfig();\n  return (\n    <a\n      href={`${explorerAddress}${page}`}\n      {...{\n        target: '_blank'\n      }}\n      className={`link-style ${className}`}\n    >\n      {text ? (\n        <React.Fragment>{text}</React.Fragment>\n      ) : (\n        <ReactFontawesome.FontAwesomeIcon\n          icon={icons.faSearch}\n          className='text-secondary'\n        />\n      )}\n    </a>\n  );\n};\n\nexport default withClassNameWrapper(ExplorerLink);\n","import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { useExtensionLogin } from 'services';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { ExtensionLoginButtonPropsType } from './types';\n\nconst ExtensionLoginButton: (\n  props: ExtensionLoginButtonPropsType\n) => JSX.Element = ({\n  token,\n  className = 'extension-login',\n  children,\n  callbackRoute,\n  buttonClassName,\n  loginButtonText = 'Maiar DeFi Wallet',\n  redirectAfterLogin = false,\n  shouldRenderDefaultCss = true\n}) => {\n  const [onInitiateLogin] = useExtensionLogin({\n    callbackRoute,\n    token,\n    redirectAfterLogin\n  });\n\n  const isFirefox = navigator.userAgent.indexOf('Firefox') != -1;\n  const classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n      buttonClassName != null ? buttonClassName : ''\n    }`,\n    loginText: 'text-left',\n    noExtensionButtonWrapper: 'btn btn-unlock d-inline-block',\n    noExtensionButtonContent:\n      'd-flex justify-content-between align-items-center',\n    noExtensionButtonTitle: 'title',\n    noExtensionButtonIcon: ''\n  });\n\n  const handleLogin = () => {\n    onInitiateLogin();\n  };\n\n  return !window.elrondWallet ? (\n    <a\n      rel='noreferrer'\n      href={\n        isFirefox\n          ? 'https://addons.mozilla.org/en-US/firefox/addon/maiar-defi-wallet/'\n          : 'https://chrome.google.com/webstore/detail/dngmlblcodfobpdpecaadgfbcggfjfnm?authuser=0&hl=en'\n      }\n      target='_blank'\n      className={classes.noExtensionButtonWrapper}\n    >\n      {children || (\n        <div className={classes.noExtensionButtonContent}>\n          <div className={classes.noExtensionButtonTitle}>\n            Maiar DeFi Wallet\n          </div>\n          <ReactFontawesome.FontAwesomeIcon\n            className={classes.noExtensionButtonIcon}\n            icon={icons.faArrowRight}\n          />\n        </div>\n      )}\n    </a>\n  ) : (\n    <button onClick={handleLogin} className={classes.wrapper}>\n      {children || <span className={classes.loginText}>{loginButtonText}</span>}\n    </button>\n  );\n};\n\nexport default withClassNameWrapper(ExtensionLoginButton);\n","let ReactBootstrap: any = {};\ntry {\n  ReactBootstrap = require('react-bootstrap');\n} catch (err) {}\n\nexport default ReactBootstrap;\n","import React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { wrapperClassName } from 'utils';\n\nconst ModalContainer = ({\n  children,\n  noSpacer,\n  className,\n  title,\n  onClose\n}: {\n  children: React.ReactNode;\n  noSpacer?: boolean;\n  className?: string;\n  title: React.ReactNode;\n  onClose?: () => void;\n}) => {\n  return (\n    <ReactBootstrap.Modal\n      show\n      backdrop='static'\n      onHide={onClose}\n      className={`modal-container ${\n        className ? className : ''\n      } ${wrapperClassName}`}\n      animation={false}\n      centered\n    >\n      <div className='modal-card card w-100'>\n        <div className='card-title h5 mb-0'>\n          <div className='d-flex justify-content-between align-items-center pt-spacer px-spacer mb-0'>\n            <div className={'px-3'}>{title}</div>\n            <button\n              type='button'\n              className='btn btn-light px-3 py-2'\n              onClick={onClose}\n            >\n              <ReactFontawesome.FontAwesomeIcon\n                size='lg'\n                icon={icons.faTimes}\n              />\n            </button>\n          </div>\n        </div>\n\n        <div\n          className={`modal-card-body text-center ${\n            noSpacer ? 'p-0' : 'p-spacer'\n          }`}\n        >\n          {children}\n        </div>\n      </div>\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default ModalContainer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { PageStateProps } from './types';\n\nexport const PageState = ({\n  icon,\n  title,\n  action,\n  iconClass,\n  dataTestId,\n  description,\n  iconBgClass,\n  iconSize = '5x',\n  className = 'page-state',\n  shouldRenderDefaultCss = true\n}: PageStateProps) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: 'state m-auto p-4 text-center',\n      iconContainer: classNames('icon-state mx-auto', {\n        [`${iconBgClass}`]: Boolean(iconBgClass)\n      }),\n      iconClass: classNames(iconClass != null && iconClass),\n      title: 'h4 my-4',\n      description: 'mb-3'\n    }\n  );\n\n  return (\n    <div className={generatedClasses.wrapper} data-testid={dataTestId}>\n      {icon && (\n        <span className={generatedClasses.iconContainer}>\n          <ReactFontawesome.FontAwesomeIcon\n            icon={icon}\n            className={generatedClasses.iconClass}\n            size={iconSize}\n          />\n        </span>\n      )}\n      {title && <p className={generatedClasses.title}>{title}</p>}\n      {description && (\n        <div className={generatedClasses.description}>{description}</div>\n      )}\n      {action && <React.Fragment>{action}</React.Fragment>}\n    </div>\n  );\n};\n\nexport default withClassNameWrapper(PageState);\n","import React from 'react';\n\nimport Denominate from 'UI/Denominate';\nimport { getAccountBalance } from 'utils';\n\ninterface AddressRowType {\n  selectedAddress?: string;\n  index: number;\n  address: string;\n  onSelectAddress: (address: { address: string; index: number } | null) => void;\n}\n\n// TODO: why not use Trim component?\nconst trimHash = (hash: string, keep = 10) => {\n  const start = hash.substring(0, keep);\n  const end = hash.substring(hash.length - keep);\n  return `${start}...${end}`;\n};\n\nconst noBalance = '...';\n\nconst AddressRow = ({\n  address,\n  index,\n  selectedAddress,\n  onSelectAddress\n}: AddressRowType) => {\n  const [balance, setBalance] = React.useState(noBalance);\n\n  const handleChange = (e: React.SyntheticEvent) => {\n    const { checked } = e.target as HTMLInputElement;\n    if (checked) {\n      onSelectAddress({ address, index });\n    }\n  };\n\n  const fetchBalance = async () => {\n    try {\n      const balance = await getAccountBalance(address);\n      setBalance(balance);\n    } catch (err) {\n      console.error('error fetching balance', err, balance);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchBalance();\n  }, []);\n\n  return (\n    <tr>\n      <td className='text-left'>\n        <div className='d-flex align-items-start text-left form-check'>\n          <input\n            type='radio'\n            id={`check_${index}`}\n            data-testid={`check_${index}`}\n            onChange={handleChange}\n            role='button'\n            checked={selectedAddress === address}\n            className='form-check-input mr-1'\n          />\n          <label\n            htmlFor={`check_${index}`}\n            role='button'\n            data-testid={`label_${index}`}\n            className='form-check-label text-nowrap trim-size-xl m-0'\n          >\n            <div className='d-flex align-items-center text-nowrap trim'>\n              <span>{trimHash(address)}</span>\n            </div>\n          </label>\n        </div>\n      </td>\n      <td className='text-left'>\n        <Denominate value={balance} />\n      </td>\n      <td className='text-left'>{index}</td>\n    </tr>\n  );\n};\n\nexport default AddressRow;\n","import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses } from 'utils';\n\nimport AddressRow from './AddressRow';\n\nconst ledgerWaitingText = 'Waiting for device';\n\nconst addressesPerPage = 10;\n\ninterface AddressTablePropsType {\n  loading: boolean;\n  accounts: string[];\n  startIndex: number;\n  selectedAddress?: string;\n  className: string;\n  shouldRenderDefaultCss: boolean;\n  onSelectAddress: (address: { address: string; index: number } | null) => void;\n  onGoToPrevPage: () => void;\n  onGoToNextPage: () => void;\n  onConfirmSelectedAddress: () => void;\n}\n\nconst AddressTable = ({\n  loading,\n  accounts,\n  startIndex,\n  selectedAddress,\n  onGoToPrevPage,\n  onGoToNextPage,\n  onConfirmSelectedAddress,\n  onSelectAddress,\n  shouldRenderDefaultCss = true,\n  className = 'ledger-address-table'\n}: AddressTablePropsType) => {\n  const classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: 'card my-4 text-center border-0',\n    cardBody: 'card-body p-4 mx-lg-4',\n    tableWrapper: 'table-responsive',\n    tableContent: 'table m-0 border-bottom',\n    tableHeader: 'py-2 text-semibold border-bottom',\n    tableHeaderText: 'text-left border-0',\n    buttonsWrapper: 'd-flex justify-content-center pager mt-2',\n    arrowButton: 'btn btn-link mx-2',\n    confirmButton: 'btn btn-primary px-4 mt-4'\n  });\n  switch (true) {\n    case loading:\n      return (\n        <PageState\n          className={className}\n          icon={icons.faCircleNotch}\n          iconClass='fa-spin text-primary'\n          title={ledgerWaitingText}\n        />\n      );\n    default:\n      return (\n        <React.Fragment>\n          <div className='m-auto'>\n            <div className={classes.wrapper}>\n              <div className={classes.cardBody}>\n                <div\n                  className={classes.tableWrapper}\n                  data-testid='ledgerAddresses'\n                >\n                  <table className={classes.tableContent}>\n                    <thead className={classes.tableHeader}>\n                      <tr>\n                        <th className={classes.tableHeaderText}>Address</th>\n                        <th className={classes.tableHeaderText}>Balance</th>\n                        <th className={classes.tableHeaderText}>#</th>\n                      </tr>\n                    </thead>\n                    <tbody data-testid='addressesTable'>\n                      {accounts.map((address, index) => {\n                        const key = index + startIndex * addressesPerPage;\n                        return (\n                          <AddressRow\n                            key={key}\n                            address={address}\n                            index={key}\n                            selectedAddress={selectedAddress}\n                            onSelectAddress={onSelectAddress}\n                          />\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n                <div className={classes.buttonsWrapper}>\n                  <button\n                    type='button'\n                    className={classes.arrowButton}\n                    onClick={onGoToPrevPage}\n                    data-testid='prevBtn'\n                    disabled={startIndex === 0}\n                  >\n                    <ReactFontawesome.FontAwesomeIcon\n                      size='sm'\n                      icon={icons.faChevronLeft}\n                    />{' '}\n                    Prev\n                  </button>\n                  <button\n                    type='button'\n                    className={classes.arrowButton}\n                    onClick={onGoToNextPage}\n                    data-testid='nextBtn'\n                  >\n                    Next{' '}\n                    <ReactFontawesome.FontAwesomeIcon\n                      size='sm'\n                      icon={icons.faChevronRight}\n                    />\n                  </button>\n                </div>\n                <button\n                  className={classes.confirmButton}\n                  disabled={selectedAddress === ''}\n                  onClick={onConfirmSelectedAddress}\n                  data-testid='confirmBtn'\n                >\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n  }\n};\n\nexport default AddressTable;\n","import React from 'react';\nimport { useGetAccountInfo } from 'hooks';\n\nconst ConfirmAddress = ({\n  token,\n  noBorder\n}: {\n  token?: string;\n  noBorder?: boolean;\n}) => {\n  const { ledgerAccount } = useGetAccountInfo();\n  return (\n    <div className='m-auto'>\n      <div className={`card my-4 text-center ${noBorder ? 'border-0' : ''}`}>\n        <div className='card-body p-4 mx-lg-4'>\n          <h4 className='mb-4'>Confirm Ledger Address</h4>\n          <p>For security, please confirm that your address: </p>\n          <p className='lead border rounded p-2'>\n            {ledgerAccount ? ledgerAccount.address : ''}\n          </p>\n          {token && (\n            <React.Fragment>\n              <p>and Auth Token</p>\n              <p className='lead border rounded p-2'>{`${token}{}`}</p>\n            </React.Fragment>\n          )}\n          <p className='m-0'>\n            {token\n              ? 'are the one shown on your Ledger device screen now.'\n              : 'is the one shown on your Ledger device screen now.'}\n          </p>\n\n          <p>Select Approve on your device to confirm.</p>\n          <p>\n            Or, if it does not match, close this page and{' '}\n            <a\n              href='https://help.elrond.com/en/'\n              {...{\n                target: '_blank'\n              }}\n            >\n              contact support\n            </a>\n            .\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmAddress;\n","import React from 'react';\nimport { ReactComponent as LedgerLogo } from '../assets/ledger-nano.svg';\n\nconst LedgerConnect = ({\n  onClick,\n  error,\n  connectPageContent\n}: {\n  onClick: () => void;\n  error: string;\n  connectPageContent?: React.ReactNode;\n}) => {\n  return (\n    <div className='m-auto login-container'>\n      <div className='card my-4 text-center border-0'>\n        <div className='card-body p-4 mx-lg-4'>\n          {connectPageContent ? (\n            <React.Fragment>{connectPageContent}</React.Fragment>\n          ) : (\n            <React.Fragment>\n              <LedgerLogo className='mb-4' />\n              <h4 className='mb-4'>Connect Ledger</h4>\n              <p className='lead mb-4'>\n                Unlock your device &amp; open the Elrond App.\n              </p>\n            </React.Fragment>\n          )}\n\n          <div>\n            {error && (\n              <p className='text-danger d-flex justify-content-center align-items-center'>\n                {error}\n              </p>\n            )}\n            <button\n              className='btn btn-primary px-4'\n              onClick={onClick}\n              data-testid='connectBtn'\n            >\n              Connect Ledger\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LedgerConnect;\n","import React from 'react';\nimport { useGetAccountInfo } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport { useLedgerLogin } from 'services';\nimport ModalContainer from 'UI/ModalContainer';\n\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport AddressTable from './AddressTable';\nimport ConfirmAddress from './ConfirmAddress';\nimport LedgerConnect from './LedgerConnect';\n\nconst ledgerWaitingText = 'Waiting for device';\n\ninterface LedgerLoginContainerPropsType {\n  callbackRoute: string;\n  className?: string;\n  shouldRenderDefaultCss?: boolean;\n  wrapContentInsideModal?: boolean;\n  redirectAfterLogin?: boolean;\n  token?: string;\n  onClose?: () => void;\n}\n\nfunction LedgerLoginContainer({\n  callbackRoute,\n  className = 'login-modal-content',\n  shouldRenderDefaultCss = true,\n  wrapContentInsideModal = true,\n  redirectAfterLogin,\n  onClose,\n  token\n}: LedgerLoginContainerPropsType) {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    { spinner: 'fa-spin text-primary' }\n  );\n  const { ledgerAccount } = useGetAccountInfo();\n  const [\n    onStartLogin,\n    { error, isLoading },\n    {\n      showAddressList,\n      accounts,\n      onGoToPrevPage,\n      onGoToNextPage,\n      onSelectAddress,\n      onConfirmSelectedAddress,\n      startIndex,\n      selectedAddress\n    }\n  ] = useLedgerLogin({ callbackRoute, token, redirectAfterLogin });\n\n  function getContent() {\n    if (isLoading) {\n      return (\n        <PageState\n          icon={icons.faCircleNotch}\n          iconClass={generatedClasses.spinner}\n          title={ledgerWaitingText}\n        />\n      );\n    }\n    if (ledgerAccount != null && !error) {\n      return <ConfirmAddress token={token} />;\n    }\n\n    if (showAddressList && !error) {\n      return (\n        <AddressTable\n          accounts={accounts}\n          loading={isLoading}\n          className={className}\n          shouldRenderDefaultCss={shouldRenderDefaultCss}\n          onGoToNextPage={onGoToNextPage}\n          onGoToPrevPage={onGoToPrevPage}\n          onSelectAddress={onSelectAddress}\n          startIndex={startIndex}\n          selectedAddress={selectedAddress?.address}\n          onConfirmSelectedAddress={onConfirmSelectedAddress}\n        />\n      );\n    }\n\n    return <LedgerConnect onClick={onStartLogin} error={error} />;\n  }\n  return wrapContentInsideModal ? (\n    <ModalContainer\n      title={'Login with ledger'}\n      className={className}\n      onClose={onClose}\n    >\n      {getContent()}\n    </ModalContainer>\n  ) : (\n    getContent()\n  );\n}\n\nexport default withClassNameWrapper(LedgerLoginContainer);\n","import React from 'react';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport LedgerLoginContainer from '../LoginModal';\nimport { LedgerLoginButtonPropsType } from './types';\n\nconst LedgerLoginButton: (props: LedgerLoginButtonPropsType) => JSX.Element = ({\n  token,\n  callbackRoute,\n  children,\n  onModalOpens,\n  onModalCloses,\n  loginButtonText = 'Ledger',\n  buttonClassName,\n  className = 'ledger-login',\n  redirectAfterLogin = false,\n  wrapContentInsideModal = true,\n  shouldRenderDefaultCss = true,\n  shouldRenderDefaultModalCss = true,\n  hideButtonWhenModalOpens = false\n}) => {\n  const [showLoginModal, setShowLoginModal] = React.useState(false);\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n        buttonClassName != null ? buttonClassName : ''\n      }`,\n      loginText: 'text-left'\n    }\n  );\n\n  function handleOpenModal() {\n    setShowLoginModal(true);\n    onModalOpens?.();\n  }\n\n  function handleCloseModal() {\n    setShowLoginModal(false);\n    onModalCloses?.();\n  }\n  \n  const shouldRenderButton = !hideButtonWhenModalOpens || !showLoginModal;\n\n  return (\n    <span className={wrapperClassName}>\n      {shouldRenderButton && (\n        <button onClick={handleOpenModal} className={generatedClasses.wrapper}>\n          {children || (\n            <span className={generatedClasses.loginText}>\n              {loginButtonText}\n            </span>\n          )}\n        </button>\n      )}\n      {showLoginModal && (\n        <LedgerLoginContainer\n          className={className}\n          shouldRenderDefaultCss={shouldRenderDefaultModalCss}\n          callbackRoute={callbackRoute}\n          token={token}\n          wrapContentInsideModal={wrapContentInsideModal}\n          redirectAfterLogin={redirectAfterLogin}\n          onClose={handleCloseModal}\n        />\n      )}\n    </span>\n  );\n};\n\nexport default withClassNameWrapper(LedgerLoginButton);\n","import React from 'react';\n\nimport { useGetNotification } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { NotificationTypesEnum } from 'types';\n\nimport { wrapperClassName } from 'utils';\nimport PageState from '../PageState';\n\nconst typedIcons: any = icons;\n\nconst notificationTypesToIcons = {\n  [NotificationTypesEnum.warning]: typedIcons.faExclamationTriangle\n};\nconst defaultIcon = typedIcons.faExclamationTriangle;\n\nexport function NotificationModal() {\n  const { notification, clearNotification } = useGetNotification();\n\n  const showModal = Boolean(notification);\n  const onDone = () => {\n    clearNotification();\n  };\n\n  const type = notification?.type as NotificationTypesEnum.warning;\n\n  const icon = notification\n    ? notificationTypesToIcons[type] || defaultIcon\n    : null;\n\n  return notification ? (\n    <ReactBootstrap.Modal\n      show={showModal}\n      backdrop={true}\n      onHide={notification}\n      className={`modal-container ${wrapperClassName}`}\n      animation={false}\n      centered\n    >\n      <div className='card w-100 notification-modal'>\n        <PageState\n          icon={icon}\n          iconClass={notification.iconClassName}\n          iconBgClass='p-4 rounded-bg-circle'\n          iconSize='3x'\n          title={notification.title}\n          description={notification.description}\n          action={\n            <button className='btn btn-primary' onClick={onDone}>\n              Done\n            </button>\n          }\n        />\n      </div>\n    </ReactBootstrap.Modal>\n  ) : null;\n}\n\nexport default NotificationModal;\n","import React from 'react';\n\nconst Dot = ({\n  color,\n  'data-testid': dataTestId\n}: {\n  color: string;\n  'data-testid'?: string;\n}) => {\n  return <span className={`dot ${color}`} data-testid={dataTestId} />;\n};\nexport default Dot;\n","import React from 'react';\nimport Dot from './Dot';\n\ninterface ProgressStepsType {\n  totalSteps: number;\n  currentStep: number;\n  className?: string;\n}\n\nconst ProgressSteps = ({\n  totalSteps,\n  currentStep,\n  className\n}: ProgressStepsType) => {\n  const dots = [];\n\n  for (let i = 1; i <= totalSteps; i += 1) {\n    const isCurrentStep = currentStep === i;\n    const color =\n      isCurrentStep || i < currentStep ? 'bg-primary' : 'bg-secondary';\n\n    dots.push(\n      <Dot\n        data-testid={`step${i}${isCurrentStep ? 'active' : ''}`}\n        key={i}\n        color={color}\n      />\n    );\n  }\n\n  return (\n    <div\n      className={`progress-steps d-flex justify-content-center ${className}`}\n    >\n      <div className='steps d-flex justify-content-center align-items-center position-relative'>\n        <hr className='position-absolute w-100 m-0' />\n        {dots}\n      </div>\n    </div>\n  );\n};\nexport default ProgressSteps;\n","import React from 'react';\nimport classNames from 'optionalPackages/classnames';\nimport freeSolidIcons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { SignModalPropsType } from 'types';\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\n\nconst SignWithExtensionModal = ({\n  handleClose,\n  error,\n  callbackRoute,\n  transactions,\n  className = 'extension-modal'\n}: SignModalPropsType) => {\n  const classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container extension',\n    icon: 'text-white',\n    closeBtn: 'btn btn-close-link mt-2'\n  });\n  const description = error\n    ? error\n    : transactions && transactions.length > 1\n    ? 'Check your Elrond Wallet Extension to sign the transactions'\n    : 'Check your Elrond Wallet Extension to sign the transaction';\n\n  const close = (e: React.MouseEvent) => {\n    e.preventDefault();\n    handleClose();\n    if (\n      callbackRoute != null &&\n      !window.location.pathname.includes(callbackRoute)\n    ) {\n      window.location.href = callbackRoute;\n    }\n  };\n\n  return (\n    <ReactBootstrap.Modal\n      show\n      backdrop='static'\n      onHide={handleClose}\n      className={classNames(classes.wrapper, wrapperClassName)}\n      animation={false}\n      centered\n    >\n      <PageState\n        icon={error ? freeSolidIcons.faTimes : freeSolidIcons.faHourglass}\n        iconClass={classes.icon}\n        className={className}\n        iconBgClass={error ? 'bg-danger' : 'bg-warning'}\n        iconSize='3x'\n        title='Confirm on Maiar DeFi Wallet'\n        description={description}\n        action={\n          <button\n            id='closeButton'\n            data-testid='closeButton'\n            onClick={close}\n            className={classes.closeBtn}\n          >\n            Close\n          </button>\n        }\n      />\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default SignWithExtensionModal;\n","import * as React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\n\nexport const Simple = ({ children }: { children: React.ReactNode }) => (\n  <div className='token-symbol'>{children}</div>\n);\n\nexport const Combined = ({\n  small,\n  children\n}: {\n  small: boolean | undefined;\n  children: React.ReactNode;\n}) => (\n  <div className={`token-symbol-combined ${small ? 'small' : ''}`}>\n    {children}\n  </div>\n);\n\nexport const Wrapped = ({ children }: { children: React.ReactNode }) => (\n  <div className='token-symbol-wrapped'>\n    <div className='wrapped rounded-circle shadow'>\n      <div className='locked-icon'>\n        <ReactFontawesome.FontAwesomeIcon icon={icons.faDollarSign} size='sm' />\n      </div>\n      {children}\n    </div>\n  </div>\n);\n\nexport const Pool = ({\n  first,\n  second\n}: {\n  first: React.ReactNode;\n  second: React.ReactNode;\n}) => (\n  <div className='token-symbol-pool'>\n    <div className='pool rounded-circle shadow'>\n      {first}\n      <div className='pool-icon'>{second}</div>\n    </div>\n  </div>\n);\n\nexport const Locked = ({ children }: { children: React.ReactNode }) => (\n  <div className='token-symbol-locked'>\n    <div className='locked rounded-circle shadow'>\n      <div className='locked-icon'>\n        <ReactFontawesome.FontAwesomeIcon icon={icons.faLock} size='sm' />\n      </div>\n      {children}\n    </div>\n  </div>\n);\n","import React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { getEgldLabel, wrapperClassName } from 'utils';\nimport { ReactComponent as EgldIcon } from '../../assets/icons/EGLD.svg';\nimport { Simple, Combined } from './TokenSymbol';\n\nconst getIdentifierWithoutNonce = (identifier: string) => {\n  const tokenParts = identifier.split('-');\n  return identifier.includes('-')\n    ? `${tokenParts[0]}-${tokenParts[1]}`\n    : identifier;\n};\n\ntype TokenIconProps = {\n  token: string;\n  combined?: boolean | undefined;\n  small?: boolean | undefined;\n  tokenAvatar?: string;\n};\ntype TokenIconType = TokenIconProps & {\n  symbol: string;\n  label: string;\n  icon: React.ReactNode;\n};\n\nfunction getIcon(isEgldTransfer: boolean, tokenAvatar?: string) {\n  if (tokenAvatar) {\n    return <img className='token-symbol-custom-token' src={tokenAvatar} />;\n  }\n  return isEgldTransfer ? (\n    <EgldIcon />\n  ) : (\n    <ReactFontawesome.FontAwesomeIcon icon={icons.faDiamond} />\n  );\n}\n\nconst getDetails = (token: string, tokenAvatar?: string): TokenIconType => {\n  const egldLabel = getEgldLabel();\n  const isEgldTransfer = token === egldLabel;\n\n  return {\n    token,\n    symbol: token ? token.split('-')[0] : '',\n    label: token,\n    // eslint-disable-next-line react/display-name\n    icon: () => getIcon(isEgldTransfer, tokenAvatar)\n  };\n};\n\nexport default class TokenDetails extends React.Component {\n  static Token = (props: TokenIconProps) => (\n    <React.Fragment>{props.token}</React.Fragment>\n  );\n  static Symbol = (props: TokenIconProps) => (\n    <React.Fragment>\n      {\n        getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n          .symbol\n      }\n    </React.Fragment>\n  );\n  static Label = (props: TokenIconProps) => (\n    <React.Fragment>\n      {\n        getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n          .label\n      }\n    </React.Fragment>\n  );\n  static Icon = (props: TokenIconProps) => {\n    const Component: any =\n      process.env.NODE_ENV !== 'test'\n        ? getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n            .icon\n        : () => null;\n\n    return (\n      <span className={wrapperClassName}>\n        {props.combined ? (\n          <Combined small={props.small}>\n            <Component />\n          </Combined>\n        ) : (\n          <Simple>\n            <Component />\n          </Simple>\n        )}\n      </span>\n    );\n  };\n  render() {\n    return null;\n  }\n}\n","import * as React from 'react';\nimport { decodePart } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\nconst allOccurences = (sourceStr: string, searchStr: string) =>\n  [...sourceStr.matchAll(new RegExp(searchStr, 'gi'))].map((a) => a.index);\n\nconst TransactionData = ({\n  data,\n  highlight,\n  isScCall\n}: {\n  data: string;\n  highlight?: string;\n  isScCall?: boolean;\n}) => {\n  let output = <React.Fragment>{data}</React.Fragment>;\n\n  const [encodedScCall, ...remainingDataFields] =\n    highlight && isScCall ? highlight.split('@') : [];\n\n  if (data && highlight && allOccurences(data, highlight).length === 1) {\n    switch (true) {\n      case data.startsWith(highlight): {\n        const [, rest] = data.split(highlight);\n        output = (\n          <React.Fragment>\n            {highlight}\n            <span className='text-muted'>{rest}</span>\n          </React.Fragment>\n        );\n        break;\n      }\n      case data.endsWith(highlight): {\n        const [rest] = data.split(highlight);\n        output = (\n          <React.Fragment>\n            <span className='text-muted'>{rest}</span>\n            {highlight}\n          </React.Fragment>\n        );\n        break;\n      }\n\n      default: {\n        const [start, end] = data.split(highlight);\n\n        output = (\n          <React.Fragment>\n            <span className='text-muted'>{start}</span>\n            <span className={'highlighted'}>{highlight}</span>\n            <span className='text-muted'>{end}</span>\n          </React.Fragment>\n        );\n        break;\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {encodedScCall && (\n        <div className='form-group mb-0 data-field mw-100'>\n          <span className='form-label text-secondary d-block'>SC Call</span>\n\n          <div\n            data-testid='confirmScCall'\n            className='textarea sc-call form-control cursor-text mt-1 text-break-all'\n          >\n            {[decodePart(encodedScCall), ...remainingDataFields].join('@')}\n          </div>\n        </div>\n      )}\n      <div className='form-group mb-0 data-field mw-100'>\n        <span className='form-label text-secondary d-block'>Data</span>\n\n        <div\n          data-testid='confirmData'\n          className='textarea form-control cursor-text mt-1 text-break-all'\n        >\n          {data ? output : 'N/A'}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withClassNameWrapper(TransactionData);\n","import React from 'react';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { useGetNetworkConfig } from 'hooks';\nimport useGetTokenDetails from 'hooks/transactions/useGetTokenDetails';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { ActiveLedgerTransactionType, MultiSignTxType } from 'types';\nimport PageState from 'UI/PageState';\nimport ProgressSteps from 'UI/ProgressSteps';\nimport TokenDetails from 'UI/TokenDetails';\nimport TransactionData from 'UI/TransactionData';\nimport {\n  denominate,\n  getEgldLabel,\n  getGeneratedClasses,\n  isTokenTransfer\n} from 'utils';\n\nexport interface SignStepType {\n  onSignTransaction: () => void;\n  onPrev: () => void;\n  handleClose: () => void;\n  waitingForDevice: boolean;\n  error: string | null;\n  callbackRoute?: string;\n  title?: React.ReactNode;\n  currentStep: number;\n  currentTransaction: ActiveLedgerTransactionType | null;\n  allTransactions: MultiSignTxType[];\n  isLastTransaction: boolean;\n  className: string;\n}\n\nconst SignStep = ({\n  onSignTransaction,\n  handleClose,\n  onPrev,\n  title,\n  waitingForDevice,\n  currentTransaction,\n  error,\n  allTransactions,\n  isLastTransaction,\n  currentStep,\n  className\n}: SignStepType) => {\n  const egldLabel = getEgldLabel();\n\n  if (!currentTransaction) {\n    return null;\n  }\n\n  const transactionData = currentTransaction.transaction.getData().toString();\n  const { network } = useGetNetworkConfig();\n\n  const { tokenId, amount, type, multiTxData, receiver } =\n    currentTransaction.transactionTokenInfo;\n\n  const isTokenTransaction = Boolean(\n    tokenId && isTokenTransfer({ tokenId, erdLabel: egldLabel })\n  );\n\n  const isFirst = currentStep === 0;\n\n  const onCloseClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (isFirst) {\n      handleClose();\n    } else {\n      onPrev();\n    }\n  };\n\n  const continueWithoutSigning =\n    type && multiTxData && !transactionData.endsWith(multiTxData);\n\n  let signBtnLabel = 'Sign & Continue';\n  signBtnLabel = waitingForDevice ? 'Check your Ledger' : signBtnLabel;\n  signBtnLabel =\n    isLastTransaction && !waitingForDevice ? 'Sign & Submit' : signBtnLabel;\n  signBtnLabel = continueWithoutSigning ? 'Continue' : signBtnLabel;\n\n  const { tokenDenomination, tokenAvatar } = useGetTokenDetails({\n    tokenId: currentTransaction.transactionTokenInfo.tokenId\n  });\n\n  const denominatedAmount = denominate({\n    input: isTokenTransaction\n      ? amount\n      : currentTransaction.transaction.getValue().toString(),\n    denomination: isTokenTransaction\n      ? tokenDenomination\n      : Number(network.egldDenomination),\n    decimals: Number(network.decimals),\n    showLastNonZeroDecimal: false,\n    addCommas: true\n  });\n\n  const scamReport = currentTransaction.receiverScamInfo;\n  const showProgressSteps = allTransactions.length > 1;\n\n  const classes = getGeneratedClasses(className, true, {\n    formGroup: 'form-group text-left',\n    formLabel: 'form-label text-secondary',\n    icon: 'text-white',\n    contentWrapper:\n      'd-flex flex-column justify-content-start flex-md-row justify-content-md-between mb-3',\n    tokenWrapper: 'mb-3 mb-md-0 d-flex flex-column align-items-start',\n    tokenLabel: 'text-secondary text-left',\n    tokenValue: 'd-flex align-items-center mt-1',\n    scamReport: 'text-warning',\n    scamReportIcon: 'text-warning mr-1',\n    tokenAmountLabel: 'text-secondary text-left',\n    tokenAmountValue: 'd-flex align-items-center',\n    dataFormGroup: 'form-group text-left',\n    errorMessage:\n      'text-danger d-flex justify-content-center align-items-center',\n    buttonsWrapper: 'd-flex align-items-center justify-content-end mt-spacer',\n    cancelButton: 'btn btn-dark text-white flex-even mr-2',\n    signButton: `btn ${\n      scamReport ? 'btn-warning' : 'btn-primary'\n    } flex-even ml-2`\n  });\n\n  return (\n    <PageState\n      icon={error ? icons.faTimes : icons.faHourglass}\n      iconClass={classes.icon}\n      iconBgClass={error ? 'bg-danger' : 'bg-warning'}\n      iconSize='3x'\n      className={className}\n      title={title || 'Confirm on Ledger'}\n      description={\n        <React.Fragment>\n          {currentTransaction.transaction && (\n            <React.Fragment>\n              {showProgressSteps && (\n                <ProgressSteps\n                  totalSteps={allTransactions.length}\n                  currentStep={currentStep + 1} // currentStep starts at 0\n                  className='mb-4'\n                />\n              )}\n\n              <div className={classes.formGroup} data-testid='transactionTitle'>\n                <div className={classes.formLabel}>To: </div>\n                {multiTxData\n                  ? new Address(receiver).bech32()\n                  : currentTransaction.transaction.getReceiver().toString()}\n                {scamReport && (\n                  <div className={classes.scamReport}>\n                    <span>\n                      <ReactFontawesome.FontAwesomeIcon\n                        icon={icons.faExclamationTriangle}\n                        className={classes.scamReportIcon}\n                      />\n                      <small>{scamReport}</small>\n                    </span>\n                  </div>\n                )}\n              </div>\n\n              <div className={classes.contentWrapper}>\n                <div className={classes.tokenWrapper}>\n                  <div className={classes.tokenlabel}>Token</div>\n                  <div className={classes.tokenValue}>\n                    <TokenDetails.Icon\n                      tokenAvatar={tokenAvatar}\n                      token={tokenId || egldLabel}\n                    />\n                    <div className='mr-1'></div>\n                    <TokenDetails.Label token={tokenId || egldLabel} />\n                  </div>\n                </div>\n                <div>\n                  <div className={classes.tokenAmountLabel}>Amount</div>\n                  <div className={classes.tokenAmountValue}>\n                    <div className='mr-1'>{denominatedAmount}</div>\n                    <TokenDetails.Symbol token={tokenId || egldLabel} />\n                  </div>\n                </div>\n              </div>\n\n              <div className={classes.dataFormGroup}>\n                {currentTransaction.transaction.getData() && (\n                  <TransactionData\n                    {...{\n                      data: currentTransaction.transaction.getData().toString(),\n                      highlight: multiTxData,\n                      isScCall: !tokenId\n                    }}\n                  />\n                )}\n              </div>\n              {error && <p className={classes.errorMessage}>{error}</p>}\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      }\n      action={\n        <div className={classes.buttonsWrapper}>\n          <button\n            id='closeButton'\n            data-testid='closeButton'\n            onClick={onCloseClick}\n            className={classes.cancelButton}\n          >\n            {isFirst ? 'Cancel' : 'Back'}\n          </button>\n\n          <button\n            type='button'\n            className={classes.signButton}\n            id='signBtn'\n            data-testid='signBtn'\n            onClick={onSignTransaction}\n            disabled={waitingForDevice}\n          >\n            {signBtnLabel}\n          </button>\n        </div>\n      }\n    />\n  );\n};\n\nexport default SignStep;\n","import React from 'react';\nimport { useSignTransactionsWithLedger } from 'hooks';\nimport classNames from 'optionalPackages/classnames';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { SignModalPropsType } from 'types';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\nimport SignStep from './SignStep';\n\nconst SignWithLedgerModal = ({\n  handleClose,\n  error,\n  className = 'ledger-modal',\n  verifyReceiverScam = true,\n  title = 'Confirm on Ledger'\n}: SignModalPropsType) => {\n  const {\n    onSignTransaction,\n    onNext,\n    onPrev,\n    allTransactions,\n    waitingForDevice,\n    onAbort,\n    isLastTransaction,\n    currentStep,\n    callbackRoute,\n    currentTransaction\n  } = useSignTransactionsWithLedger({\n    onCancel: handleClose,\n    verifyReceiverScam\n  });\n  const classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container wallet-connect',\n    container: 'card container',\n    cardBody: 'card-body'\n  });\n  return (\n    <ReactBootstrap.Modal\n      show={currentTransaction != null}\n      backdrop='static'\n      onHide={handleClose}\n      className={classNames(classes.wrapper, wrapperClassName)}\n      animation={false}\n      centered\n    >\n      <div className={classes.container}>\n        <div className={classes.cardBody}>\n          <SignStep\n            {...{\n              onSignTransaction,\n              onNext,\n              onPrev,\n              allTransactions,\n              waitingForDevice,\n              isLastTransaction,\n              currentStep,\n              callbackRoute,\n              currentTransaction,\n              handleClose: onAbort,\n              className,\n              error,\n              title\n            }}\n          />\n        </div>\n      </div>\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default SignWithLedgerModal;\n","import React from 'react';\n\nimport classNames from 'optionalPackages/classnames';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { SignModalPropsType } from 'types';\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\n\nexport const SignWithWalletConnectModal = ({\n  error,\n  handleClose,\n  callbackRoute,\n  transactions,\n  className = 'wallet-connect-modal'\n}: SignModalPropsType) => {\n  const classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container wallet-connect',\n    icon: 'text-white',\n    closeBtn: 'btn btn-close-link mt-2'\n  });\n\n  const hasMultipleTransactions = transactions && transactions?.length > 1;\n  const description = error\n    ? error\n    : `Check your phone to sign the transaction${\n        hasMultipleTransactions ? 's' : ''\n      }`;\n\n  const close = (e: React.MouseEvent) => {\n    e.preventDefault();\n    handleClose();\n    if (\n      callbackRoute != null &&\n      !window.location.pathname.includes(callbackRoute)\n    ) {\n      window.location.href = callbackRoute;\n    }\n  };\n  return (\n    <ReactBootstrap.Modal\n      show\n      backdrop='static'\n      onHide={close}\n      className={classNames(classes.wrapper, wrapperClassName)}\n      animation={false}\n      centered\n    >\n      <PageState\n        icon={error ? icons.faTimes : icons.faHourglass}\n        iconClass={classes.icon}\n        className={className}\n        iconBgClass={error ? 'bg-danger' : 'bg-warning'}\n        iconSize='3x'\n        title='Confirm on Maiar'\n        description={description}\n        action={\n          <button\n            id='closeButton'\n            data-testid='closeButton'\n            onClick={close}\n            className={classes.closeBtn}\n          >\n            Close\n          </button>\n        }\n      />\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default SignWithWalletConnectModal;\n","import React from 'react';\n\nimport { Transaction } from '@elrondnetwork/erdjs';\nimport { useGetLoginInfo } from 'hooks';\nimport {\n  useGetAccountProvider,\n  useGetSignTransactionsError,\n  useSignTransactions\n} from 'hooks';\nimport { LoginMethodsEnum } from 'types';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport SignWithExtensionModal from './SignWithExtensionModal';\nimport SignWithLedgerModal from './SignWithLedgerModal';\nimport SignWithWalletConnectModal from './SignWithWalletConnectModal';\n\ninterface SignPropsType {\n  handleClose: () => void;\n  error: string | null;\n  sessionId?: string;\n  transactions: Transaction[];\n  providerType: LoginMethodsEnum;\n  callbackRoute: string;\n  className?: string;\n  verifyReceiverScam?: boolean;\n}\n\ninterface CustomConfirmScreensType {\n  Ledger: (signProps: SignPropsType) => JSX.Element;\n  Extension: (signProps: SignPropsType) => JSX.Element;\n  WalletConnect: (signProps: SignPropsType) => JSX.Element;\n  Extra: (signProps: SignPropsType) => JSX.Element;\n}\n\ninterface SignTransactionsPropsType {\n  className?: string;\n  CustomConfirmScreens?: CustomConfirmScreensType;\n  verifyReceiverScam?: SignPropsType['verifyReceiverScam'];\n}\n\nfunction SignTransactionsModals({\n  className,\n  CustomConfirmScreens,\n  verifyReceiverScam = true\n}: SignTransactionsPropsType) {\n  const {\n    callbackRoute,\n    transactions,\n    error,\n    sessionId,\n    onAbort,\n    hasTransactions\n  } = useSignTransactions();\n\n  const { providerType } = useGetAccountProvider();\n  const signTransactionsError = useGetSignTransactionsError();\n  const { loginMethod } = useGetLoginInfo();\n\n  const handleClose = () => {\n    onAbort(sessionId);\n  };\n\n  const signError = error || signTransactionsError;\n\n  const signProps: SignPropsType = {\n    handleClose,\n    error: signError,\n    sessionId,\n    transactions: transactions!,\n    providerType,\n    callbackRoute,\n    className,\n    verifyReceiverScam\n  };\n\n  if (signError || hasTransactions) {\n    switch (loginMethod) {\n      case LoginMethodsEnum.ledger:\n        return CustomConfirmScreens?.Ledger ? (\n          <CustomConfirmScreens.Ledger {...signProps} />\n        ) : (\n          <SignWithLedgerModal {...signProps} />\n        );\n\n      case LoginMethodsEnum.walletconnect:\n        return CustomConfirmScreens?.WalletConnect ? (\n          <CustomConfirmScreens.WalletConnect {...signProps} />\n        ) : (\n          <SignWithWalletConnectModal {...signProps} />\n        );\n\n      case LoginMethodsEnum.extension:\n        return CustomConfirmScreens?.Extension ? (\n          <CustomConfirmScreens.Extension {...signProps} />\n        ) : (\n          <SignWithExtensionModal {...signProps} />\n        );\n\n      case LoginMethodsEnum.extra:\n        return CustomConfirmScreens?.Extra ? (\n          <CustomConfirmScreens.Extra {...signProps} />\n        ) : null;\n\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\nexport default withClassNameWrapper(SignTransactionsModals);\n","enum SessionStorageKeysEnum {\n  'toasts' = 'toasts'\n}\n\nexport function setToastsIdsToStorage(ids: string[]) {\n  return sessionStorage.setItem(\n    SessionStorageKeysEnum.toasts,\n    JSON.stringify(ids)\n  );\n}\n\nexport function getToastsIdsFromStorage() {\n  const toastsIds = sessionStorage.getItem(SessionStorageKeysEnum.toasts);\n  return toastsIds != null ? JSON.parse(toastsIds) : [];\n}\n","import { Address } from '@elrondnetwork/erdjs/out';\nimport { getShardOfAddress } from 'utils';\n\ninterface IsCrossShardTransactionPropsType {\n  receiverAddress: string;\n  senderShard?: number;\n  senderAddress?: string;\n}\nexport function isCrossShardTransaction({\n  receiverAddress,\n  senderShard,\n  senderAddress\n}: IsCrossShardTransactionPropsType) {\n  try {\n    const receiver = new Address(receiverAddress);\n    const receiverShard = getShardOfAddress(receiver.pubkey());\n    if (senderShard == null && senderAddress != null) {\n      const sender = new Address(senderAddress);\n      return getShardOfAddress(sender) === receiverShard;\n    }\n    return receiverShard === senderShard;\n  } catch (err) {\n    return false;\n  }\n}\n","import React from 'react';\nimport classnames from 'optionalPackages/classnames';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { Props } from './types';\n\nconst IconState = ({\n  icon,\n  iconSize = '3x',\n  className = 'icon-state',\n  shouldRenderDefaultCss = true\n}: Props) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: classnames('icon-state mx-auto', className, {\n        half: iconSize === '2x'\n      }),\n      icon: classnames('text-white', className)\n    }\n  );\n\n  return (\n    <span className={generatedClasses.wrapper}>\n      <ReactFontawesome.FontAwesomeIcon\n        icon={icon}\n        size={iconSize}\n        className={generatedClasses.icon}\n      />\n    </span>\n  );\n};\n\nexport default withClassNameWrapper(IconState);\n","import React from 'react';\nimport moment from 'optionalPackages/moment';\nimport { logarithmicRest } from 'utils';\nimport storage from 'utils/storage';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { Props } from './type';\n\nconst Progress = ({\n  id,\n  children,\n  progress,\n  done,\n  expiresIn = 10 * 60\n}: Props) => {\n  const ref = React.useRef(null);\n  const intervalRef = React.useRef<any>();\n  const removeTxFromSession = () => {\n    const toastProgress = storage.session.getItem('toastProgress');\n    const hasSessionStoredTx = Boolean(toastProgress?.[id]);\n\n    if (!hasSessionStoredTx) {\n      return;\n    }\n\n    const expires = moment().add(expiresIn, 'seconds').unix();\n\n    delete toastProgress[id];\n\n    storage.session.setItem({\n      key: 'toastProgress',\n      data: toastProgress,\n      expires\n    });\n  };\n\n  const saveToSession = ({ value }: { value: number }) => {\n    const toastProgress = storage.session.getItem('toastProgress') || {};\n    toastProgress[id] = value;\n    storage.session.setItem({\n      key: 'toastProgress',\n      data: toastProgress,\n      expires: moment().add(expiresIn, 'seconds').unix()\n    });\n  };\n\n  const getInitialData = () => {\n    const totalSeconds = progress ? progress.endTime - progress.startTime : 0;\n    const toastProgress = storage.session.getItem('toastProgress');\n    const remaining = progress\n      ? ((progress.endTime - moment().unix()) * 100) / totalSeconds\n      : 0;\n\n    const currentRemaining =\n      toastProgress && id in toastProgress ? toastProgress[id] : remaining;\n    return { currentRemaining, totalSeconds };\n  };\n\n  const { totalSeconds, currentRemaining } = getInitialData();\n\n  const [percentRemaining, setPercentRemaining] =\n    React.useState<number>(currentRemaining);\n\n  React.useEffect(() => {\n    if (progress) {\n      const maxPercent = 90;\n      const perc = totalSeconds / maxPercent;\n      const int = moment.duration(perc.toFixed(2), 's').asMilliseconds();\n\n      if (done) {\n        intervalRef.current = setInterval(() => {\n          if (ref.current !== null) {\n            setPercentRemaining((existing) => {\n              const value = existing - 1;\n              if (value <= 0) {\n                clearInterval(intervalRef.current);\n                removeTxFromSession();\n                return 0;\n              } else {\n                saveToSession({ value });\n                return value;\n              }\n            });\n          }\n        }, 5);\n      } else {\n        intervalRef.current = setInterval(() => {\n          if (ref.current !== null) {\n            setPercentRemaining((existing) => {\n              const decrement =\n                existing > 100 - maxPercent ? 1 : logarithmicRest(existing);\n              const value = existing - decrement;\n              saveToSession({ value });\n              return value;\n            });\n          }\n        }, int);\n      }\n\n      return () => {\n        clearInterval(intervalRef.current);\n      };\n    }\n    return;\n  }, [progress, done]);\n  return progress ? (\n    <div className='progress position-relative' ref={ref}>\n      <div\n        className='progress-bar'\n        role='progressbar'\n        style={{ width: `${percentRemaining}%` }}\n        aria-valuenow={percentRemaining}\n        aria-valuemin={0}\n        aria-valuemax={100}\n      >\n        <div className='content-height'>{children}</div>\n      </div>\n      <div className='d-flex position-absolute w-100'>{children}</div>\n    </div>\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n\nexport default withClassNameWrapper(Progress);\n","function fallbackCopyTextToClipboard(text: string) {\n  let success = false;\n\n  const textArea = document.createElement('textarea');\n  textArea.value = text;\n  textArea.style.position = 'fixed';\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    document.execCommand('copy');\n    success = true;\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n\n  return success;\n}\n\nexport default async function copyTextToClipboard(text: string) {\n  let success = false;\n\n  if (!navigator.clipboard) {\n    success = fallbackCopyTextToClipboard(text);\n  } else {\n    success = await navigator.clipboard.writeText(text).then(\n      function done() {\n        return true;\n      },\n      function error(err) {\n        console.error('Async: Could not copy text: ', err);\n        return false;\n      }\n    );\n  }\n\n  return success;\n}\n","import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport copyTextToClipboard from './helpers/copyToClipboard';\n\ninterface CopyButtonType {\n  text: string;\n  className?: string;\n}\n\nconst CopyButton = ({ text, className = '' }: CopyButtonType) => {\n  const [copyResult, setCopyResut] = React.useState({\n    default: true,\n    success: false\n  });\n\n  const handleCopyToClipboard = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const noSpaces = text ? text.trim() : text;\n    setCopyResut({\n      default: false,\n      success: await copyTextToClipboard(noSpaces)\n    });\n\n    setTimeout(() => {\n      setCopyResut({\n        default: true,\n        success: false\n      });\n    }, 1000);\n  };\n\n  return (\n    <a\n      href='/#'\n      onClick={handleCopyToClipboard}\n      className={`side-action text-secondary ${className}`}\n    >\n      {copyResult.default || !copyResult.success ? (\n        <ReactFontawesome.FontAwesomeIcon icon={icons.faCopy} />\n      ) : (\n        <ReactFontawesome.FontAwesomeIcon\n          icon={icons.faCheck}\n          className='text-primary-highlight'\n        />\n      )}\n    </a>\n  );\n};\n\nexport default withClassNameWrapper(CopyButton);\n","import React from 'react';\nimport { useCallback } from 'react';\nimport debounce from 'lodash.debounce';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\ninterface TrimType {\n  text: string;\n  dataTestId?: string;\n}\n\nconst Trim = ({ text, dataTestId = '' }: TrimType) => {\n  const [overflow, setOverflow] = React.useState(false);\n  const trimRef = React.useRef(document.createElement('span'));\n  const hiddenTextRef = React.useRef(document.createElement('span'));\n\n  const listener = useCallback(\n    debounce(() => {\n      if (trimRef.current && hiddenTextRef.current) {\n        const diff =\n          hiddenTextRef.current.offsetWidth - trimRef.current.offsetWidth;\n        setOverflow(diff > 1);\n      }\n    }, 300),\n    []\n  );\n\n  const addWindowResizeListener = () => {\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  };\n\n  React.useEffect(addWindowResizeListener);\n\n  React.useEffect(() => {\n    listener();\n  }, []);\n\n  return (\n    <span\n      ref={trimRef}\n      className={`trim ${overflow ? 'overflow' : ''}`}\n      data-testid={dataTestId}\n    >\n      <span ref={hiddenTextRef} className='hidden-text-ref'>\n        {text}\n      </span>\n\n      {overflow ? (\n        <React.Fragment>\n          <span className='left'>\n            <span>\n              {String(text).substring(0, Math.floor(text.length / 2))}\n            </span>\n          </span>\n          <span className='ellipsis'>...</span>\n          <span className='right'>\n            <span>{String(text).substring(Math.ceil(text.length / 2))}</span>\n          </span>\n        </React.Fragment>\n      ) : (\n        <span>{text}</span>\n      )}\n    </span>\n  );\n};\n\nexport default withClassNameWrapper(Trim);\n","import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport CopyButton from 'UI/CopyButton';\nimport ExplorerLink from 'UI/ExplorerLink';\nimport Trim from 'UI/Trim';\nimport { getGeneratedClasses, isServerTransactionPending } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { Props } from './types';\n\nconst TxDetails = ({\n  title,\n  transactions,\n  className = 'tx-details',\n  isTimedOut = false,\n  shouldRenderDefaultCss = true\n}: Props) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      title: 'mb-0',\n      statusTransactions: 'mb-2 mt-1',\n      iconSuccess: 'mr-1 text-secondary',\n      iconFailed: 'mr-1 text-secondary',\n      trimContainer: 'text-nowrap trim-fs-sm mr-3',\n      iconPending: 'mr-1 text-secondary fa-spin slow-spin',\n      item: 'tx-description d-flex justify-content-start align-items-center'\n    }\n  );\n\n  const iconSuccessData = {\n    icon: icons.faCheck,\n    classNames: generatedClasses.iconSuccess\n  };\n\n  const iconFailedData = {\n    icon: icons.faTimes,\n    classNames: generatedClasses.iconSuccess\n  };\n\n  const iconPendingData = {\n    icon: icons.faCircleNotch,\n    classNames: generatedClasses.iconPending\n  };\n\n  const iconData: Record<string, typeof iconPendingData> = {\n    pending: iconPendingData,\n    success: iconSuccessData,\n    completed: iconSuccessData,\n    fail: iconFailedData,\n    invalid: iconFailedData,\n    timedOut: iconFailedData\n  };\n  return (\n    <React.Fragment>\n      {title && <div className={generatedClasses.title}>{title}</div>}\n      <div className={generatedClasses.statusTransactions}>\n        {\n          transactions.filter((tx) => !isServerTransactionPending(tx.status))\n            .length\n        }{' '}\n        / {transactions.length} transactions processed\n      </div>\n      {transactions.map(({ hash, status }) => {\n        const iconSrc = iconData[status];\n        return (\n          <div className={generatedClasses.item} key={hash}>\n            {!isTimedOut && iconSrc != null && (\n              <ReactFontawesome.FontAwesomeIcon\n                icon={iconSrc.icon}\n                className={iconSrc.classNames}\n              />\n            )}\n            <span\n              className={generatedClasses.trimContainer}\n              style={{ width: '10rem' }}\n            >\n              <Trim text={hash} />\n            </span>\n            <CopyButton text={hash} />\n            {!isServerTransactionPending(status) && (\n              <ExplorerLink page={`/transactions/${hash}`} className='ml-2' />\n            )}\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default withClassNameWrapper(TxDetails);\n","import React, { useMemo, useRef, useState } from 'react';\n\nimport { useGetTransactionDisplayInfo } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport moment from 'optionalPackages/moment';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { useSelector } from 'redux/DappProviderContext';\nimport { shardSelector } from 'redux/selectors';\nimport { isCrossShardTransaction } from 'services/transactions/isCrossShardTransaction';\nimport { SignedTransactionType } from 'types';\nimport IconState from 'UI/IconState';\nimport Progress from 'UI/Progress';\nimport TxDetails from 'UI/TxDetails';\nimport {\n  getAddressFromDataField,\n  getGeneratedClasses,\n  getIsTransactionPending,\n  getIsTransactionTimedOut\n} from 'utils';\n\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { TransactionToastPropsType } from './types';\n\nconst averageTxDurationMs = 6000;\nconst crossShardRounds = 5;\n\nconst TransactionToast = ({\n  toastId,\n  title = '',\n  shouldRenderDefaultCss = true,\n  className = 'transaction-toast',\n  withTxNonce = false,\n  transactions,\n  status,\n  onClose,\n  startTimeProgress,\n  endTimeProgress,\n  lifetimeAfterSuccess\n}: TransactionToastPropsType) => {\n  const ref = useRef(null);\n  const [shouldRender, setShouldRender] = useState(true);\n  const transactionDisplayInfo = useGetTransactionDisplayInfo(toastId);\n  const accountShard = useSelector(shardSelector);\n\n  const {\n    errorMessage = 'Transaction failed',\n    timedOutMessage = 'Transaction timed out',\n    successMessage = 'Transaction successful',\n    processingMessage = 'Processing transaction'\n  } = transactionDisplayInfo;\n\n  const isSameShard = useMemo(\n    () =>\n      transactions!.reduce(\n        (\n          prevTxIsSameShard: boolean,\n          { receiver, data }: SignedTransactionType\n        ) => {\n          const receiverAddress = getAddressFromDataField({\n            receiver,\n            data\n          });\n          if (receiverAddress == null) {\n            return prevTxIsSameShard;\n          }\n          return (\n            prevTxIsSameShard &&\n            isCrossShardTransaction({\n              receiverAddress,\n              senderShard: accountShard\n            })\n          );\n        },\n        true\n      ),\n    [transactions, accountShard]\n  );\n\n  const shardAdjustedDuration = isSameShard\n    ? averageTxDurationMs\n    : crossShardRounds * averageTxDurationMs;\n\n  const transactionDuration =\n    transactionDisplayInfo?.transactionDuration || shardAdjustedDuration;\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      toastFooter: 'mb-0 text-break',\n      details: 'media-body flex-grow-1',\n      toastContainer: 'w-100 media p-2',\n      wrapper: 'toast-visible clickable',\n      toastHeader: 'd-flex justify-content-between mb-1',\n      iconContainer: 'align-self-center ml-2 mr-2 pr-1',\n      title: 'm-0 font-weight-normal text-nowrap text-truncate',\n      closeButton: 'close d-flex side-action align-items-center mx-2 outline-0'\n    }\n  );\n\n  const [startTime, endTime] = useMemo(() => {\n    const startTime = startTimeProgress || moment().unix();\n    const endTime =\n      endTimeProgress ||\n      moment().add(Number(transactionDuration), 'milliseconds').unix();\n    return [startTime, endTime];\n  }, []);\n\n  const progress = { startTime, endTime };\n\n  const successToastData = {\n    id: toastId,\n    icon: icons.faCheck,\n    expires: 30000,\n    hasCloseButton: true,\n    title: successMessage,\n    iconClassName: 'bg-success'\n  };\n\n  const pendingToastData = {\n    id: toastId,\n    expires: false,\n    icon: icons.faHourglass,\n    hasCloseButton: false,\n    title: processingMessage,\n    iconClassName: 'bg-warning'\n  };\n\n  const failToastData = {\n    id: toastId,\n    icon: icons.faTimes,\n    title: errorMessage,\n    hasCloseButton: true,\n    iconClassName: 'bg-danger'\n  };\n\n  const timedOutToastData = {\n    id: toastId,\n    icon: icons.faTimes,\n    title: timedOutMessage,\n    hasCloseButton: true,\n    iconClassName: 'bg-warning'\n  };\n\n  const isPending = getIsTransactionPending(status);\n  const isTimedOut = getIsTransactionTimedOut(status);\n\n  const toatsOptionsData = {\n    signed: pendingToastData,\n    sent: pendingToastData,\n    pending: pendingToastData,\n    success: successToastData,\n    completed: successToastData,\n    cancelled: failToastData,\n    fail: failToastData,\n    timedOut: timedOutToastData\n  };\n\n  const toastDataState = toatsOptionsData[status!];\n\n  const handleDeleteToast = () => {\n    setShouldRender(false);\n    onClose?.(toastId);\n  };\n\n  if (!shouldRender || transactions == null) {\n    return null;\n  }\n\n  return (\n    <ReactBootstrap.Toast\n      ref={ref}\n      className={generatedClasses.wrapper}\n      key={toastId}\n    >\n      <Progress\n        key={toastId}\n        id={toastId}\n        progress={progress}\n        expiresIn={lifetimeAfterSuccess}\n        done={!isPending || isTimedOut}\n      >\n        <div className={generatedClasses.toastContainer}>\n          <div className={generatedClasses.iconContainer}>\n            <IconState\n              iconSize='2x'\n              icon={toastDataState.icon}\n              className={toastDataState.iconClassName}\n            />\n            {withTxNonce &&\n              transactions.map((tx: any) => (\n                <p key={tx.nonce.valueOf()}>{tx.nonce.valueOf()}</p>\n              ))}\n          </div>\n          <div className={generatedClasses.details} style={{ minWidth: 0 }}>\n            <div className={generatedClasses.toastHeader}>\n              <h5 className={generatedClasses.title}>{toastDataState.title}</h5>\n              {!isPending && (\n                <button\n                  type='button'\n                  className={generatedClasses.closeButton}\n                  onClick={handleDeleteToast}\n                >\n                  <ReactFontawesome.FontAwesomeIcon\n                    icon={icons.faTimes}\n                    size='xs'\n                  />\n                </button>\n              )}\n            </div>\n            <div className={generatedClasses.toastFooter}>\n              <TxDetails\n                transactions={transactions}\n                title={title}\n                isTimedOut={isTimedOut}\n              />\n            </div>\n          </div>\n        </div>\n      </Progress>\n    </ReactBootstrap.Toast>\n  );\n};\n\nexport default withClassNameWrapper(TransactionToast);\n","import React, { useEffect, useState } from 'react';\nimport { useGetSignedTransactions } from 'hooks';\nimport { useGetPendingTransactions } from 'services';\nimport {\n  getToastsIdsFromStorage,\n  setToastsIdsToStorage\n} from 'storage/session';\nimport { SignedTransactionsBodyType } from 'types';\nimport TransactionToast from 'UI/TransactionToast';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\nimport { TransactionsToastListPropsType } from './types';\n\nfunction TransactionsToastList({\n  shouldRenderDefaultCss = true,\n  withTxNonce = false,\n  className = 'transactions-toast-list',\n  pendingTransactions,\n  signedTransactions,\n  successfulToastLifetime\n}: TransactionsToastListPropsType) {\n  const [toastsIds, setToastsIds] = useState<any>([]);\n\n  const pendingTransactionsFromStore =\n    useGetPendingTransactions().pendingTransactions;\n\n  const signedTransactionsFromStore =\n    useGetSignedTransactions().signedTransactions;\n\n  const pendingTransactionsToRender =\n    pendingTransactions || pendingTransactionsFromStore;\n\n  const signedTransactionsToRender =\n    signedTransactions || signedTransactionsFromStore;\n\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper:\n        'toast-messages d-flex flex-column align-items-center justify-content-sm-end',\n      toast: ''\n    }\n  );\n\n  const mappedToastsList = toastsIds?.map((toastId: string) => {\n    const currentTx: SignedTransactionsBodyType =\n      signedTransactionsToRender[toastId];\n    if (\n      currentTx == null ||\n      currentTx?.transactions == null ||\n      currentTx?.status == null\n    ) {\n      return null;\n    }\n\n    const { transactions, status } = currentTx;\n    return (\n      <TransactionToast\n        className={className}\n        key={toastId}\n        transactions={transactions}\n        status={status}\n        toastId={toastId}\n        withTxNonce={withTxNonce}\n        lifetimeAfterSuccess={successfulToastLifetime}\n      />\n    );\n  });\n\n  const mapPendingSignedTransactions = () => {\n    const newToasts = [...toastsIds];\n\n    for (const sessionId in pendingTransactionsToRender) {\n      const hasToast = toastsIds.includes(sessionId);\n\n      if (!hasToast) {\n        newToasts.push(sessionId);\n      }\n    }\n\n    setToastsIds(newToasts);\n  };\n\n  const fetchSessionStorageToasts = () => {\n    const sessionStorageToastsIds = getToastsIdsFromStorage();\n\n    if (sessionStorageToastsIds) {\n      const newToasts = [...toastsIds, ...sessionStorageToastsIds];\n      setToastsIds(newToasts);\n    }\n  };\n\n  const saveSessionStorageToasts = () => {\n    const shouldSaveLocalToasts = Boolean(toastsIds.length);\n    if (!shouldSaveLocalToasts) {\n      return;\n    }\n\n    setToastsIdsToStorage(toastsIds);\n  };\n\n  useEffect(() => {\n    fetchSessionStorageToasts();\n    return () => {\n      saveSessionStorageToasts();\n    };\n  }, []);\n\n  useEffect(() => {\n    mapPendingSignedTransactions();\n  }, [pendingTransactionsToRender]);\n\n  return <div className={generatedClasses.wrapper}>{mappedToastsList}</div>;\n}\n\nexport default withClassNameWrapper(TransactionsToastList);\n","import * as React from 'react';\nimport { getUsdValue } from 'utils/operations';\n\nconst UsdValue = (props: {\n  amount: string;\n  usd: number;\n  'data-testid'?: string;\n}) => {\n  const { amount, usd, ...dataTestId } = props;\n  const value = `≈ $${getUsdValue({ amount, usd })}`;\n  return (\n    <small className='form-text text-secondary mt-0' {...dataTestId}>\n      {`${amount}` === '0' ? '= $0' : value}\n    </small>\n  );\n};\n\nexport default UsdValue;\n","let platform: any = {};\ntry {\n  platform = require('platform');\n} catch (err) {}\n\nexport default platform;\n","let qrcode: any = {};\ntry {\n  qrcode = require('qrcode');\n} catch (err) {}\n\nexport default qrcode;\n","import React, { useEffect, useState } from 'react';\n\nimport platform from 'optionalPackages/platform';\nimport QRCode from 'optionalPackages/qrcode';\nimport { useWalletConnectLogin } from 'services';\nimport ModalContainer from 'UI/ModalContainer';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { ReactComponent as Lighting } from '../WalletConnectLoginButton/lightning.svg';\nimport { LoginModalPropsType } from './types';\n\nfunction WalletConnectLoginContainer({\n  callbackRoute,\n  loginButtonText,\n  title = 'Maiar Login',\n  logoutRoute = '/unlock',\n  className = 'wallect-connect-login-modal',\n  lead = 'Scan the QR code using Maiar',\n  shouldRenderDefaultCss = true,\n  wrapContentInsideModal = true,\n  redirectAfterLogin,\n  token,\n  onClose\n}: LoginModalPropsType) {\n  const [\n    initLoginWithWalletConnect,\n    { error },\n    { uriDeepLink, walletConnectUri }\n  ] = useWalletConnectLogin({\n    logoutRoute,\n    callbackRoute,\n    token,\n    redirectAfterLogin,\n    shouldLoginUser: true\n  });\n  const [qrCodeSvg, setQrCodeSvg] = useState<string>('');\n  const isMobileDevice =\n    platform?.os?.family === 'iOS' || platform?.os?.family === 'Android';\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: 'btn btn-primary px-sm-4 m-1 mx-sm-3',\n      loginText: 'text-left',\n      container: 'm-auto login-container',\n      card: 'card my-3 text-center',\n      cardBody: 'card-body p-4 mx-lg-4',\n      qrCodeSvgContainer: 'mx-auto mb-3',\n      title: 'mb-3',\n      leadText: 'lead mb-0',\n      mobileLoginButton:\n        'btn btn-primary d-inline-flex align-items-center px-4 mt-4',\n      mobileLoginButtonIcon: 'mr-2',\n      errorMessage:\n        'text-danger d-flex justify-content-center align-items-center'\n    }\n  );\n\n  const generateQRCode = async () => {\n    if (!walletConnectUri) {\n      return;\n    }\n\n    const svg = await QRCode.toString(walletConnectUri, {\n      type: 'svg'\n    });\n\n    setQrCodeSvg(svg);\n  };\n\n  useEffect(() => {\n    generateQRCode();\n  }, [walletConnectUri]);\n\n  useEffect(() => {\n    initLoginWithWalletConnect();\n  }, []);\n\n  const content = (\n    <div className={generatedClasses.container}>\n      <div className={generatedClasses.root}>\n        <div className={generatedClasses.card}>\n          <div className={generatedClasses.cardBody}>\n            <div\n              className={generatedClasses.qrCodeSvgContainer}\n              dangerouslySetInnerHTML={{\n                __html: qrCodeSvg\n              }}\n              style={{\n                width: '15rem',\n                height: '15rem'\n              }}\n            />\n            <h4 className={generatedClasses.title}>{title}</h4>\n            {isMobileDevice ? (\n              <React.Fragment>\n                <p className={generatedClasses.leadText}>{loginButtonText}</p>\n                <a\n                  id='accessWalletBtn'\n                  data-testid='accessWalletBtn'\n                  className={generatedClasses.mobileLoginButton}\n                  href={uriDeepLink || undefined}\n                  rel='noopener noreferrer nofollow'\n                  target='_blank'\n                >\n                  <Lighting\n                    className={generatedClasses.mobileLoginButtonIcon}\n                    style={{\n                      width: '0.9rem',\n                      height: '0.9rem'\n                    }}\n                  />\n                  {title}\n                </a>\n              </React.Fragment>\n            ) : (\n              <p className={generatedClasses.leadText}>{lead}</p>\n            )}\n            <div>\n              {error && (\n                <p className={generatedClasses.errorMessage}>{error}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return wrapContentInsideModal ? (\n    <ModalContainer\n      title={'Login with Maiar'}\n      className={className}\n      onClose={onClose}\n    >\n      {content}\n    </ModalContainer>\n  ) : (\n    content\n  );\n}\n\nexport default withClassNameWrapper(WalletConnectLoginContainer);\n","import React, { Fragment, useState } from 'react';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport WalletConnectLoginContainer from '../WalletConnectLoginContainer';\nimport { WalletConnectLoginButtonPropsType } from './types';\n\nconst WalletConnectLoginButton = ({\n  children,\n  callbackRoute,\n  onModalOpens,\n  onModalCloses,\n  loginButtonText = 'Maiar App',\n  title = 'Maiar Login',\n  logoutRoute = '/unlock',\n  shouldRenderDefaultCss = true,\n  wrapContentInsideModal = true,\n  redirectAfterLogin = false,\n  buttonClassName,\n  className = 'wallect-connect-login',\n  lead = 'Scan the QR code using Maiar',\n  token,\n  hideButtonWhenModalOpens = false\n}: WalletConnectLoginButtonPropsType) => {\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n        buttonClassName != null ? buttonClassName : ''\n      }`,\n      loginText: 'text-left'\n    }\n  );\n\n  const handleOpenModal = () => {\n    setShowLoginModal(true);\n    onModalOpens?.();\n  };\n\n  const handleCloseModal = () => {\n    setShowLoginModal(false);\n    onModalCloses?.();\n  };\n\n  const shouldRenderButton = !hideButtonWhenModalOpens || !showLoginModal;\n  return (\n    <Fragment>\n      {shouldRenderButton && (\n        <button onClick={handleOpenModal} className={generatedClasses.wrapper}>\n          {children || (\n            <span className={generatedClasses.loginText}>\n              {loginButtonText}\n            </span>\n          )}\n        </button>\n      )}\n      {showLoginModal && (\n        <WalletConnectLoginContainer\n          callbackRoute={callbackRoute}\n          loginButtonText={loginButtonText}\n          title={title}\n          token={token}\n          className={className}\n          logoutRoute={logoutRoute}\n          lead={lead}\n          wrapContentInsideModal={wrapContentInsideModal}\n          redirectAfterLogin={redirectAfterLogin}\n          onClose={handleCloseModal}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default withClassNameWrapper(WalletConnectLoginButton);\n","import React from 'react';\nimport { useWebWalletLogin } from 'services';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { WebWalletLoginButtonPropsType } from './types';\n\nconst WebWalletLoginButton: (\n  props: WebWalletLoginButtonPropsType\n) => JSX.Element = ({\n  children,\n  token,\n  className = 'web-wallet-login',\n  callbackRoute,\n  buttonClassName,\n  loginButtonText = 'Elrond Web Wallet',\n  shouldRenderDefaultCss = true\n}) => {\n  const [onInitiateLogin] = useWebWalletLogin({\n    callbackRoute,\n    token\n  });\n  const classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n      buttonClassName != null ? buttonClassName : ''\n    }`,\n    loginText: 'text-left'\n  });\n\n  const handleLogin = () => {\n    onInitiateLogin();\n  };\n\n  return (\n    <button onClick={handleLogin} className={classes.wrapper}>\n      {children || <span className={classes.loginText}>{loginButtonText}</span>}\n    </button>\n  );\n};\n\nexport default withClassNameWrapper(WebWalletLoginButton);\n","import React from 'react';\nimport { useGetLoginInfo } from 'hooks';\nimport ExtensionLoginButton from 'UI/extension/LoginButton';\n\nimport LedgerLoginButton from 'UI/ledger/LoginButton';\nimport WalletConnectLoginButton from 'UI/walletConnect/WalletConnectLoginButton';\nimport WebWalletLoginButton from 'UI/webWallet/LoginButton';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { Props } from './types';\n\nconst UnlockPage = ({\n  loginRoute,\n  title = 'Login',\n  className = 'unlock-page',\n  shouldRenderDefaultCss = true,\n  LedgerLoginButtonText = 'Ledger',\n  description = 'Pick a login method',\n  WalletConnectLoginButtonText = 'Maiar',\n  ExtensionLoginButtonText = 'Extension',\n  WebWalletLoginButtonText = 'Web wallet'\n}: Props) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: `home d-flex flex-fill align-items-center ${wrapperClassName}`,\n      title: 'mb-4',\n      description: 'mb-4',\n      cardContainer: 'm-auto',\n      card: 'card my-4 text-center',\n      cardBody: 'card-body py-4 px-2 px-sm-2 mx-lg-4'\n    }\n  );\n  const { isLoggedIn } = useGetLoginInfo();\n\n  React.useEffect(() => {\n    if (isLoggedIn) {\n      window.location.href = loginRoute;\n    }\n  }, [isLoggedIn]);\n\n  return (\n    <div className={generatedClasses.wrapper}>\n      <div className={generatedClasses.cardContainer}>\n        <div className={generatedClasses.card}>\n          <div className={generatedClasses.cardBody}>\n            <h4 className={generatedClasses.title}>{title}</h4>\n            <p className={generatedClasses.description}>{description}</p>\n            <ExtensionLoginButton\n              callbackRoute={loginRoute}\n              loginButtonText={ExtensionLoginButtonText}\n            />\n            <WebWalletLoginButton\n              callbackRoute={loginRoute}\n              loginButtonText={WebWalletLoginButtonText}\n            />\n            <LedgerLoginButton\n              loginButtonText={LedgerLoginButtonText}\n              callbackRoute={loginRoute}\n            />\n            <WalletConnectLoginButton\n              callbackRoute={loginRoute}\n              loginButtonText={WalletConnectLoginButtonText}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withClassNameWrapper(UnlockPage);\n","import { ApiProvider } from '@elrondnetwork/erdjs';\nimport { networkSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { NetworkType } from 'types';\n\nlet apiProvider: ApiProvider | null = null;\n\nexport function initializeApiProvider(networkConfig?: NetworkType) {\n  const initializationNetworkConfig =\n    networkConfig || networkSelector(store.getState());\n  apiProvider = new ApiProvider(initializationNetworkConfig.apiAddress, {\n    timeout: Number(initializationNetworkConfig.apiTimeout)\n  });\n\n  return apiProvider;\n}\n\nexport function getApiProvider(): ApiProvider {\n  if (apiProvider == null) {\n    return initializeApiProvider();\n  } else {\n    return apiProvider;\n  }\n}\n","const mnemonicWords = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo'\n];\n\nexport function getMnemonicWords() {\n  return mnemonicWords;\n}\n"],"names":["undefined","ERROR_SIGNING","TRANSACTION_CANCELLED","ERROR_SIGNING_TX","PROVIDER_NOT_INTIALIZED","MISSING_PROVIDER_MESSAGE","DEFAULT_MIN_GAS_LIMIT","configEndpoint","fallbackNetworkConfigurations","devnet","id","chainId","name","egldLabel","egldDenomination","decimals","gasPerDataByte","walletConnectDeepLink","walletConnectBridgeAddresses","walletAddress","apiAddress","explorerAddress","apiTimeout","testnet","mainnet","ledgerErrorCodes","code","message","gasPriceModifier","gasLimit","gasPrice","denomination","version","ledgerContractDataEnabledValue","dappInitRoute","walletSignSession","TransactionServerStatusesEnum","TransactionBatchStatusesEnum","LoginMethodsEnum","NotificationTypesEnum","TypesOfSmartContractCallsEnum","EnvironmentsEnum","DAPP_INIT_ROUTE","getProviderType","provider","constructor","WalletProvider","wallet","WalletConnectProvider","walletconnect","HWProvider","ledger","ExtensionProvider","extension","EmptyProvider","none","extra","newWalletProvider","getLedgerConfiguration","initializedHwWalletP","isInitialized","Error","hwApp","getAppConfiguration","contractData","dataEnabled","notInitializedError","caller","init","login","options","logout","getAddress","isConnected","sendTransaction","transaction","signTransaction","signTransactions","transactions","signMessage","emptyProvider","accountProvider","externalProvider","setAccountProvider","setExternalProvider","setExternalProviderAsAccountProvider","getAccountProvider","getExternalProvider","logoutAction","createAction","loginAction","payload","localStorageKeys","loginExpiresAt","hasLocalStorage","localStorage","setItem","key","data","expires","String","JSON","stringify","getItem","item","deserializedItem","parse","hasOwnProperty","expired","moment","unix","removeItem","require","err","sessionStorage","clear","storage","session","local","getNewLoginExpiresTimestamp","Date","setHours","getHours","setLoginExpiresAt","expiresAt","initialState","loginMethod","walletConnectLogin","ledgerLogin","tokenLogin","walletLogin","extensionLogin","loginInfoSlice","createSlice","reducers","setLoginMethod","state","action","setTokenLogin","setTokenLoginSignature","signature","setWalletLogin","setWalletConnectLogin","setLedgerLogin","extraReducers","builder","addCase","actions","reducer","optionalRedirect","callbackUrl","shouldRedirect","setTimeout","window","location","pathname","includes","href","getBridgeAddressFromNetwork","Math","floor","random","length","defaultNetwork","walletConnectBridgeAddress","network","chainID","networkConfigSlice","initializeNetworkConfig","omit","setChainID","emptyAccount","balance","address","nonce","account","ledgerAccount","publicKey","walletConnectAccount","isAccountLoading","accountLoadingError","accountInfoSlice","setAddress","Address","hex","setAccount","setAccountNonce","setAccountShard","shard","setLedgerAccount","updateLedgerAccount","index","setWalletConnectAccount","setIsAccountLoading","setAccountLoadingError","REHYDRATE","accountInfo","pendingBatchTransactionsStates","sent","successBatchTransactionsStates","success","failBatchTransactionsStates","fail","cancelled","timedOut","timedOutBatchTransactionsStates","pendingServerTransactionsStatuses","pending","successServerTransactionsStates","completedServerTransactionsStates","completed","failServerTransactionsStates","invalid","getIsTransactionCompleted","status","getIsTransactionPending","isBatchTransactionPending","isServerTransactionPending","getIsTransactionSuccessful","isBatchTransactionSuccessful","isServerTransactionSuccessful","getIsTransactionFailed","isBatchTransactionFailed","isServerTransactionFailed","getIsTransactionTimedOut","isBatchTransactionTimedOut","TransactionTypesEnum","isUtf8","str","i","charCodeAt","decodePart","part","decodedPart","hexPart","Buffer","from","toString","trim","error","isStringBase64","string","atob","encodeToBase64","btoa","decodeBase64","getAllStringOccurrences","sourceStr","searchStr","startingIndices","indexOccurence","indexOf","push","parseMultiEsdtTransferData","contractCallDataIndex","startsWith","MultiESDTNFTTransfer","split","receiver","encodedTxCount","rest","txCount","BigNumber","toNumber","itemIndex","txIndex","type","nftTransaction","token","encodedNonce","esdtTransaction","amount","isDifferentFromTxCount","hasInvalidNoOfAdSigns","some","tx","adSignOccurences","hasAdStart","scCallData","scCall","console","canTransformToPublicKey","checkAddress","Boolean","bech32","addressIsValid","destinationAddress","isValidBach","test","noData","tokenId","decodeData","nonceIndex","amountIndex","parts","decodedParts","map","getTokenFromData","isTokenTransfer","ESDTTransfer","nftTransfer","ESDTNFTTransfer","encodedToken","encodedAmount","replace","e","collection","quantity","every","el","erdLabel","buildUrlParams","search","urlParams","urlSearchParams","URLSearchParams","params","Object","fromEntries","nextUrlParams","builtCallbackUrl","url","entries","URL","origin","parseTransactionAfterSigning","isLedger","TransactionVersion","withTxHashSignVersion","TransactionOptions","withTxHashSignOptions","parsedTransaction","toPlainObject","hash","getHash","signedTransactions","transactionsToSign","signTransactionsError","customTransactionInformationForSessionId","defaultCustomInformation","signWithoutSending","sessionInformation","redirectAfterSign","transactionsSlice","moveTransactionsToSignedState","sessionId","errorMessage","customTransactionInformation","clearSignedTransaction","clearTransactionToSign","updateSignedTransaction","updateSignedTransactions","updateSignedTransactionStatus","transactionHash","areTransactionsSuccessful","areTransactionsFailed","setTransactionsToSign","clearAllTransactionsToSign","clearAllSignedTransactions","setSignTransactionsError","parsedSignedTransactions","reduce","acc","txTimestamp","expiration","isExpired","defaultTransactionErrorMessage","defaultTransactionSuccessMessage","defaultTransactionProcessingMessage","defaultTransactionSubmittedMessage","signTransactionsSlice","setTransactionsDisplayInfo","transactionsDisplayInfo","successMessage","processingMessage","submittedMessage","transactionDuration","clearTransactionsInfoForSessionId","clearTransactionsInfo","modalsSlice","setTxSubmittedModal","txSubmittedModal","setNotificationModal","notificationModal","clearTxSubmittedModal","clearNotificationModal","createDeepEqualSelector","createSelectorCreator","defaultMemoize","isEqual","accountInfoSelector","addressSelector","accountSelector","accountBalanceSelector","accountNonceSelector","valueOf","shardSelector","ledgerAccountSelector","isAccountLoadingSelector","loginInfoSelector","loginInfo","loginMethodSelector","isLoggedInSelector","walletConnectLoginSelector","ledgerLoginSelector","walletLoginSelector","whitelistedActions","throttledSetNewExpires","throttle","loginSessionMiddleware","store","next","appState","getState","loginTimestamp","isLoggedIn","now","log","dispatch","networkConfig","modals","transactionsInfo","transactionsInfoPersistConfig","transactionsReducer","blacklist","persistReducer","rootReducer","combineReducers","localStorageReducers","migrations","persistConfig","whitelist","migrate","createMigrate","debug","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","ignoredPaths","concat","persistor","persistStore","networkConfigSelector","chainIDSelector","ChainID","walletConnectBridgeAddressSelector","walletConnectDeepLinkSelector","networkSelector","apiNetworkSelector","egldLabelSelector","newTransaction","rawTransaction","dataPayload","TransactionPayload","fromEncoded","Transaction","value","Balance","fromString","Nonce","GasLimit","defaultGasLimit","GasPrice","defaultVersion","transactionsSelectors","signedTransactionsSelector","signTransactionsErrorSelector","selectTxByStatus","txStatusVerifier","txBody","pendingSignedTransactionsSelector","successfulTransactionsSelector","completedTransactionsSelector","failedTransactionsSelector","timedOutTransactionsSelector","transactionsToSignSelector","transactionStatusSelector","_","transactionSessionId","defaultTransactionInfo","transactionsInfoSelectors","transactionDisplayInfoSelector","Number","modalsSliceSelector","notificationModalSelector","getIsLoggedIn","onRedirect","providerType","switchTrue","object","defaultValue","obj","result","keys","cur","getAccountProviderType","getChainID","getNetworkConfig","getEgldLabel","getIsProviderEqualTo","comparedProviderType","loggedIn","Promise","resolve","proxyProvider","initializeProxyProvider","initializationNetworkConfig","ProxyProvider","timeout","getProxyProvider","getAccountFromProxyProvider","proxy","getAccount","getNetworkConfigFromProxyProvider","setNonce","getLatestNonce","currentAccountNonce","isNaN","max","getAccountBalance","accountAddress","setNewAccount","accountData","refreshAccount","initialized","isAddressOfMetachain","pubKey","metachainPrefix","pubKeyPrefix","slice","equals","zeroAddress","alloc","fill","getShardOfAddress","hexPubKey","numShards","maskHigh","parseInt","maskLow","lastByteOfPubKey","callbackRoute","signableMessage","SignableMessage","encodeURIComponent","signedMessage","loginWithExternalProvider","logarithmicRest","position","minp","maxp","minv","maxv","scale","exp","stringIsInteger","integer","positiveNumbersOnly","stringInteger","match","bNparsed","limit","comparedTo","stringIsFloat","wholes","charAt","number","join","esdtParts","nftParts","defaultResult","isEsdt","isNft","isEgld","getIdentifierType","identifier","pipe","previous","condition","then","newValue","Function","config","ROUNDING_MODE","ROUND_FLOOR","denominate","input","configDenomination","configDecimals","showLastNonZeroDecimal","showIsLessThanDecimalsLabel","addCommas","Token","toDenominated","current","bnBalance","isZero","integerPart","decimalPart","bNdecimalPart","decimalPlaces","min","shownDecimalsAreZero","isGreaterThan","substring","formatted","toFormat","formattedBalance","integerPartZero","numericPart","decimalSide","zeroPlaceholders","Array","zeros","minAmount","nominate","customDenomination","createBalanceBuilder","TokenType","Fungible","placeholderData","to","calculateFeeLimit","minGasLimit","inputData","defaultGasPrice","validGasLimit","validGasPrice","Zero","NetworkConfig","MinGasLimit","GasPerDataByte","GasPriceModifier","parseFloat","bNfee","computeFee","fee","getUsdValue","usd","sum","toFixed","toLocaleString","maximumFractionDigits","minimumFractionDigits","ESDTTransferTypes","isContract","sender","isValid","isContractAddress","extractedAddress","getAddressFromDataField","isExtractedAddressContractCall","isSelfESDTContract","isHexValidCharacters","toLowerCase","isHexValidLength","restParts","isSelfTransaction","isCorrectESDTType","areDataPartsValid","parsedData","addressIndex","getAddressIndex","classnames","getGeneratedClasses","className","shouldRenderDefaultCss","defaultStyles","defaultClassNames","classNames","wrapperClassName","defaultContextValue","DappCoreContext","React","createContext","useDispatch","createDispatchHook","useSelector","createSelectorHook","useExtensionLogin","redirectAfterLogin","useState","setError","isLoading","setIsLoading","initiateLogin","getInstance","isSuccessfullyInitialized","warn","providerLoginData","loginToken","loginFailed","useWebWalletLogin","setMinutes","getMinutes","walletLoginData","loginData","ledgerAppErrorText","failInitializeErrorText","defaultAddressesPerPage","useLedgerLogin","addressesPerPage","hwWalletP","startIndex","setStartIndex","accounts","setAccounts","setVersion","contractDataEnabled","setContractDataEnabled","selectedAddress","setSelectedAddress","showAddressList","setShowAddressList","dispatchLoginActions","loginType","onLoginFailed","customMessage","statusCode","loginUser","hwWalletProvider","onConfirmSelectedAddress","hasContractDataEnabled","fetchAccounts","getAccounts","ledgerData","onStartLogin","onSelectAddress","newSelectedAddress","onGoToNextPage","onGoToPrevPage","useEffect","useUpdateEffect","effect","dependencies","isInitialMount","useRef","useWalletConnectLogin","logoutRoute","heartbeatInterval","wcUri","setWcUri","providerRef","heartbeatDisconnectInterval","hasWcUri","uriDeepLink","handleHeartbeat","interval","setInterval","clearInterval","generateWcUri","isProviderConnected","walletConnector","connected","method","sendCustomMessage","handleOnLogout","handleOnLogin","getSignature","hasSignature","loginActionData","on","loginProvider","shouldGenerateWcUri","providerHandlers","onClientLogin","onClientLogout","newProvider","walletConnectUri","hasUri","wcUriWithToken","removeTransactionsToSign","removeSignedTransaction","removeAllSignedTransactions","removeAllTransactionsToSign","calcTotalFee","totalFee","forEach","getGasLimit","getGasPrice","getData","plus","networkConstants","accountBalance","storeChainId","transactionsPayload","isArray","bNtotalFee","bNbalance","hasSufficientFunds","minus","notificationPayload","warning","iconClassName","title","description","hasValidChainId","signTransactionsPayload","ErrorCodesEnum","calculateGasLimit","bNconfigGasLimit","configGasLimit","bNgasPerDataByte","bNgasValue","times","bNgasLimit","transformAndSignTransactions","configGasPrice","validatedReceiver","addr","invalidReceiver","transactionsChainId","sendTransactions","completedTransactionsDelay","areComplexTransactions","getPrototypeOf","txToSign","useTrackTransactionStatus","transactionId","onSuccess","onFail","onCancelled","onTimedOut","onCompleted","transactionsBatch","isPending","isFailed","isTimedOut","isSuccessful","isCompleted","isCancelled","useGetPendingTransactions","pendingTransactions","pendingTransactionsArray","hasPendingTransactions","useGetFailedTransactions","failedTransactions","failedTransactionsArray","hasFailedTransactions","useGetSuccessfulTransactions","successfulTransactions","successfulTransactionsArray","hasSuccessfulTransactions","multiTxData","useParseMultiEsdtTransferData","parsedTransactionsByDataField","setParsedTransactions","allTransactions","setAllTransactions","addTransactionDataToParsedInfo","txInfo","existing","getTxInfoByDataField","multiTransactionData","extractTransactionESDTData","allTxs","transactionIndex","txData","multiTxs","trx","idx","newTx","getReceiver","useGetActiveTransactionsStatus","timedOutTransactions","completedTransactions","hasActiveTransactions","useGetCompletedTransactions","completedTransactionsArray","hasCompletedTransactions","sendSignedTransactions","promises","axios","post","all","response","txHash","getTransactionsByHashes","hashes","get","withScResults","responseData","previousStatus","txOnNetwork","find","txResponse","invalidTransaction","results","pendingResults","hasStatusChanged","ProviderInitializer","setLedgerData","initWalletLoginProvider","refreshChainID","initializeProvider","fetchAccount","setLedgerAccountInfo","tryAuthenticateWalletUser","getInitializedHwWalletProvider","setLedgerProvider","ledgerConfig","setExtensionProvider","sendSignedTransactionsAsync","getTransactionsByHash","OverrideDefaultBehaviourContext","TransactionSender","useContext","sendingRef","clearSignInfo","handleSendTransactions","sessionIds","skipSending","isSessionIdSigned","signed","shouldSendCurrentSession","transactionsToSend","transactionObject","Signature","applySignature","responseHashes","newStatus","newTransactions","submittedModalPayload","history","pushState","document","TransactionStatusTracker","transactionPayload","intervalRef","isFetchingStatusRef","retriesRef","timeoutRefs","manageTimedOutTransactions","checkTransactionStatus","serverTransactions","retriesForThisHash","transitionToCompletedDelay","resultWithError","scResult","returnMessage","TransactionsTracker","mappedPendingTransactionsTrackers","Fragment","getServerConfiguration","cleanApiAddress","endsWith","configUrl","getServerConfigurationForEnvironment","environment","fallbackConfig","getScamAddressData","addressToVerify","baseURL","useGetNetworkConfig","useGetNotification","notification","clearNotification","useGetTransactionDisplayInfo","toastId","useParseSignedTransactions","searchData","qs","signSessionId","getTransactionsFromWalletUrl","useSignTransactions","savedCallback","hasTransactions","onAbort","isExtensionProvider","cancelAction","onCancel","isTxCancelled","errorsMessages","signWithWallet","buildedCallbackUrl","signTransactionsWithProvider","redirectRoute","isCurrentRoute","shouldRedirectAfterSign","isProviderInitialized","hasSameTransactions","hasAllTransactionsSigned","shouldMoveTransactionsToSignedState","signedTransactionsArray","values","setTransactionNonces","latestNonce","proxyAccount","isSigningWithWebWallet","isSigningWithProvider","mappedTransactions","defaultErrorMessage","useGetSignedTransactions","hasSignedTransactions","swr","fetcher","useGetTokenDetails","tokenEndpoint","useSwr","selectedToken","tokenDenomination","tokenLabel","tokenAvatar","assets","svgUrl","useGetAccountInfo","useGetLoginInfo","useGetAccountProvider","verifiedAddresses","useSignTransactionsWithLedger","verifyReceiverScam","currentStep","setCurrentStep","setSignedTransactions","currentTransaction","setCurrentTransaction","waitingForDevice","setWaitingForDevice","isLastTransaction","extractTransactionsInfo","dataField","transactionTokenInfo","notSender","verified","scamInfo","isTokenTransaction","receiverScamInfo","info","reset","sign","trueForLedger","signedTx","newSignedTx","newSignedTransactions","exising","errMessage","signTx","isFirst","continueWithoutSigning","onSignTransaction","onNext","nextStep","onPrev","useGetSignTransactionsError","getTimeout","minutes","debounce","useIdleTimer","onLogout","dappLogout","onIdle","useReactIdleTimer","getAccountShard","AppInitializer","customNetworkConfig","children","setInitialized","initializeProviders","initializeNetwork","fetchConfigFromServer","skipFetchFromServer","customNetworkApiAddress","localConfig","fallbackApiAddress","serverConfig","apiConfig","initializeApp","DappProvider","memoizedSendSignedTransactionsAsync","useCallback","memoizedGetTransactionsByHash","Provider","context","PersistGate","loading","AuthenticatedRoutesWrapper","routes","unlockRoute","authenticatedRoutesRef","filter","route","authenticatedRoute","isOnAuthenticatedRoute","path","TransactionParameter","functionName","inputParameters","outputParameters","withClassNameWrapper","Component","props","denominateInvalid","denominateValid","showLabel","denominatedValue","valueParts","hasNoDecimals","isNotZero","Denominate","DenominateWrapper","denominateProps","fontawesomeFreeSolidIcons","ReactFontawesome","ExplorerLink","page","text","target","FontAwesomeIcon","icon","icons","faSearch","ExtensionLoginButton","buttonClassName","loginButtonText","onInitiateLogin","isFirefox","navigator","userAgent","classes","wrapper","loginText","noExtensionButtonWrapper","noExtensionButtonContent","noExtensionButtonTitle","noExtensionButtonIcon","handleLogin","elrondWallet","rel","faArrowRight","onClick","ReactBootstrap","ModalContainer","noSpacer","onClose","Modal","show","backdrop","onHide","animation","centered","size","faTimes","PageState","iconClass","dataTestId","iconBgClass","iconSize","generatedClasses","iconContainer","trimHash","keep","start","end","noBalance","AddressRow","setBalance","handleChange","checked","fetchBalance","onChange","role","htmlFor","ledgerWaitingText","AddressTable","cardBody","tableWrapper","tableContent","tableHeader","tableHeaderText","buttonsWrapper","arrowButton","confirmButton","faCircleNotch","disabled","faChevronLeft","faChevronRight","ConfirmAddress","noBorder","LedgerConnect","connectPageContent","LedgerLogo","LedgerLoginContainer","wrapContentInsideModal","spinner","getContent","LedgerLoginButton","onModalOpens","onModalCloses","shouldRenderDefaultModalCss","hideButtonWhenModalOpens","showLoginModal","setShowLoginModal","handleOpenModal","handleCloseModal","shouldRenderButton","typedIcons","notificationTypesToIcons","faExclamationTriangle","defaultIcon","NotificationModal","showModal","onDone","Dot","color","ProgressSteps","totalSteps","dots","isCurrentStep","SignWithExtensionModal","handleClose","closeBtn","close","preventDefault","freeSolidIcons","faHourglass","Simple","Combined","small","getIdentifierWithoutNonce","tokenParts","getIcon","isEgldTransfer","src","EgldIcon","faDiamond","getDetails","symbol","label","TokenDetails","render","process","combined","allOccurences","matchAll","RegExp","a","TransactionData","highlight","isScCall","output","encodedScCall","remainingDataFields","SignStep","transactionData","onCloseClick","signBtnLabel","denominatedAmount","getValue","scamReport","showProgressSteps","formGroup","formLabel","contentWrapper","tokenWrapper","tokenValue","scamReportIcon","tokenAmountLabel","tokenAmountValue","dataFormGroup","cancelButton","signButton","tokenlabel","Icon","Label","Symbol","SignWithLedgerModal","container","SignWithWalletConnectModal","hasMultipleTransactions","SignTransactionsModals","CustomConfirmScreens","signError","signProps","Ledger","WalletConnect","Extension","Extra","SessionStorageKeysEnum","setToastsIdsToStorage","ids","toasts","getToastsIdsFromStorage","toastsIds","isCrossShardTransaction","receiverAddress","senderShard","senderAddress","receiverShard","pubkey","IconState","half","Progress","progress","done","expiresIn","ref","removeTxFromSession","toastProgress","hasSessionStoredTx","add","saveToSession","getInitialData","totalSeconds","endTime","startTime","remaining","currentRemaining","percentRemaining","setPercentRemaining","maxPercent","perc","int","duration","asMilliseconds","decrement","style","width","fallbackCopyTextToClipboard","textArea","createElement","body","appendChild","focus","select","execCommand","removeChild","copyTextToClipboard","clipboard","writeText","CopyButton","copyResult","setCopyResut","handleCopyToClipboard","stopPropagation","noSpaces","faCopy","faCheck","Trim","overflow","setOverflow","trimRef","hiddenTextRef","listener","diff","offsetWidth","addWindowResizeListener","addEventListener","removeEventListener","ceil","TxDetails","statusTransactions","iconSuccess","iconFailed","trimContainer","iconPending","iconSuccessData","iconFailedData","iconPendingData","iconData","iconSrc","averageTxDurationMs","crossShardRounds","TransactionToast","withTxNonce","startTimeProgress","endTimeProgress","lifetimeAfterSuccess","shouldRender","setShouldRender","transactionDisplayInfo","accountShard","timedOutMessage","isSameShard","useMemo","prevTxIsSameShard","shardAdjustedDuration","toastFooter","details","toastContainer","toastHeader","closeButton","successToastData","hasCloseButton","pendingToastData","failToastData","timedOutToastData","toatsOptionsData","toastDataState","handleDeleteToast","Toast","minWidth","TransactionsToastList","successfulToastLifetime","setToastsIds","pendingTransactionsFromStore","signedTransactionsFromStore","pendingTransactionsToRender","signedTransactionsToRender","toast","mappedToastsList","currentTx","mapPendingSignedTransactions","newToasts","hasToast","fetchSessionStorageToasts","sessionStorageToastsIds","saveSessionStorageToasts","shouldSaveLocalToasts","UsdValue","platform","qrcode","WalletConnectLoginContainer","lead","shouldLoginUser","initLoginWithWalletConnect","qrCodeSvg","setQrCodeSvg","isMobileDevice","os","family","card","qrCodeSvgContainer","leadText","mobileLoginButton","mobileLoginButtonIcon","generateQRCode","QRCode","svg","content","root","dangerouslySetInnerHTML","__html","height","Lighting","WalletConnectLoginButton","WebWalletLoginButton","UnlockPage","loginRoute","LedgerLoginButtonText","WalletConnectLoginButtonText","ExtensionLoginButtonText","WebWalletLoginButtonText","cardContainer","apiProvider","initializeApiProvider","ApiProvider","getApiProvider","mnemonicWords","getMnemonicWords"],"mappings":"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"}